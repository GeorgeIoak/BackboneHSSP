ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DataFetch.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HEX_ReadSiliconId,"ax",%progbits
  19              		.align	2
  20              		.global	HEX_ReadSiliconId
  21              		.thumb
  22              		.thumb_func
  23              		.type	HEX_ReadSiliconId, %function
  24              	HEX_ReadSiliconId:
  25              	.LFB63:
  26              		.file 1 "DataFetch.c"
   1:DataFetch.c   **** /******************************************************************************
   2:DataFetch.c   **** * File Name: DataFetch.c
   3:DataFetch.c   **** * Version 1.0
   4:DataFetch.c   **** *
   5:DataFetch.c   **** * Description:
   6:DataFetch.c   **** *  This source file contains the functions to fetch data from the Hex image and 
   7:DataFetch.c   **** *  load in to the arrays used for Programming.
   8:DataFetch.c   **** *
   9:DataFetch.c   **** * Owner:
  10:DataFetch.c   **** *	Tushar Rastogi, Application Engineer (tusr@cypress.com)
  11:DataFetch.c   **** *
  12:DataFetch.c   **** * Related Document:
  13:DataFetch.c   **** *	AN84858 - PSoC 4 Programming using an External Microcontroller (HSSP)
  14:DataFetch.c   **** *
  15:DataFetch.c   **** * Hardware Dependency:
  16:DataFetch.c   **** *   PSoC 5LP Development Kit - CY8CKIT-050
  17:DataFetch.c   **** *
  18:DataFetch.c   **** * Code Tested With:
  19:DataFetch.c   **** *	PSoC Creator 3.2
  20:DataFetch.c   **** *	ARM GCC 4.8.4
  21:DataFetch.c   **** *	CY8CKIT-050
  22:DataFetch.c   **** *
  23:DataFetch.c   **** * Note:
  24:DataFetch.c   **** *  The definitions of the functions used in this file will change based on the
  25:DataFetch.c   **** *  interface used to get Hex file data.
  26:DataFetch.c   **** *******************************************************************************
  27:DataFetch.c   **** * Copyright (2015), Cypress Semiconductor Corporation.
  28:DataFetch.c   **** *******************************************************************************
  29:DataFetch.c   **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  30:DataFetch.c   **** * protected by and subject to worldwide patent protection (United States and
  31:DataFetch.c   **** * foreign), United States copyright laws and international treaty provisions.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 2


  32:DataFetch.c   **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  33:DataFetch.c   **** * license to copy, use, modify, create derivative works of, and compile the
  34:DataFetch.c   **** * Cypress Source Code and derivative works for the sole purpose of creating
  35:DataFetch.c   **** * custom software in support of licensee product to be used only in conjunction
  36:DataFetch.c   **** * with a Cypress integrated circuit as specified in the applicable agreement.
  37:DataFetch.c   **** * Any reproduction, modification, translation, compilation, or representation of
  38:DataFetch.c   **** * this software except as specified above is prohibited without the express
  39:DataFetch.c   **** * written permission of Cypress.
  40:DataFetch.c   **** *
  41:DataFetch.c   **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  42:DataFetch.c   **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  43:DataFetch.c   **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  44:DataFetch.c   **** * Cypress reserves the right to make changes without further notice to the
  45:DataFetch.c   **** * materials described herein. Cypress does not assume any liability arising out
  46:DataFetch.c   **** * of the application or use of any product or circuit described herein. Cypress
  47:DataFetch.c   **** * does not authorize its products for use as critical components in life-support
  48:DataFetch.c   **** * systems where a malfunction or failure may reasonably be expected to result in
  49:DataFetch.c   **** * significant injury to the user. The inclusion of Cypress' product in a life-
  50:DataFetch.c   **** * support systems application implies that the manufacturer assumes all risk of
  51:DataFetch.c   **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  52:DataFetch.c   **** * limited by and subject to the applicable Cypress software license agreement.
  53:DataFetch.c   **** 
  54:DataFetch.c   **** ******************************************************************************/
  55:DataFetch.c   **** 
  56:DataFetch.c   **** /******************************************************************************
  57:DataFetch.c   **** *   Header file Inclusion
  58:DataFetch.c   **** ******************************************************************************/
  59:DataFetch.c   **** #include "DataFetch.h"
  60:DataFetch.c   **** #include "HexImage.h"
  61:DataFetch.c   **** #include <device.h>
  62:DataFetch.c   **** 
  63:DataFetch.c   **** /******************************************************************************
  64:DataFetch.c   **** *   Global Constant declaration
  65:DataFetch.c   **** ******************************************************************************/
  66:DataFetch.c   **** 
  67:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  68:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA **************/
  69:DataFetch.c   **** /* The below Global constants are from HexImage.h. The data from these array of
  70:DataFetch.c   ****    constants are loaded in to the arrays passed a parameters to function.
  71:DataFetch.c   ****    These should be modified if different interface is used to get hex file data */
  72:DataFetch.c   **** 
  73:DataFetch.c   **** extern unsigned char const deviceSiliconId_HexFile[SILICON_ID_BYTE_LENGTH]; 
  74:DataFetch.c   **** extern unsigned char const checksumData_HexFile[CHECKSUM_BYTE_LENGTH]; 
  75:DataFetch.c   **** 
  76:DataFetch.c   **** /* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
  77:DataFetch.c   **** #if defined (CY_PSOC5)
  78:DataFetch.c   **** 	#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
  79:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE-NUMBER_OF_FLASH_ROWS_N
  80:DataFetch.c   **** 	#else
  81:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_H
  82:DataFetch.c   **** 	#endif
  83:DataFetch.c   **** #else
  84:DataFetch.c   **** 	extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_HE
  85:DataFetch.c   **** #endif
  86:DataFetch.c   **** 
  87:DataFetch.c   **** extern unsigned char const flashProtectionData_HexFile[FLASH_PROTECTION_BYTE_SIZE_HEX_FILE];
  88:DataFetch.c   **** extern unsigned char const chipProtectionData_HexFile; 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 3


  89:DataFetch.c   **** 
  90:DataFetch.c   **** /******************************************************************************
  91:DataFetch.c   **** *   Function Definitions
  92:DataFetch.c   **** ******************************************************************************/
  93:DataFetch.c   **** 
  94:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  95:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA ***************
  96:DataFetch.c   **** All the function definitions below should be modified based on the interface 
  97:DataFetch.c   **** used to get Hex file data to be programmed. If a protocol like I2C, UART is 
  98:DataFetch.c   **** used to get the hex file data, change the function definitions accordingly */
  99:DataFetch.c   **** 
 100:DataFetch.c   **** /******************************************************************************
 101:DataFetch.c   **** * Function Name: HEX_ReadSiliconId
 102:DataFetch.c   **** *******************************************************************************
 103:DataFetch.c   **** *
 104:DataFetch.c   **** * Summary:
 105:DataFetch.c   **** *  Loads the Device Silicon ID data in to an array 
 106:DataFetch.c   **** *
 107:DataFetch.c   **** * Parameters:
 108:DataFetch.c   **** *  unsigned long *hexSiliconId - Address of variable which will store the
 109:DataFetch.c   **** *								 Silicon ID fetched
 110:DataFetch.c   **** *
 111:DataFetch.c   **** * Return:
 112:DataFetch.c   **** *  None.
 113:DataFetch.c   **** *
 114:DataFetch.c   **** * Note:
 115:DataFetch.c   **** *  Modify definition based on method of getting programming data
 116:DataFetch.c   **** *
 117:DataFetch.c   **** ******************************************************************************/
 118:DataFetch.c   **** 
 119:DataFetch.c   **** void HEX_ReadSiliconId(unsigned long *hexSiliconId)
 120:DataFetch.c   **** {
  27              		.loc 1 120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 121:DataFetch.c   ****     unsigned char i;
 122:DataFetch.c   ****     
 123:DataFetch.c   ****     
 124:DataFetch.c   ****     for(i = 0; i < SILICON_ID_BYTE_LENGTH; i++)
  40              		.loc 1 124 0
  41 0008 0023     		movs	r3, #0
  42 000a FB73     		strb	r3, [r7, #15]
  43 000c 0FE0     		b	.L2
  44              	.L3:
 125:DataFetch.c   ****     {
 126:DataFetch.c   ****         *hexSiliconId = *hexSiliconId | ((unsigned long)(deviceSiliconId_HexFile[i]) << (8*i));		
  45              		.loc 1 126 0 discriminator 3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 4


  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 1A68     		ldr	r2, [r3]
  48 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  49 0014 0A49     		ldr	r1, .L4
  50 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  51 0018 1946     		mov	r1, r3
  52 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  53 001c DB00     		lsls	r3, r3, #3
  54 001e 01FA03F3 		lsl	r3, r1, r3
  55 0022 1A43     		orrs	r2, r2, r3
  56 0024 7B68     		ldr	r3, [r7, #4]
  57 0026 1A60     		str	r2, [r3]
 124:DataFetch.c   ****     {
  58              		.loc 1 124 0 discriminator 3
  59 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60 002a 0133     		adds	r3, r3, #1
  61 002c FB73     		strb	r3, [r7, #15]
  62              	.L2:
 124:DataFetch.c   ****     {
  63              		.loc 1 124 0 is_stmt 0 discriminator 1
  64 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  65 0030 032B     		cmp	r3, #3
  66 0032 ECD9     		bls	.L3
 127:DataFetch.c   ****     }
 128:DataFetch.c   **** }
  67              		.loc 1 128 0 is_stmt 1
  68 0034 1437     		adds	r7, r7, #20
  69              		.cfi_def_cfa_offset 4
  70 0036 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0038 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 003c 7047     		bx	lr
  77              	.L5:
  78 003e 00BF     		.align	2
  79              	.L4:
  80 0040 00000000 		.word	deviceSiliconId_HexFile
  81              		.cfi_endproc
  82              	.LFE63:
  83              		.size	HEX_ReadSiliconId, .-HEX_ReadSiliconId
  84              		.section	.text.HEX_ReadRowData,"ax",%progbits
  85              		.align	2
  86              		.global	HEX_ReadRowData
  87              		.thumb
  88              		.thumb_func
  89              		.type	HEX_ReadRowData, %function
  90              	HEX_ReadRowData:
  91              	.LFB64:
 129:DataFetch.c   **** 
 130:DataFetch.c   **** 
 131:DataFetch.c   **** /******************************************************************************
 132:DataFetch.c   **** * Function Name: HEX_ReadRowData
 133:DataFetch.c   **** *******************************************************************************
 134:DataFetch.c   **** *
 135:DataFetch.c   **** * Summary:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 5


 136:DataFetch.c   **** *  Loads the row data from hex file in to an array 
 137:DataFetch.c   **** *
 138:DataFetch.c   **** * Parameters:
 139:DataFetch.c   **** *  unsigned short rowCount      - Flash row count for which the data has to be
 140:DataFetch.c   **** *								  fetched 
 141:DataFetch.c   **** *  unsigned char * rowData      - Base address of array which will store the
 142:DataFetch.c   **** *								  Flash row data fetched
 143:DataFetch.c   **** *
 144:DataFetch.c   **** * Return:
 145:DataFetch.c   **** *  None.
 146:DataFetch.c   **** *
 147:DataFetch.c   **** * Note:
 148:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 149:DataFetch.c   **** *  
 150:DataFetch.c   **** *  REMOVE THIS LOGIC WHILE PORTING THE HSSP CODE TO OTHER HOST PROGRAMMER
 151:DataFetch.c   **** *
 152:DataFetch.c   **** ******************************************************************************/
 153:DataFetch.c   **** void HEX_ReadRowData(unsigned short rowCount, unsigned char * rowData)
 154:DataFetch.c   **** {
  92              		.loc 1 154 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 16
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 85B0     		sub	sp, sp, #20
 101              		.cfi_def_cfa_offset 24
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 104 0006 0346     		mov	r3, r0
 105 0008 3960     		str	r1, [r7]
 106 000a FB80     		strh	r3, [r7, #6]	@ movhi
 155:DataFetch.c   ****     unsigned short i; /* Maximum value of 'i' can be 256 */
 156:DataFetch.c   ****     //unsigned short j=0;
 157:DataFetch.c   **** 	#if defined (CY_PSOC5)
 158:DataFetch.c   **** 		/* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
 159:DataFetch.c   **** 		#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
 160:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE - NUMBER_OF_FLASH_ROWS_NOT_INCLUDED))
 107              		.loc 1 160 0
 108 000c FB88     		ldrh	r3, [r7, #6]
 109 000e 40F2BD22 		movw	r2, #701
 110 0012 9342     		cmp	r3, r2
 111 0014 14D8     		bhi	.L7
 161:DataFetch.c   **** 			{
 162:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 112              		.loc 1 162 0
 113 0016 0023     		movs	r3, #0
 114 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 115 001a 0DE0     		b	.L8
 116              	.L9:
 163:DataFetch.c   **** 			    {
 164:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 117              		.loc 1 164 0 discriminator 3
 118 001c FB89     		ldrh	r3, [r7, #14]
 119 001e 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 6


 120 0020 1344     		add	r3, r3, r2
 121 0022 F988     		ldrh	r1, [r7, #6]
 122 0024 FA89     		ldrh	r2, [r7, #14]
 123 0026 1D48     		ldr	r0, .L16
 124 0028 0902     		lsls	r1, r1, #8
 125 002a 0A44     		add	r2, r2, r1
 126 002c 0244     		add	r2, r2, r0
 127 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 128 0030 1A70     		strb	r2, [r3]
 162:DataFetch.c   **** 			    {
 129              		.loc 1 162 0 discriminator 3
 130 0032 FB89     		ldrh	r3, [r7, #14]
 131 0034 0133     		adds	r3, r3, #1
 132 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 133              	.L8:
 162:DataFetch.c   **** 			    {
 134              		.loc 1 162 0 is_stmt 0 discriminator 1
 135 0038 FB89     		ldrh	r3, [r7, #14]
 136 003a FF2B     		cmp	r3, #255
 137 003c EED9     		bls	.L9
 138 003e 28E0     		b	.L6
 139              	.L7:
 165:DataFetch.c   **** 			    }
 166:DataFetch.c   **** 			}
 167:DataFetch.c   **** 			else
 168:DataFetch.c   **** 			{
 169:DataFetch.c   ****                 if(rowCount >= (NUMBER_OF_FLASH_ROWS_HEX_FILE-8))
 140              		.loc 1 169 0 is_stmt 1
 141 0040 FB88     		ldrh	r3, [r7, #6]
 142 0042 B3F57E7F 		cmp	r3, #1016
 143 0046 16D3     		bcc	.L11
 170:DataFetch.c   ****                 {                   
 171:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 144              		.loc 1 171 0
 145 0048 0023     		movs	r3, #0
 146 004a FB81     		strh	r3, [r7, #14]	@ movhi
 147 004c 0FE0     		b	.L12
 148              	.L13:
 172:DataFetch.c   ****     			    {
 173:DataFetch.c   ****     			        rowData[i] = flashData_HexFile_RAM[rowCount - (NUMBER_OF_FLASH_ROWS_HEX_FILE-8)][i];
 149              		.loc 1 173 0 discriminator 3
 150 004e FB89     		ldrh	r3, [r7, #14]
 151 0050 3A68     		ldr	r2, [r7]
 152 0052 1344     		add	r3, r3, r2
 153 0054 FA88     		ldrh	r2, [r7, #6]
 154 0056 A2F57E71 		sub	r1, r2, #1016
 155 005a FA89     		ldrh	r2, [r7, #14]
 156 005c 1048     		ldr	r0, .L16+4
 157 005e 0902     		lsls	r1, r1, #8
 158 0060 0A44     		add	r2, r2, r1
 159 0062 0244     		add	r2, r2, r0
 160 0064 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 161 0066 1A70     		strb	r2, [r3]
 171:DataFetch.c   ****     			    {
 162              		.loc 1 171 0 discriminator 3
 163 0068 FB89     		ldrh	r3, [r7, #14]
 164 006a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 7


 165 006c FB81     		strh	r3, [r7, #14]	@ movhi
 166              	.L12:
 171:DataFetch.c   ****     			    {
 167              		.loc 1 171 0 is_stmt 0 discriminator 1
 168 006e FB89     		ldrh	r3, [r7, #14]
 169 0070 FF2B     		cmp	r3, #255
 170 0072 ECD9     		bls	.L13
 171 0074 0DE0     		b	.L6
 172              	.L11:
 174:DataFetch.c   ****                     }
 175:DataFetch.c   ****                 }
 176:DataFetch.c   ****                 else
 177:DataFetch.c   ****                 {
 178:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 173              		.loc 1 178 0 is_stmt 1
 174 0076 0023     		movs	r3, #0
 175 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 176 007a 07E0     		b	.L14
 177              	.L15:
 179:DataFetch.c   ****     			    {
 180:DataFetch.c   ****     			        rowData[i]=0;
 178              		.loc 1 180 0 discriminator 3
 179 007c FB89     		ldrh	r3, [r7, #14]
 180 007e 3A68     		ldr	r2, [r7]
 181 0080 1344     		add	r3, r3, r2
 182 0082 0022     		movs	r2, #0
 183 0084 1A70     		strb	r2, [r3]
 178:DataFetch.c   ****     			    {
 184              		.loc 1 178 0 discriminator 3
 185 0086 FB89     		ldrh	r3, [r7, #14]
 186 0088 0133     		adds	r3, r3, #1
 187 008a FB81     		strh	r3, [r7, #14]	@ movhi
 188              	.L14:
 178:DataFetch.c   ****     			    {
 189              		.loc 1 178 0 is_stmt 0 discriminator 1
 190 008c FB89     		ldrh	r3, [r7, #14]
 191 008e FF2B     		cmp	r3, #255
 192 0090 F4D9     		bls	.L15
 193              	.L6:
 181:DataFetch.c   ****                     }
 182:DataFetch.c   ****                 } 
 183:DataFetch.c   **** 	        }
 184:DataFetch.c   **** 
 185:DataFetch.c   ****         #else
 186:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 187:DataFetch.c   **** 			{
 188:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 189:DataFetch.c   **** 			    {
 190:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 191:DataFetch.c   **** 			    }
 192:DataFetch.c   **** 			}
 193:DataFetch.c   **** 		#endif
 194:DataFetch.c   **** 	#else
 195:DataFetch.c   **** 		if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 196:DataFetch.c   **** 			{
 197:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 198:DataFetch.c   **** 			    {
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 8


 199:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 200:DataFetch.c   **** 			    }
 201:DataFetch.c   **** 			}
 202:DataFetch.c   **** 	#endif		
 203:DataFetch.c   **** }
 194              		.loc 1 203 0 is_stmt 1
 195 0092 1437     		adds	r7, r7, #20
 196              		.cfi_def_cfa_offset 4
 197 0094 BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 0096 5DF8047B 		ldr	r7, [sp], #4
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 009a 7047     		bx	lr
 204              	.L17:
 205              		.align	2
 206              	.L16:
 207 009c 00000000 		.word	flashData_HexFile
 208 00a0 00000000 		.word	flashData_HexFile_RAM
 209              		.cfi_endproc
 210              	.LFE64:
 211              		.size	HEX_ReadRowData, .-HEX_ReadRowData
 212              		.section	.text.HEX_ReadChipProtectionData,"ax",%progbits
 213              		.align	2
 214              		.global	HEX_ReadChipProtectionData
 215              		.thumb
 216              		.thumb_func
 217              		.type	HEX_ReadChipProtectionData, %function
 218              	HEX_ReadChipProtectionData:
 219              	.LFB65:
 204:DataFetch.c   **** 
 205:DataFetch.c   **** /******************************************************************************
 206:DataFetch.c   **** * Function Name: HEX_ReadChipProtectionData
 207:DataFetch.c   **** *******************************************************************************
 208:DataFetch.c   **** *
 209:DataFetch.c   **** * Summary:
 210:DataFetch.c   **** *  Loads the Chip Protection data in to an array 
 211:DataFetch.c   **** *
 212:DataFetch.c   **** * Parameters:
 213:DataFetch.c   **** *
 214:DataFetch.c   **** *  unsigned char * chipProtectionData - Address of variable which will store
 215:DataFetch.c   **** *										the Chip Protection data fetched
 216:DataFetch.c   **** *
 217:DataFetch.c   **** * Return:
 218:DataFetch.c   **** *  None.
 219:DataFetch.c   **** *
 220:DataFetch.c   **** * Note:
 221:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 222:DataFetch.c   **** *
 223:DataFetch.c   **** ******************************************************************************/
 224:DataFetch.c   **** void HEX_ReadChipProtectionData(unsigned char * chipProtectionData)
 225:DataFetch.c   **** {
 220              		.loc 1 225 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 8
 223              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 9


 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 83B0     		sub	sp, sp, #12
 229              		.cfi_def_cfa_offset 16
 230 0004 00AF     		add	r7, sp, #0
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 226:DataFetch.c   ****     *chipProtectionData = chipProtectionData_HexFile;
 233              		.loc 1 226 0
 234 0008 044B     		ldr	r3, .L19
 235 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 236 000c 7B68     		ldr	r3, [r7, #4]
 237 000e 1A70     		strb	r2, [r3]
 227:DataFetch.c   **** }
 238              		.loc 1 227 0
 239 0010 0C37     		adds	r7, r7, #12
 240              		.cfi_def_cfa_offset 4
 241 0012 BD46     		mov	sp, r7
 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 0014 5DF8047B 		ldr	r7, [sp], #4
 245              		.cfi_restore 7
 246              		.cfi_def_cfa_offset 0
 247 0018 7047     		bx	lr
 248              	.L20:
 249 001a 00BF     		.align	2
 250              	.L19:
 251 001c 00000000 		.word	chipProtectionData_HexFile
 252              		.cfi_endproc
 253              	.LFE65:
 254              		.size	HEX_ReadChipProtectionData, .-HEX_ReadChipProtectionData
 255              		.section	.text.HEX_ReadRowProtectionData,"ax",%progbits
 256              		.align	2
 257              		.global	HEX_ReadRowProtectionData
 258              		.thumb
 259              		.thumb_func
 260              		.type	HEX_ReadRowProtectionData, %function
 261              	HEX_ReadRowProtectionData:
 262              	.LFB66:
 228:DataFetch.c   **** 
 229:DataFetch.c   **** 
 230:DataFetch.c   **** /******************************************************************************
 231:DataFetch.c   **** * Function Name: HEX_ReadRowProtectionData
 232:DataFetch.c   **** *******************************************************************************
 233:DataFetch.c   **** *
 234:DataFetch.c   **** * Summary:
 235:DataFetch.c   **** *  Loads the Flash Row Protection data in to an array 
 236:DataFetch.c   **** *
 237:DataFetch.c   **** * Parameters:
 238:DataFetch.c   **** *
 239:DataFetch.c   **** *  unsigned char * rowProtectionData  - Base address of array which will store
 240:DataFetch.c   **** *									    the Flash Row Protection data fetched
 241:DataFetch.c   **** *  unsigned char rowProtectionByteSize - Size of flash row protection settings
 242:DataFetch.c   **** *										 in bytes
 243:DataFetch.c   **** *
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 10


 244:DataFetch.c   **** * Return:
 245:DataFetch.c   **** *  None.
 246:DataFetch.c   **** *
 247:DataFetch.c   **** * Note:
 248:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 249:DataFetch.c   **** *
 250:DataFetch.c   **** ******************************************************************************/
 251:DataFetch.c   **** void HEX_ReadRowProtectionData(unsigned char rowProtectionByteSize, unsigned char * rowProtectionDa
 252:DataFetch.c   **** {
 263              		.loc 1 252 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 85B0     		sub	sp, sp, #20
 272              		.cfi_def_cfa_offset 24
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
 275 0006 0346     		mov	r3, r0
 276 0008 3960     		str	r1, [r7]
 277 000a FB71     		strb	r3, [r7, #7]
 278 000c 1346     		mov	r3, r2
 279 000e BB71     		strb	r3, [r7, #6]
 253:DataFetch.c   ****     unsigned short i;
 254:DataFetch.c   ****     
 255:DataFetch.c   ****     for(i = 0; i < rowProtectionByteSize; i++)
 280              		.loc 1 255 0
 281 0010 0023     		movs	r3, #0
 282 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 283 0014 0EE0     		b	.L22
 284              	.L23:
 256:DataFetch.c   ****     {
 257:DataFetch.c   ****         rowProtectionData[i] = flashProtectionData_HexFile[i + (arrayID * rowProtectionByteSize)];
 285              		.loc 1 257 0 discriminator 3
 286 0016 FB89     		ldrh	r3, [r7, #14]
 287 0018 3A68     		ldr	r2, [r7]
 288 001a 1344     		add	r3, r3, r2
 289 001c F989     		ldrh	r1, [r7, #14]
 290 001e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 291 0020 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 292 0022 00FB02F2 		mul	r2, r0, r2
 293 0026 0A44     		add	r2, r2, r1
 294 0028 0749     		ldr	r1, .L24
 295 002a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 296 002c 1A70     		strb	r2, [r3]
 255:DataFetch.c   ****     {
 297              		.loc 1 255 0 discriminator 3
 298 002e FB89     		ldrh	r3, [r7, #14]
 299 0030 0133     		adds	r3, r3, #1
 300 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 301              	.L22:
 255:DataFetch.c   ****     {
 302              		.loc 1 255 0 is_stmt 0 discriminator 1
 303 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 11


 304 0036 9BB2     		uxth	r3, r3
 305 0038 FA89     		ldrh	r2, [r7, #14]
 306 003a 9A42     		cmp	r2, r3
 307 003c EBD3     		bcc	.L23
 258:DataFetch.c   ****     }    
 259:DataFetch.c   **** }
 308              		.loc 1 259 0 is_stmt 1
 309 003e 1437     		adds	r7, r7, #20
 310              		.cfi_def_cfa_offset 4
 311 0040 BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0042 5DF8047B 		ldr	r7, [sp], #4
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0046 7047     		bx	lr
 318              	.L25:
 319              		.align	2
 320              	.L24:
 321 0048 00000000 		.word	flashProtectionData_HexFile
 322              		.cfi_endproc
 323              	.LFE66:
 324              		.size	HEX_ReadRowProtectionData, .-HEX_ReadRowProtectionData
 325              		.section	.text.HEX_ReadChecksumData,"ax",%progbits
 326              		.align	2
 327              		.global	HEX_ReadChecksumData
 328              		.thumb
 329              		.thumb_func
 330              		.type	HEX_ReadChecksumData, %function
 331              	HEX_ReadChecksumData:
 332              	.LFB67:
 260:DataFetch.c   **** 
 261:DataFetch.c   **** /******************************************************************************
 262:DataFetch.c   **** * Function Name: HEX_ReadChecksumData
 263:DataFetch.c   **** *******************************************************************************
 264:DataFetch.c   **** *
 265:DataFetch.c   **** * Summary:
 266:DataFetch.c   **** *  Loads the Checksum data in to an array 
 267:DataFetch.c   **** *
 268:DataFetch.c   **** * Parameters:
 269:DataFetch.c   **** *  unsigned short * checksumData - Base address of the array which will store
 270:DataFetch.c   **** *								   the Checksum data fetched
 271:DataFetch.c   **** *
 272:DataFetch.c   **** * Return:
 273:DataFetch.c   **** *  None.
 274:DataFetch.c   **** *
 275:DataFetch.c   **** * Note:
 276:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 277:DataFetch.c   **** *
 278:DataFetch.c   **** ******************************************************************************/
 279:DataFetch.c   **** void HEX_ReadChecksumData(unsigned short * checksumData)
 280:DataFetch.c   **** {
 333              		.loc 1 280 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 16
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 12


 338 0000 80B4     		push	{r7}
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 0002 85B0     		sub	sp, sp, #20
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 281:DataFetch.c   ****     unsigned char i;
 282:DataFetch.c   **** 
 283:DataFetch.c   ****     for(i = 0; i < CHECKSUM_BYTE_LENGTH; i++)
 346              		.loc 1 283 0
 347 0008 0023     		movs	r3, #0
 348 000a FB73     		strb	r3, [r7, #15]
 349 000c 14E0     		b	.L27
 350              	.L28:
 284:DataFetch.c   ****     {
 285:DataFetch.c   ****         *checksumData |= (checksumData_HexFile[i] << (8*i));
 351              		.loc 1 285 0 discriminator 3
 352 000e 7B68     		ldr	r3, [r7, #4]
 353 0010 1B88     		ldrh	r3, [r3]
 354 0012 99B2     		uxth	r1, r3
 355 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 356 0016 0C4A     		ldr	r2, .L29
 357 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 358 001a 1A46     		mov	r2, r3
 359 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 360 001e DB00     		lsls	r3, r3, #3
 361 0020 02FA03F3 		lsl	r3, r2, r3
 362 0024 9BB2     		uxth	r3, r3
 363 0026 0A46     		mov	r2, r1	@ movhi
 364 0028 1343     		orrs	r3, r3, r2
 365 002a 9BB2     		uxth	r3, r3
 366 002c 9AB2     		uxth	r2, r3
 367 002e 7B68     		ldr	r3, [r7, #4]
 368 0030 1A80     		strh	r2, [r3]	@ movhi
 283:DataFetch.c   ****     {
 369              		.loc 1 283 0 discriminator 3
 370 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 371 0034 0133     		adds	r3, r3, #1
 372 0036 FB73     		strb	r3, [r7, #15]
 373              	.L27:
 283:DataFetch.c   ****     {
 374              		.loc 1 283 0 is_stmt 0 discriminator 1
 375 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 376 003a 012B     		cmp	r3, #1
 377 003c E7D9     		bls	.L28
 286:DataFetch.c   ****     }
 287:DataFetch.c   **** }
 378              		.loc 1 287 0 is_stmt 1
 379 003e 1437     		adds	r7, r7, #20
 380              		.cfi_def_cfa_offset 4
 381 0040 BD46     		mov	sp, r7
 382              		.cfi_def_cfa_register 13
 383              		@ sp needed
 384 0042 5DF8047B 		ldr	r7, [sp], #4
 385              		.cfi_restore 7
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 13


 386              		.cfi_def_cfa_offset 0
 387 0046 7047     		bx	lr
 388              	.L30:
 389              		.align	2
 390              	.L29:
 391 0048 00000000 		.word	checksumData_HexFile
 392              		.cfi_endproc
 393              	.LFE67:
 394              		.size	HEX_ReadChecksumData, .-HEX_ReadChecksumData
 395              		.section	.text.GetFlashRowCount,"ax",%progbits
 396              		.align	2
 397              		.global	GetFlashRowCount
 398              		.thumb
 399              		.thumb_func
 400              		.type	GetFlashRowCount, %function
 401              	GetFlashRowCount:
 402              	.LFB68:
 288:DataFetch.c   **** 
 289:DataFetch.c   **** /******************************************************************************
 290:DataFetch.c   **** * Function Name: GetFlashRowCount
 291:DataFetch.c   **** *******************************************************************************
 292:DataFetch.c   **** *
 293:DataFetch.c   **** * Summary:
 294:DataFetch.c   **** *  Returns the total number of Flash rows in the target PSoC 4 device
 295:DataFetch.c   **** *
 296:DataFetch.c   **** * Parameters:
 297:DataFetch.c   **** *  None
 298:DataFetch.c   **** *
 299:DataFetch.c   **** * Return:
 300:DataFetch.c   **** *  unsigned short
 301:DataFetch.c   **** *   Total number of Flash rows in target PSoC 4
 302:DataFetch.c   **** *
 303:DataFetch.c   **** * Note:
 304:DataFetch.c   **** *  The Flash row count is from the HexImage.h file. Modify the definition based
 305:DataFetch.c   **** *  on the method of getting programming data
 306:DataFetch.c   **** *
 307:DataFetch.c   **** ******************************************************************************/
 308:DataFetch.c   **** unsigned short GetFlashRowCount()
 309:DataFetch.c   **** {
 403              		.loc 1 309 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408 0000 80B4     		push	{r7}
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 7, -4
 411 0002 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 310:DataFetch.c   ****     return(NUMBER_OF_FLASH_ROWS_HEX_FILE);
 413              		.loc 1 310 0
 414 0004 4FF48063 		mov	r3, #1024
 311:DataFetch.c   **** }
 415              		.loc 1 311 0
 416 0008 1846     		mov	r0, r3
 417 000a BD46     		mov	sp, r7
 418              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 14


 419              		@ sp needed
 420 000c 5DF8047B 		ldr	r7, [sp], #4
 421              		.cfi_restore 7
 422              		.cfi_def_cfa_offset 0
 423 0010 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE68:
 426              		.size	GetFlashRowCount, .-GetFlashRowCount
 427 0012 00BF     		.text
 428              	.Letext0:
 429              		.file 2 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 430              		.file 3 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 431              		.file 4 "HexImage.h"
 432              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 433              		.section	.debug_info,"",%progbits
 434              	.Ldebug_info0:
 435 0000 A1020000 		.4byte	0x2a1
 436 0004 0400     		.2byte	0x4
 437 0006 00000000 		.4byte	.Ldebug_abbrev0
 438 000a 04       		.byte	0x4
 439 000b 01       		.uleb128 0x1
 440 000c 24000000 		.4byte	.LASF35
 441 0010 01       		.byte	0x1
 442 0011 B5020000 		.4byte	.LASF36
 443 0015 0E020000 		.4byte	.LASF37
 444 0019 00000000 		.4byte	.Ldebug_ranges0+0
 445 001d 00000000 		.4byte	0
 446 0021 00000000 		.4byte	.Ldebug_line0
 447 0025 02       		.uleb128 0x2
 448 0026 01       		.byte	0x1
 449 0027 06       		.byte	0x6
 450 0028 C1020000 		.4byte	.LASF0
 451 002c 02       		.uleb128 0x2
 452 002d 01       		.byte	0x1
 453 002e 08       		.byte	0x8
 454 002f 11010000 		.4byte	.LASF1
 455 0033 02       		.uleb128 0x2
 456 0034 02       		.byte	0x2
 457 0035 05       		.byte	0x5
 458 0036 8C020000 		.4byte	.LASF2
 459 003a 02       		.uleb128 0x2
 460 003b 02       		.byte	0x2
 461 003c 07       		.byte	0x7
 462 003d 4E010000 		.4byte	.LASF3
 463 0041 03       		.uleb128 0x3
 464 0042 00000000 		.4byte	.LASF9
 465 0046 02       		.byte	0x2
 466 0047 3F       		.byte	0x3f
 467 0048 4C000000 		.4byte	0x4c
 468 004c 02       		.uleb128 0x2
 469 004d 04       		.byte	0x4
 470 004e 05       		.byte	0x5
 471 004f AC020000 		.4byte	.LASF4
 472 0053 02       		.uleb128 0x2
 473 0054 04       		.byte	0x4
 474 0055 07       		.byte	0x7
 475 0056 96010000 		.4byte	.LASF5
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 15


 476 005a 02       		.uleb128 0x2
 477 005b 08       		.byte	0x8
 478 005c 05       		.byte	0x5
 479 005d 79020000 		.4byte	.LASF6
 480 0061 02       		.uleb128 0x2
 481 0062 08       		.byte	0x8
 482 0063 07       		.byte	0x7
 483 0064 E2010000 		.4byte	.LASF7
 484 0068 04       		.uleb128 0x4
 485 0069 04       		.byte	0x4
 486 006a 05       		.byte	0x5
 487 006b 696E7400 		.ascii	"int\000"
 488 006f 02       		.uleb128 0x2
 489 0070 04       		.byte	0x4
 490 0071 07       		.byte	0x7
 491 0072 D5010000 		.4byte	.LASF8
 492 0076 03       		.uleb128 0x3
 493 0077 5B020000 		.4byte	.LASF10
 494 007b 03       		.byte	0x3
 495 007c 2C       		.byte	0x2c
 496 007d 41000000 		.4byte	0x41
 497 0081 02       		.uleb128 0x2
 498 0082 04       		.byte	0x4
 499 0083 04       		.byte	0x4
 500 0084 F3000000 		.4byte	.LASF11
 501 0088 02       		.uleb128 0x2
 502 0089 08       		.byte	0x8
 503 008a 04       		.byte	0x4
 504 008b CD020000 		.4byte	.LASF12
 505 008f 02       		.uleb128 0x2
 506 0090 01       		.byte	0x1
 507 0091 08       		.byte	0x8
 508 0092 87020000 		.4byte	.LASF13
 509 0096 05       		.uleb128 0x5
 510 0097 2C000000 		.4byte	0x2c
 511 009b A6000000 		.4byte	0xa6
 512 009f 06       		.uleb128 0x6
 513 00a0 A6000000 		.4byte	0xa6
 514 00a4 03       		.byte	0x3
 515 00a5 00       		.byte	0
 516 00a6 02       		.uleb128 0x2
 517 00a7 04       		.byte	0x4
 518 00a8 07       		.byte	0x7
 519 00a9 63020000 		.4byte	.LASF14
 520 00ad 07       		.uleb128 0x7
 521 00ae 04       		.byte	0x4
 522 00af 2C000000 		.4byte	0x2c
 523 00b3 08       		.uleb128 0x8
 524 00b4 0A000000 		.4byte	.LASF15
 525 00b8 01       		.byte	0x1
 526 00b9 77       		.byte	0x77
 527 00ba 00000000 		.4byte	.LFB63
 528 00be 44000000 		.4byte	.LFE63-.LFB63
 529 00c2 01       		.uleb128 0x1
 530 00c3 9C       		.byte	0x9c
 531 00c4 E3000000 		.4byte	0xe3
 532 00c8 09       		.uleb128 0x9
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 16


 533 00c9 6C020000 		.4byte	.LASF17
 534 00cd 01       		.byte	0x1
 535 00ce 77       		.byte	0x77
 536 00cf E3000000 		.4byte	0xe3
 537 00d3 02       		.uleb128 0x2
 538 00d4 91       		.byte	0x91
 539 00d5 6C       		.sleb128 -20
 540 00d6 0A       		.uleb128 0xa
 541 00d7 6900     		.ascii	"i\000"
 542 00d9 01       		.byte	0x1
 543 00da 79       		.byte	0x79
 544 00db 2C000000 		.4byte	0x2c
 545 00df 02       		.uleb128 0x2
 546 00e0 91       		.byte	0x91
 547 00e1 77       		.sleb128 -9
 548 00e2 00       		.byte	0
 549 00e3 07       		.uleb128 0x7
 550 00e4 04       		.byte	0x4
 551 00e5 53000000 		.4byte	0x53
 552 00e9 08       		.uleb128 0x8
 553 00ea C7000000 		.4byte	.LASF16
 554 00ee 01       		.byte	0x1
 555 00ef 99       		.byte	0x99
 556 00f0 00000000 		.4byte	.LFB64
 557 00f4 A4000000 		.4byte	.LFE64-.LFB64
 558 00f8 01       		.uleb128 0x1
 559 00f9 9C       		.byte	0x9c
 560 00fa 27010000 		.4byte	0x127
 561 00fe 09       		.uleb128 0x9
 562 00ff 96020000 		.4byte	.LASF18
 563 0103 01       		.byte	0x1
 564 0104 99       		.byte	0x99
 565 0105 3A000000 		.4byte	0x3a
 566 0109 02       		.uleb128 0x2
 567 010a 91       		.byte	0x91
 568 010b 6E       		.sleb128 -18
 569 010c 09       		.uleb128 0x9
 570 010d 30010000 		.4byte	.LASF19
 571 0111 01       		.byte	0x1
 572 0112 99       		.byte	0x99
 573 0113 AD000000 		.4byte	0xad
 574 0117 02       		.uleb128 0x2
 575 0118 91       		.byte	0x91
 576 0119 68       		.sleb128 -24
 577 011a 0A       		.uleb128 0xa
 578 011b 6900     		.ascii	"i\000"
 579 011d 01       		.byte	0x1
 580 011e 9B       		.byte	0x9b
 581 011f 3A000000 		.4byte	0x3a
 582 0123 02       		.uleb128 0x2
 583 0124 91       		.byte	0x91
 584 0125 76       		.sleb128 -10
 585 0126 00       		.byte	0
 586 0127 08       		.uleb128 0x8
 587 0128 EF020000 		.4byte	.LASF20
 588 012c 01       		.byte	0x1
 589 012d E0       		.byte	0xe0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 17


 590 012e 00000000 		.4byte	.LFB65
 591 0132 20000000 		.4byte	.LFE65-.LFB65
 592 0136 01       		.uleb128 0x1
 593 0137 9C       		.byte	0x9c
 594 0138 4B010000 		.4byte	0x14b
 595 013c 09       		.uleb128 0x9
 596 013d A8010000 		.4byte	.LASF21
 597 0141 01       		.byte	0x1
 598 0142 E0       		.byte	0xe0
 599 0143 AD000000 		.4byte	0xad
 600 0147 02       		.uleb128 0x2
 601 0148 91       		.byte	0x91
 602 0149 74       		.sleb128 -12
 603 014a 00       		.byte	0
 604 014b 08       		.uleb128 0x8
 605 014c BB010000 		.4byte	.LASF22
 606 0150 01       		.byte	0x1
 607 0151 FB       		.byte	0xfb
 608 0152 00000000 		.4byte	.LFB66
 609 0156 4C000000 		.4byte	.LFE66-.LFB66
 610 015a 01       		.uleb128 0x1
 611 015b 9C       		.byte	0x9c
 612 015c 97010000 		.4byte	0x197
 613 0160 09       		.uleb128 0x9
 614 0161 6E010000 		.4byte	.LASF23
 615 0165 01       		.byte	0x1
 616 0166 FB       		.byte	0xfb
 617 0167 2C000000 		.4byte	0x2c
 618 016b 02       		.uleb128 0x2
 619 016c 91       		.byte	0x91
 620 016d 6F       		.sleb128 -17
 621 016e 09       		.uleb128 0x9
 622 016f 84010000 		.4byte	.LASF24
 623 0173 01       		.byte	0x1
 624 0174 FB       		.byte	0xfb
 625 0175 AD000000 		.4byte	0xad
 626 0179 02       		.uleb128 0x2
 627 017a 91       		.byte	0x91
 628 017b 68       		.sleb128 -24
 629 017c 09       		.uleb128 0x9
 630 017d 1C000000 		.4byte	.LASF25
 631 0181 01       		.byte	0x1
 632 0182 FB       		.byte	0xfb
 633 0183 2C000000 		.4byte	0x2c
 634 0187 02       		.uleb128 0x2
 635 0188 91       		.byte	0x91
 636 0189 6E       		.sleb128 -18
 637 018a 0A       		.uleb128 0xa
 638 018b 6900     		.ascii	"i\000"
 639 018d 01       		.byte	0x1
 640 018e FD       		.byte	0xfd
 641 018f 3A000000 		.4byte	0x3a
 642 0193 02       		.uleb128 0x2
 643 0194 91       		.byte	0x91
 644 0195 76       		.sleb128 -10
 645 0196 00       		.byte	0
 646 0197 0B       		.uleb128 0xb
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 18


 647 0198 B2000000 		.4byte	.LASF26
 648 019c 01       		.byte	0x1
 649 019d 1701     		.2byte	0x117
 650 019f 00000000 		.4byte	.LFB67
 651 01a3 4C000000 		.4byte	.LFE67-.LFB67
 652 01a7 01       		.uleb128 0x1
 653 01a8 9C       		.byte	0x9c
 654 01a9 CA010000 		.4byte	0x1ca
 655 01ad 0C       		.uleb128 0xc
 656 01ae 9F020000 		.4byte	.LASF27
 657 01b2 01       		.byte	0x1
 658 01b3 1701     		.2byte	0x117
 659 01b5 CA010000 		.4byte	0x1ca
 660 01b9 02       		.uleb128 0x2
 661 01ba 91       		.byte	0x91
 662 01bb 6C       		.sleb128 -20
 663 01bc 0D       		.uleb128 0xd
 664 01bd 6900     		.ascii	"i\000"
 665 01bf 01       		.byte	0x1
 666 01c0 1901     		.2byte	0x119
 667 01c2 2C000000 		.4byte	0x2c
 668 01c6 02       		.uleb128 0x2
 669 01c7 91       		.byte	0x91
 670 01c8 77       		.sleb128 -9
 671 01c9 00       		.byte	0
 672 01ca 07       		.uleb128 0x7
 673 01cb 04       		.byte	0x4
 674 01cc 3A000000 		.4byte	0x3a
 675 01d0 0E       		.uleb128 0xe
 676 01d1 1F010000 		.4byte	.LASF38
 677 01d5 01       		.byte	0x1
 678 01d6 3401     		.2byte	0x134
 679 01d8 3A000000 		.4byte	0x3a
 680 01dc 00000000 		.4byte	.LFB68
 681 01e0 12000000 		.4byte	.LFE68-.LFB68
 682 01e4 01       		.uleb128 0x1
 683 01e5 9C       		.byte	0x9c
 684 01e6 0F       		.uleb128 0xf
 685 01e7 F9000000 		.4byte	.LASF28
 686 01eb 01       		.byte	0x1
 687 01ec 49       		.byte	0x49
 688 01ed F1010000 		.4byte	0x1f1
 689 01f1 10       		.uleb128 0x10
 690 01f2 96000000 		.4byte	0x96
 691 01f6 05       		.uleb128 0x5
 692 01f7 2C000000 		.4byte	0x2c
 693 01fb 06020000 		.4byte	0x206
 694 01ff 06       		.uleb128 0x6
 695 0200 A6000000 		.4byte	0xa6
 696 0204 01       		.byte	0x1
 697 0205 00       		.byte	0
 698 0206 0F       		.uleb128 0xf
 699 0207 F9010000 		.4byte	.LASF29
 700 020b 01       		.byte	0x1
 701 020c 4A       		.byte	0x4a
 702 020d 11020000 		.4byte	0x211
 703 0211 10       		.uleb128 0x10
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 19


 704 0212 F6010000 		.4byte	0x1f6
 705 0216 05       		.uleb128 0x5
 706 0217 2C000000 		.4byte	0x2c
 707 021b 2D020000 		.4byte	0x22d
 708 021f 11       		.uleb128 0x11
 709 0220 A6000000 		.4byte	0xa6
 710 0224 BD02     		.2byte	0x2bd
 711 0226 06       		.uleb128 0x6
 712 0227 A6000000 		.4byte	0xa6
 713 022b FF       		.byte	0xff
 714 022c 00       		.byte	0
 715 022d 0F       		.uleb128 0xf
 716 022e 0A030000 		.4byte	.LASF30
 717 0232 01       		.byte	0x1
 718 0233 4F       		.byte	0x4f
 719 0234 38020000 		.4byte	0x238
 720 0238 10       		.uleb128 0x10
 721 0239 16020000 		.4byte	0x216
 722 023d 05       		.uleb128 0x5
 723 023e 2C000000 		.4byte	0x2c
 724 0242 4D020000 		.4byte	0x24d
 725 0246 06       		.uleb128 0x6
 726 0247 A6000000 		.4byte	0xa6
 727 024b 7F       		.byte	0x7f
 728 024c 00       		.byte	0
 729 024d 0F       		.uleb128 0xf
 730 024e D7000000 		.4byte	.LASF31
 731 0252 01       		.byte	0x1
 732 0253 57       		.byte	0x57
 733 0254 58020000 		.4byte	0x258
 734 0258 10       		.uleb128 0x10
 735 0259 3D020000 		.4byte	0x23d
 736 025d 0F       		.uleb128 0xf
 737 025e D4020000 		.4byte	.LASF32
 738 0262 01       		.byte	0x1
 739 0263 58       		.byte	0x58
 740 0264 68020000 		.4byte	0x268
 741 0268 10       		.uleb128 0x10
 742 0269 2C000000 		.4byte	0x2c
 743 026d 05       		.uleb128 0x5
 744 026e 2C000000 		.4byte	0x2c
 745 0272 83020000 		.4byte	0x283
 746 0276 06       		.uleb128 0x6
 747 0277 A6000000 		.4byte	0xa6
 748 027b 07       		.byte	0x7
 749 027c 06       		.uleb128 0x6
 750 027d A6000000 		.4byte	0xa6
 751 0281 FF       		.byte	0xff
 752 0282 00       		.byte	0
 753 0283 0F       		.uleb128 0xf
 754 0284 38010000 		.4byte	.LASF33
 755 0288 04       		.byte	0x4
 756 0289 30       		.byte	0x30
 757 028a 8E020000 		.4byte	0x28e
 758 028e 10       		.uleb128 0x10
 759 028f 6D020000 		.4byte	0x26d
 760 0293 12       		.uleb128 0x12
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 20


 761 0294 61010000 		.4byte	.LASF34
 762 0298 05       		.byte	0x5
 763 0299 9606     		.2byte	0x696
 764 029b 9F020000 		.4byte	0x29f
 765 029f 13       		.uleb128 0x13
 766 02a0 76000000 		.4byte	0x76
 767 02a4 00       		.byte	0
 768              		.section	.debug_abbrev,"",%progbits
 769              	.Ldebug_abbrev0:
 770 0000 01       		.uleb128 0x1
 771 0001 11       		.uleb128 0x11
 772 0002 01       		.byte	0x1
 773 0003 25       		.uleb128 0x25
 774 0004 0E       		.uleb128 0xe
 775 0005 13       		.uleb128 0x13
 776 0006 0B       		.uleb128 0xb
 777 0007 03       		.uleb128 0x3
 778 0008 0E       		.uleb128 0xe
 779 0009 1B       		.uleb128 0x1b
 780 000a 0E       		.uleb128 0xe
 781 000b 55       		.uleb128 0x55
 782 000c 17       		.uleb128 0x17
 783 000d 11       		.uleb128 0x11
 784 000e 01       		.uleb128 0x1
 785 000f 10       		.uleb128 0x10
 786 0010 17       		.uleb128 0x17
 787 0011 00       		.byte	0
 788 0012 00       		.byte	0
 789 0013 02       		.uleb128 0x2
 790 0014 24       		.uleb128 0x24
 791 0015 00       		.byte	0
 792 0016 0B       		.uleb128 0xb
 793 0017 0B       		.uleb128 0xb
 794 0018 3E       		.uleb128 0x3e
 795 0019 0B       		.uleb128 0xb
 796 001a 03       		.uleb128 0x3
 797 001b 0E       		.uleb128 0xe
 798 001c 00       		.byte	0
 799 001d 00       		.byte	0
 800 001e 03       		.uleb128 0x3
 801 001f 16       		.uleb128 0x16
 802 0020 00       		.byte	0
 803 0021 03       		.uleb128 0x3
 804 0022 0E       		.uleb128 0xe
 805 0023 3A       		.uleb128 0x3a
 806 0024 0B       		.uleb128 0xb
 807 0025 3B       		.uleb128 0x3b
 808 0026 0B       		.uleb128 0xb
 809 0027 49       		.uleb128 0x49
 810 0028 13       		.uleb128 0x13
 811 0029 00       		.byte	0
 812 002a 00       		.byte	0
 813 002b 04       		.uleb128 0x4
 814 002c 24       		.uleb128 0x24
 815 002d 00       		.byte	0
 816 002e 0B       		.uleb128 0xb
 817 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 21


 818 0030 3E       		.uleb128 0x3e
 819 0031 0B       		.uleb128 0xb
 820 0032 03       		.uleb128 0x3
 821 0033 08       		.uleb128 0x8
 822 0034 00       		.byte	0
 823 0035 00       		.byte	0
 824 0036 05       		.uleb128 0x5
 825 0037 01       		.uleb128 0x1
 826 0038 01       		.byte	0x1
 827 0039 49       		.uleb128 0x49
 828 003a 13       		.uleb128 0x13
 829 003b 01       		.uleb128 0x1
 830 003c 13       		.uleb128 0x13
 831 003d 00       		.byte	0
 832 003e 00       		.byte	0
 833 003f 06       		.uleb128 0x6
 834 0040 21       		.uleb128 0x21
 835 0041 00       		.byte	0
 836 0042 49       		.uleb128 0x49
 837 0043 13       		.uleb128 0x13
 838 0044 2F       		.uleb128 0x2f
 839 0045 0B       		.uleb128 0xb
 840 0046 00       		.byte	0
 841 0047 00       		.byte	0
 842 0048 07       		.uleb128 0x7
 843 0049 0F       		.uleb128 0xf
 844 004a 00       		.byte	0
 845 004b 0B       		.uleb128 0xb
 846 004c 0B       		.uleb128 0xb
 847 004d 49       		.uleb128 0x49
 848 004e 13       		.uleb128 0x13
 849 004f 00       		.byte	0
 850 0050 00       		.byte	0
 851 0051 08       		.uleb128 0x8
 852 0052 2E       		.uleb128 0x2e
 853 0053 01       		.byte	0x1
 854 0054 3F       		.uleb128 0x3f
 855 0055 19       		.uleb128 0x19
 856 0056 03       		.uleb128 0x3
 857 0057 0E       		.uleb128 0xe
 858 0058 3A       		.uleb128 0x3a
 859 0059 0B       		.uleb128 0xb
 860 005a 3B       		.uleb128 0x3b
 861 005b 0B       		.uleb128 0xb
 862 005c 27       		.uleb128 0x27
 863 005d 19       		.uleb128 0x19
 864 005e 11       		.uleb128 0x11
 865 005f 01       		.uleb128 0x1
 866 0060 12       		.uleb128 0x12
 867 0061 06       		.uleb128 0x6
 868 0062 40       		.uleb128 0x40
 869 0063 18       		.uleb128 0x18
 870 0064 9742     		.uleb128 0x2117
 871 0066 19       		.uleb128 0x19
 872 0067 01       		.uleb128 0x1
 873 0068 13       		.uleb128 0x13
 874 0069 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 22


 875 006a 00       		.byte	0
 876 006b 09       		.uleb128 0x9
 877 006c 05       		.uleb128 0x5
 878 006d 00       		.byte	0
 879 006e 03       		.uleb128 0x3
 880 006f 0E       		.uleb128 0xe
 881 0070 3A       		.uleb128 0x3a
 882 0071 0B       		.uleb128 0xb
 883 0072 3B       		.uleb128 0x3b
 884 0073 0B       		.uleb128 0xb
 885 0074 49       		.uleb128 0x49
 886 0075 13       		.uleb128 0x13
 887 0076 02       		.uleb128 0x2
 888 0077 18       		.uleb128 0x18
 889 0078 00       		.byte	0
 890 0079 00       		.byte	0
 891 007a 0A       		.uleb128 0xa
 892 007b 34       		.uleb128 0x34
 893 007c 00       		.byte	0
 894 007d 03       		.uleb128 0x3
 895 007e 08       		.uleb128 0x8
 896 007f 3A       		.uleb128 0x3a
 897 0080 0B       		.uleb128 0xb
 898 0081 3B       		.uleb128 0x3b
 899 0082 0B       		.uleb128 0xb
 900 0083 49       		.uleb128 0x49
 901 0084 13       		.uleb128 0x13
 902 0085 02       		.uleb128 0x2
 903 0086 18       		.uleb128 0x18
 904 0087 00       		.byte	0
 905 0088 00       		.byte	0
 906 0089 0B       		.uleb128 0xb
 907 008a 2E       		.uleb128 0x2e
 908 008b 01       		.byte	0x1
 909 008c 3F       		.uleb128 0x3f
 910 008d 19       		.uleb128 0x19
 911 008e 03       		.uleb128 0x3
 912 008f 0E       		.uleb128 0xe
 913 0090 3A       		.uleb128 0x3a
 914 0091 0B       		.uleb128 0xb
 915 0092 3B       		.uleb128 0x3b
 916 0093 05       		.uleb128 0x5
 917 0094 27       		.uleb128 0x27
 918 0095 19       		.uleb128 0x19
 919 0096 11       		.uleb128 0x11
 920 0097 01       		.uleb128 0x1
 921 0098 12       		.uleb128 0x12
 922 0099 06       		.uleb128 0x6
 923 009a 40       		.uleb128 0x40
 924 009b 18       		.uleb128 0x18
 925 009c 9742     		.uleb128 0x2117
 926 009e 19       		.uleb128 0x19
 927 009f 01       		.uleb128 0x1
 928 00a0 13       		.uleb128 0x13
 929 00a1 00       		.byte	0
 930 00a2 00       		.byte	0
 931 00a3 0C       		.uleb128 0xc
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 23


 932 00a4 05       		.uleb128 0x5
 933 00a5 00       		.byte	0
 934 00a6 03       		.uleb128 0x3
 935 00a7 0E       		.uleb128 0xe
 936 00a8 3A       		.uleb128 0x3a
 937 00a9 0B       		.uleb128 0xb
 938 00aa 3B       		.uleb128 0x3b
 939 00ab 05       		.uleb128 0x5
 940 00ac 49       		.uleb128 0x49
 941 00ad 13       		.uleb128 0x13
 942 00ae 02       		.uleb128 0x2
 943 00af 18       		.uleb128 0x18
 944 00b0 00       		.byte	0
 945 00b1 00       		.byte	0
 946 00b2 0D       		.uleb128 0xd
 947 00b3 34       		.uleb128 0x34
 948 00b4 00       		.byte	0
 949 00b5 03       		.uleb128 0x3
 950 00b6 08       		.uleb128 0x8
 951 00b7 3A       		.uleb128 0x3a
 952 00b8 0B       		.uleb128 0xb
 953 00b9 3B       		.uleb128 0x3b
 954 00ba 05       		.uleb128 0x5
 955 00bb 49       		.uleb128 0x49
 956 00bc 13       		.uleb128 0x13
 957 00bd 02       		.uleb128 0x2
 958 00be 18       		.uleb128 0x18
 959 00bf 00       		.byte	0
 960 00c0 00       		.byte	0
 961 00c1 0E       		.uleb128 0xe
 962 00c2 2E       		.uleb128 0x2e
 963 00c3 00       		.byte	0
 964 00c4 3F       		.uleb128 0x3f
 965 00c5 19       		.uleb128 0x19
 966 00c6 03       		.uleb128 0x3
 967 00c7 0E       		.uleb128 0xe
 968 00c8 3A       		.uleb128 0x3a
 969 00c9 0B       		.uleb128 0xb
 970 00ca 3B       		.uleb128 0x3b
 971 00cb 05       		.uleb128 0x5
 972 00cc 27       		.uleb128 0x27
 973 00cd 19       		.uleb128 0x19
 974 00ce 49       		.uleb128 0x49
 975 00cf 13       		.uleb128 0x13
 976 00d0 11       		.uleb128 0x11
 977 00d1 01       		.uleb128 0x1
 978 00d2 12       		.uleb128 0x12
 979 00d3 06       		.uleb128 0x6
 980 00d4 40       		.uleb128 0x40
 981 00d5 18       		.uleb128 0x18
 982 00d6 9742     		.uleb128 0x2117
 983 00d8 19       		.uleb128 0x19
 984 00d9 00       		.byte	0
 985 00da 00       		.byte	0
 986 00db 0F       		.uleb128 0xf
 987 00dc 34       		.uleb128 0x34
 988 00dd 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 24


 989 00de 03       		.uleb128 0x3
 990 00df 0E       		.uleb128 0xe
 991 00e0 3A       		.uleb128 0x3a
 992 00e1 0B       		.uleb128 0xb
 993 00e2 3B       		.uleb128 0x3b
 994 00e3 0B       		.uleb128 0xb
 995 00e4 49       		.uleb128 0x49
 996 00e5 13       		.uleb128 0x13
 997 00e6 3F       		.uleb128 0x3f
 998 00e7 19       		.uleb128 0x19
 999 00e8 3C       		.uleb128 0x3c
 1000 00e9 19       		.uleb128 0x19
 1001 00ea 00       		.byte	0
 1002 00eb 00       		.byte	0
 1003 00ec 10       		.uleb128 0x10
 1004 00ed 26       		.uleb128 0x26
 1005 00ee 00       		.byte	0
 1006 00ef 49       		.uleb128 0x49
 1007 00f0 13       		.uleb128 0x13
 1008 00f1 00       		.byte	0
 1009 00f2 00       		.byte	0
 1010 00f3 11       		.uleb128 0x11
 1011 00f4 21       		.uleb128 0x21
 1012 00f5 00       		.byte	0
 1013 00f6 49       		.uleb128 0x49
 1014 00f7 13       		.uleb128 0x13
 1015 00f8 2F       		.uleb128 0x2f
 1016 00f9 05       		.uleb128 0x5
 1017 00fa 00       		.byte	0
 1018 00fb 00       		.byte	0
 1019 00fc 12       		.uleb128 0x12
 1020 00fd 34       		.uleb128 0x34
 1021 00fe 00       		.byte	0
 1022 00ff 03       		.uleb128 0x3
 1023 0100 0E       		.uleb128 0xe
 1024 0101 3A       		.uleb128 0x3a
 1025 0102 0B       		.uleb128 0xb
 1026 0103 3B       		.uleb128 0x3b
 1027 0104 05       		.uleb128 0x5
 1028 0105 49       		.uleb128 0x49
 1029 0106 13       		.uleb128 0x13
 1030 0107 3F       		.uleb128 0x3f
 1031 0108 19       		.uleb128 0x19
 1032 0109 3C       		.uleb128 0x3c
 1033 010a 19       		.uleb128 0x19
 1034 010b 00       		.byte	0
 1035 010c 00       		.byte	0
 1036 010d 13       		.uleb128 0x13
 1037 010e 35       		.uleb128 0x35
 1038 010f 00       		.byte	0
 1039 0110 49       		.uleb128 0x49
 1040 0111 13       		.uleb128 0x13
 1041 0112 00       		.byte	0
 1042 0113 00       		.byte	0
 1043 0114 00       		.byte	0
 1044              		.section	.debug_aranges,"",%progbits
 1045 0000 44000000 		.4byte	0x44
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 25


 1046 0004 0200     		.2byte	0x2
 1047 0006 00000000 		.4byte	.Ldebug_info0
 1048 000a 04       		.byte	0x4
 1049 000b 00       		.byte	0
 1050 000c 0000     		.2byte	0
 1051 000e 0000     		.2byte	0
 1052 0010 00000000 		.4byte	.LFB63
 1053 0014 44000000 		.4byte	.LFE63-.LFB63
 1054 0018 00000000 		.4byte	.LFB64
 1055 001c A4000000 		.4byte	.LFE64-.LFB64
 1056 0020 00000000 		.4byte	.LFB65
 1057 0024 20000000 		.4byte	.LFE65-.LFB65
 1058 0028 00000000 		.4byte	.LFB66
 1059 002c 4C000000 		.4byte	.LFE66-.LFB66
 1060 0030 00000000 		.4byte	.LFB67
 1061 0034 4C000000 		.4byte	.LFE67-.LFB67
 1062 0038 00000000 		.4byte	.LFB68
 1063 003c 12000000 		.4byte	.LFE68-.LFB68
 1064 0040 00000000 		.4byte	0
 1065 0044 00000000 		.4byte	0
 1066              		.section	.debug_ranges,"",%progbits
 1067              	.Ldebug_ranges0:
 1068 0000 00000000 		.4byte	.LFB63
 1069 0004 44000000 		.4byte	.LFE63
 1070 0008 00000000 		.4byte	.LFB64
 1071 000c A4000000 		.4byte	.LFE64
 1072 0010 00000000 		.4byte	.LFB65
 1073 0014 20000000 		.4byte	.LFE65
 1074 0018 00000000 		.4byte	.LFB66
 1075 001c 4C000000 		.4byte	.LFE66
 1076 0020 00000000 		.4byte	.LFB67
 1077 0024 4C000000 		.4byte	.LFE67
 1078 0028 00000000 		.4byte	.LFB68
 1079 002c 12000000 		.4byte	.LFE68
 1080 0030 00000000 		.4byte	0
 1081 0034 00000000 		.4byte	0
 1082              		.section	.debug_line,"",%progbits
 1083              	.Ldebug_line0:
 1084 0000 20020000 		.section	.debug_str,"MS",%progbits,1
 1084      02004101 
 1084      00000201 
 1084      FB0E0D00 
 1084      01010101 
 1085              	.LASF9:
 1086 0000 5F5F696E 		.ascii	"__int32_t\000"
 1086      7433325F 
 1086      7400
 1087              	.LASF15:
 1088 000a 4845585F 		.ascii	"HEX_ReadSiliconId\000"
 1088      52656164 
 1088      53696C69 
 1088      636F6E49 
 1088      6400
 1089              	.LASF25:
 1090 001c 61727261 		.ascii	"arrayID\000"
 1090      79494400 
 1091              	.LASF35:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 26


 1092 0024 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1092      4320342E 
 1092      392E3320 
 1092      32303135 
 1092      30333033 
 1093 0057 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1093      20726576 
 1093      6973696F 
 1093      6E203232 
 1093      31323230 
 1094 008a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1094      66756E63 
 1094      74696F6E 
 1094      2D736563 
 1094      74696F6E 
 1095              	.LASF26:
 1096 00b2 4845585F 		.ascii	"HEX_ReadChecksumData\000"
 1096      52656164 
 1096      43686563 
 1096      6B73756D 
 1096      44617461 
 1097              	.LASF16:
 1098 00c7 4845585F 		.ascii	"HEX_ReadRowData\000"
 1098      52656164 
 1098      526F7744 
 1098      61746100 
 1099              	.LASF31:
 1100 00d7 666C6173 		.ascii	"flashProtectionData_HexFile\000"
 1100      6850726F 
 1100      74656374 
 1100      696F6E44 
 1100      6174615F 
 1101              	.LASF11:
 1102 00f3 666C6F61 		.ascii	"float\000"
 1102      7400
 1103              	.LASF28:
 1104 00f9 64657669 		.ascii	"deviceSiliconId_HexFile\000"
 1104      63655369 
 1104      6C69636F 
 1104      6E49645F 
 1104      48657846 
 1105              	.LASF1:
 1106 0111 756E7369 		.ascii	"unsigned char\000"
 1106      676E6564 
 1106      20636861 
 1106      7200
 1107              	.LASF38:
 1108 011f 47657446 		.ascii	"GetFlashRowCount\000"
 1108      6C617368 
 1108      526F7743 
 1108      6F756E74 
 1108      00
 1109              	.LASF19:
 1110 0130 726F7744 		.ascii	"rowData\000"
 1110      61746100 
 1111              	.LASF33:
 1112 0138 666C6173 		.ascii	"flashData_HexFile_RAM\000"
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 27


 1112      68446174 
 1112      615F4865 
 1112      7846696C 
 1112      655F5241 
 1113              	.LASF3:
 1114 014e 73686F72 		.ascii	"short unsigned int\000"
 1114      7420756E 
 1114      7369676E 
 1114      65642069 
 1114      6E7400
 1115              	.LASF34:
 1116 0161 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1116      52784275 
 1116      66666572 
 1116      00
 1117              	.LASF23:
 1118 016e 726F7750 		.ascii	"rowProtectionByteSize\000"
 1118      726F7465 
 1118      6374696F 
 1118      6E427974 
 1118      6553697A 
 1119              	.LASF24:
 1120 0184 726F7750 		.ascii	"rowProtectionData\000"
 1120      726F7465 
 1120      6374696F 
 1120      6E446174 
 1120      6100
 1121              	.LASF5:
 1122 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 1122      20756E73 
 1122      69676E65 
 1122      6420696E 
 1122      7400
 1123              	.LASF21:
 1124 01a8 63686970 		.ascii	"chipProtectionData\000"
 1124      50726F74 
 1124      65637469 
 1124      6F6E4461 
 1124      746100
 1125              	.LASF22:
 1126 01bb 4845585F 		.ascii	"HEX_ReadRowProtectionData\000"
 1126      52656164 
 1126      526F7750 
 1126      726F7465 
 1126      6374696F 
 1127              	.LASF8:
 1128 01d5 756E7369 		.ascii	"unsigned int\000"
 1128      676E6564 
 1128      20696E74 
 1128      00
 1129              	.LASF7:
 1130 01e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1130      206C6F6E 
 1130      6720756E 
 1130      7369676E 
 1130      65642069 
 1131              	.LASF29:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 28


 1132 01f9 63686563 		.ascii	"checksumData_HexFile\000"
 1132      6B73756D 
 1132      44617461 
 1132      5F486578 
 1132      46696C65 
 1133              	.LASF37:
 1134 020e 443A5C55 		.ascii	"D:\\Users\\WorkBench\\Documents\\GitHub\\BackboneHS"
 1134      73657273 
 1134      5C576F72 
 1134      6B42656E 
 1134      63685C44 
 1135 023c 53505C50 		.ascii	"SP\\Programmer\\Programmer.cydsn\000"
 1135      726F6772 
 1135      616D6D65 
 1135      725C5072 
 1135      6F677261 
 1136              	.LASF10:
 1137 025b 696E7433 		.ascii	"int32_t\000"
 1137      325F7400 
 1138              	.LASF14:
 1139 0263 73697A65 		.ascii	"sizetype\000"
 1139      74797065 
 1139      00
 1140              	.LASF17:
 1141 026c 68657853 		.ascii	"hexSiliconId\000"
 1141      696C6963 
 1141      6F6E4964 
 1141      00
 1142              	.LASF6:
 1143 0279 6C6F6E67 		.ascii	"long long int\000"
 1143      206C6F6E 
 1143      6720696E 
 1143      7400
 1144              	.LASF13:
 1145 0287 63686172 		.ascii	"char\000"
 1145      00
 1146              	.LASF2:
 1147 028c 73686F72 		.ascii	"short int\000"
 1147      7420696E 
 1147      7400
 1148              	.LASF18:
 1149 0296 726F7743 		.ascii	"rowCount\000"
 1149      6F756E74 
 1149      00
 1150              	.LASF27:
 1151 029f 63686563 		.ascii	"checksumData\000"
 1151      6B73756D 
 1151      44617461 
 1151      00
 1152              	.LASF4:
 1153 02ac 6C6F6E67 		.ascii	"long int\000"
 1153      20696E74 
 1153      00
 1154              	.LASF36:
 1155 02b5 44617461 		.ascii	"DataFetch.c\000"
 1155      46657463 
 1155      682E6300 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccWfQZSu.s 			page 29


 1156              	.LASF0:
 1157 02c1 7369676E 		.ascii	"signed char\000"
 1157      65642063 
 1157      68617200 
 1158              	.LASF12:
 1159 02cd 646F7562 		.ascii	"double\000"
 1159      6C6500
 1160              	.LASF32:
 1161 02d4 63686970 		.ascii	"chipProtectionData_HexFile\000"
 1161      50726F74 
 1161      65637469 
 1161      6F6E4461 
 1161      74615F48 
 1162              	.LASF20:
 1163 02ef 4845585F 		.ascii	"HEX_ReadChipProtectionData\000"
 1163      52656164 
 1163      43686970 
 1163      50726F74 
 1163      65637469 
 1164              	.LASF30:
 1165 030a 666C6173 		.ascii	"flashData_HexFile\000"
 1165      68446174 
 1165      615F4865 
 1165      7846696C 
 1165      6500
 1166              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
