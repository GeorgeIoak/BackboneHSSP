ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DataFetch.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HEX_ReadSiliconId,"ax",%progbits
  19              		.align	2
  20              		.global	HEX_ReadSiliconId
  21              		.thumb
  22              		.thumb_func
  23              		.type	HEX_ReadSiliconId, %function
  24              	HEX_ReadSiliconId:
  25              	.LFB63:
  26              		.file 1 "DataFetch.c"
   1:DataFetch.c   **** /******************************************************************************
   2:DataFetch.c   **** * File Name: DataFetch.c
   3:DataFetch.c   **** * Version 1.0
   4:DataFetch.c   **** *
   5:DataFetch.c   **** * Description:
   6:DataFetch.c   **** *  This source file contains the functions to fetch data from the Hex image and 
   7:DataFetch.c   **** *  load in to the arrays used for Programming.
   8:DataFetch.c   **** *
   9:DataFetch.c   **** * Owner:
  10:DataFetch.c   **** *	Tushar Rastogi, Application Engineer (tusr@cypress.com)
  11:DataFetch.c   **** *
  12:DataFetch.c   **** * Related Document:
  13:DataFetch.c   **** *	AN84858 - PSoC 4 Programming using an External Microcontroller (HSSP)
  14:DataFetch.c   **** *
  15:DataFetch.c   **** * Hardware Dependency:
  16:DataFetch.c   **** *   PSoC 5LP Development Kit - CY8CKIT-050
  17:DataFetch.c   **** *
  18:DataFetch.c   **** * Code Tested With:
  19:DataFetch.c   **** *	PSoC Creator 3.2
  20:DataFetch.c   **** *	ARM GCC 4.8.4
  21:DataFetch.c   **** *	CY8CKIT-050
  22:DataFetch.c   **** *
  23:DataFetch.c   **** * Note:
  24:DataFetch.c   **** *  The definitions of the functions used in this file will change based on the
  25:DataFetch.c   **** *  interface used to get Hex file data.
  26:DataFetch.c   **** *******************************************************************************
  27:DataFetch.c   **** * Copyright (2015), Cypress Semiconductor Corporation.
  28:DataFetch.c   **** *******************************************************************************
  29:DataFetch.c   **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  30:DataFetch.c   **** * protected by and subject to worldwide patent protection (United States and
  31:DataFetch.c   **** * foreign), United States copyright laws and international treaty provisions.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 2


  32:DataFetch.c   **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  33:DataFetch.c   **** * license to copy, use, modify, create derivative works of, and compile the
  34:DataFetch.c   **** * Cypress Source Code and derivative works for the sole purpose of creating
  35:DataFetch.c   **** * custom software in support of licensee product to be used only in conjunction
  36:DataFetch.c   **** * with a Cypress integrated circuit as specified in the applicable agreement.
  37:DataFetch.c   **** * Any reproduction, modification, translation, compilation, or representation of
  38:DataFetch.c   **** * this software except as specified above is prohibited without the express
  39:DataFetch.c   **** * written permission of Cypress.
  40:DataFetch.c   **** *
  41:DataFetch.c   **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  42:DataFetch.c   **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  43:DataFetch.c   **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  44:DataFetch.c   **** * Cypress reserves the right to make changes without further notice to the
  45:DataFetch.c   **** * materials described herein. Cypress does not assume any liability arising out
  46:DataFetch.c   **** * of the application or use of any product or circuit described herein. Cypress
  47:DataFetch.c   **** * does not authorize its products for use as critical components in life-support
  48:DataFetch.c   **** * systems where a malfunction or failure may reasonably be expected to result in
  49:DataFetch.c   **** * significant injury to the user. The inclusion of Cypress' product in a life-
  50:DataFetch.c   **** * support systems application implies that the manufacturer assumes all risk of
  51:DataFetch.c   **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  52:DataFetch.c   **** * limited by and subject to the applicable Cypress software license agreement.
  53:DataFetch.c   **** 
  54:DataFetch.c   **** ******************************************************************************/
  55:DataFetch.c   **** 
  56:DataFetch.c   **** /******************************************************************************
  57:DataFetch.c   **** *   Header file Inclusion
  58:DataFetch.c   **** ******************************************************************************/
  59:DataFetch.c   **** #include "DataFetch.h"
  60:DataFetch.c   **** #include "HexImage.h"
  61:DataFetch.c   **** #include <device.h>
  62:DataFetch.c   **** 
  63:DataFetch.c   **** /******************************************************************************
  64:DataFetch.c   **** *   Global Constant declaration
  65:DataFetch.c   **** ******************************************************************************/
  66:DataFetch.c   **** 
  67:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  68:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA **************/
  69:DataFetch.c   **** /* The below Global constants are from HexImage.h. The data from these array of
  70:DataFetch.c   ****    constants are loaded in to the arrays passed a parameters to function.
  71:DataFetch.c   ****    These should be modified if different interface is used to get hex file data */
  72:DataFetch.c   **** 
  73:DataFetch.c   **** extern unsigned char const deviceSiliconId_HexFile[SILICON_ID_BYTE_LENGTH]; 
  74:DataFetch.c   **** extern unsigned char const checksumData_HexFile[CHECKSUM_BYTE_LENGTH]; 
  75:DataFetch.c   **** 
  76:DataFetch.c   **** /* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
  77:DataFetch.c   **** #if defined (CY_PSOC5)
  78:DataFetch.c   **** 	#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
  79:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE-NUMBER_OF_FLASH_ROWS_N
  80:DataFetch.c   **** 	#else
  81:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_H
  82:DataFetch.c   **** 	#endif
  83:DataFetch.c   **** #else
  84:DataFetch.c   **** 	extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_HE
  85:DataFetch.c   **** #endif
  86:DataFetch.c   **** 
  87:DataFetch.c   **** extern unsigned char const flashProtectionData_HexFile[FLASH_PROTECTION_BYTE_SIZE_HEX_FILE];
  88:DataFetch.c   **** extern unsigned char const chipProtectionData_HexFile; 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 3


  89:DataFetch.c   **** 
  90:DataFetch.c   **** /******************************************************************************
  91:DataFetch.c   **** *   Function Definitions
  92:DataFetch.c   **** ******************************************************************************/
  93:DataFetch.c   **** 
  94:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  95:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA ***************
  96:DataFetch.c   **** All the function definitions below should be modified based on the interface 
  97:DataFetch.c   **** used to get Hex file data to be programmed. If a protocol like I2C, UART is 
  98:DataFetch.c   **** used to get the hex file data, change the function definitions accordingly */
  99:DataFetch.c   **** 
 100:DataFetch.c   **** /******************************************************************************
 101:DataFetch.c   **** * Function Name: HEX_ReadSiliconId
 102:DataFetch.c   **** *******************************************************************************
 103:DataFetch.c   **** *
 104:DataFetch.c   **** * Summary:
 105:DataFetch.c   **** *  Loads the Device Silicon ID data in to an array 
 106:DataFetch.c   **** *
 107:DataFetch.c   **** * Parameters:
 108:DataFetch.c   **** *  unsigned long *hexSiliconId - Address of variable which will store the
 109:DataFetch.c   **** *								 Silicon ID fetched
 110:DataFetch.c   **** *
 111:DataFetch.c   **** * Return:
 112:DataFetch.c   **** *  None.
 113:DataFetch.c   **** *
 114:DataFetch.c   **** * Note:
 115:DataFetch.c   **** *  Modify definition based on method of getting programming data
 116:DataFetch.c   **** *
 117:DataFetch.c   **** ******************************************************************************/
 118:DataFetch.c   **** 
 119:DataFetch.c   **** void HEX_ReadSiliconId(unsigned long *hexSiliconId)
 120:DataFetch.c   **** {
  27              		.loc 1 120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 121:DataFetch.c   ****     unsigned char i;
 122:DataFetch.c   ****     
 123:DataFetch.c   ****     
 124:DataFetch.c   ****     for(i = 0; i < SILICON_ID_BYTE_LENGTH; i++)
  40              		.loc 1 124 0
  41 0008 0023     		movs	r3, #0
  42 000a FB73     		strb	r3, [r7, #15]
  43 000c 0FE0     		b	.L2
  44              	.L3:
 125:DataFetch.c   ****     {
 126:DataFetch.c   ****         *hexSiliconId = *hexSiliconId | ((unsigned long)(deviceSiliconId_HexFile[i]) << (8*i));		
  45              		.loc 1 126 0 discriminator 3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 4


  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 1A68     		ldr	r2, [r3]
  48 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  49 0014 0A49     		ldr	r1, .L4
  50 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  51 0018 1946     		mov	r1, r3
  52 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  53 001c DB00     		lsls	r3, r3, #3
  54 001e 01FA03F3 		lsl	r3, r1, r3
  55 0022 1A43     		orrs	r2, r2, r3
  56 0024 7B68     		ldr	r3, [r7, #4]
  57 0026 1A60     		str	r2, [r3]
 124:DataFetch.c   ****     {
  58              		.loc 1 124 0 discriminator 3
  59 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60 002a 0133     		adds	r3, r3, #1
  61 002c FB73     		strb	r3, [r7, #15]
  62              	.L2:
 124:DataFetch.c   ****     {
  63              		.loc 1 124 0 is_stmt 0 discriminator 1
  64 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  65 0030 032B     		cmp	r3, #3
  66 0032 ECD9     		bls	.L3
 127:DataFetch.c   ****     }
 128:DataFetch.c   **** }
  67              		.loc 1 128 0 is_stmt 1
  68 0034 1437     		adds	r7, r7, #20
  69              		.cfi_def_cfa_offset 4
  70 0036 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0038 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 003c 7047     		bx	lr
  77              	.L5:
  78 003e 00BF     		.align	2
  79              	.L4:
  80 0040 00000000 		.word	deviceSiliconId_HexFile
  81              		.cfi_endproc
  82              	.LFE63:
  83              		.size	HEX_ReadSiliconId, .-HEX_ReadSiliconId
  84              		.section	.text.HEX_ReadRowData,"ax",%progbits
  85              		.align	2
  86              		.global	HEX_ReadRowData
  87              		.thumb
  88              		.thumb_func
  89              		.type	HEX_ReadRowData, %function
  90              	HEX_ReadRowData:
  91              	.LFB64:
 129:DataFetch.c   **** 
 130:DataFetch.c   **** 
 131:DataFetch.c   **** /******************************************************************************
 132:DataFetch.c   **** * Function Name: HEX_ReadRowData
 133:DataFetch.c   **** *******************************************************************************
 134:DataFetch.c   **** *
 135:DataFetch.c   **** * Summary:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 5


 136:DataFetch.c   **** *  Loads the row data from hex file in to an array 
 137:DataFetch.c   **** *
 138:DataFetch.c   **** * Parameters:
 139:DataFetch.c   **** *  unsigned short rowCount      - Flash row count for which the data has to be
 140:DataFetch.c   **** *								  fetched 
 141:DataFetch.c   **** *  unsigned char * rowData      - Base address of array which will store the
 142:DataFetch.c   **** *								  Flash row data fetched
 143:DataFetch.c   **** *
 144:DataFetch.c   **** * Return:
 145:DataFetch.c   **** *  None.
 146:DataFetch.c   **** *
 147:DataFetch.c   **** * Note:
 148:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 149:DataFetch.c   **** *  
 150:DataFetch.c   **** *  REMOVE THIS LOGIC WHILE PORTING THE HSSP CODE TO OTHER HOST PROGRAMMER
 151:DataFetch.c   **** *
 152:DataFetch.c   **** ******************************************************************************/
 153:DataFetch.c   **** void HEX_ReadRowData(unsigned short rowCount, unsigned char * rowData)
 154:DataFetch.c   **** {
  92              		.loc 1 154 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 16
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 85B0     		sub	sp, sp, #20
 101              		.cfi_def_cfa_offset 24
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 104 0006 0346     		mov	r3, r0
 105 0008 3960     		str	r1, [r7]
 106 000a FB80     		strh	r3, [r7, #6]	@ movhi
 155:DataFetch.c   ****     unsigned short i; /* Maximum value of 'i' can be 256 */
 156:DataFetch.c   ****     //unsigned short j=0;
 157:DataFetch.c   **** 	#if defined (CY_PSOC5)
 158:DataFetch.c   **** 		/* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
 159:DataFetch.c   **** 		#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
 160:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE - NUMBER_OF_FLASH_ROWS_NOT_INCLUDED))
 107              		.loc 1 160 0
 108 000c FB88     		ldrh	r3, [r7, #6]
 109 000e B3F5337F 		cmp	r3, #716
 110 0012 14D8     		bhi	.L7
 161:DataFetch.c   **** 			{
 162:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 111              		.loc 1 162 0
 112 0014 0023     		movs	r3, #0
 113 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 114 0018 0DE0     		b	.L8
 115              	.L9:
 163:DataFetch.c   **** 			    {
 164:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 116              		.loc 1 164 0 discriminator 3
 117 001a FB89     		ldrh	r3, [r7, #14]
 118 001c 3A68     		ldr	r2, [r7]
 119 001e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 6


 120 0020 F988     		ldrh	r1, [r7, #6]
 121 0022 FA89     		ldrh	r2, [r7, #14]
 122 0024 1D48     		ldr	r0, .L16
 123 0026 0902     		lsls	r1, r1, #8
 124 0028 0A44     		add	r2, r2, r1
 125 002a 0244     		add	r2, r2, r0
 126 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 127 002e 1A70     		strb	r2, [r3]
 162:DataFetch.c   **** 			    {
 128              		.loc 1 162 0 discriminator 3
 129 0030 FB89     		ldrh	r3, [r7, #14]
 130 0032 0133     		adds	r3, r3, #1
 131 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 132              	.L8:
 162:DataFetch.c   **** 			    {
 133              		.loc 1 162 0 is_stmt 0 discriminator 1
 134 0036 FB89     		ldrh	r3, [r7, #14]
 135 0038 FF2B     		cmp	r3, #255
 136 003a EED9     		bls	.L9
 137 003c 28E0     		b	.L6
 138              	.L7:
 165:DataFetch.c   **** 			    }
 166:DataFetch.c   **** 			}
 167:DataFetch.c   **** 			else
 168:DataFetch.c   **** 			{
 169:DataFetch.c   ****                 if(rowCount >= (NUMBER_OF_FLASH_ROWS_HEX_FILE-8))
 139              		.loc 1 169 0 is_stmt 1
 140 003e FB88     		ldrh	r3, [r7, #6]
 141 0040 B3F57E7F 		cmp	r3, #1016
 142 0044 16D3     		bcc	.L11
 170:DataFetch.c   ****                 {                   
 171:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 143              		.loc 1 171 0
 144 0046 0023     		movs	r3, #0
 145 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 146 004a 0FE0     		b	.L12
 147              	.L13:
 172:DataFetch.c   ****     			    {
 173:DataFetch.c   ****     			        rowData[i] = flashData_HexFile_RAM[rowCount - (NUMBER_OF_FLASH_ROWS_HEX_FILE-8)][i];
 148              		.loc 1 173 0 discriminator 3
 149 004c FB89     		ldrh	r3, [r7, #14]
 150 004e 3A68     		ldr	r2, [r7]
 151 0050 1344     		add	r3, r3, r2
 152 0052 FA88     		ldrh	r2, [r7, #6]
 153 0054 A2F57E71 		sub	r1, r2, #1016
 154 0058 FA89     		ldrh	r2, [r7, #14]
 155 005a 1148     		ldr	r0, .L16+4
 156 005c 0902     		lsls	r1, r1, #8
 157 005e 0A44     		add	r2, r2, r1
 158 0060 0244     		add	r2, r2, r0
 159 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 160 0064 1A70     		strb	r2, [r3]
 171:DataFetch.c   ****     			    {
 161              		.loc 1 171 0 discriminator 3
 162 0066 FB89     		ldrh	r3, [r7, #14]
 163 0068 0133     		adds	r3, r3, #1
 164 006a FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 7


 165              	.L12:
 171:DataFetch.c   ****     			    {
 166              		.loc 1 171 0 is_stmt 0 discriminator 1
 167 006c FB89     		ldrh	r3, [r7, #14]
 168 006e FF2B     		cmp	r3, #255
 169 0070 ECD9     		bls	.L13
 170 0072 0DE0     		b	.L6
 171              	.L11:
 174:DataFetch.c   ****                     }
 175:DataFetch.c   ****                 }
 176:DataFetch.c   ****                 else
 177:DataFetch.c   ****                 {
 178:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 172              		.loc 1 178 0 is_stmt 1
 173 0074 0023     		movs	r3, #0
 174 0076 FB81     		strh	r3, [r7, #14]	@ movhi
 175 0078 07E0     		b	.L14
 176              	.L15:
 179:DataFetch.c   ****     			    {
 180:DataFetch.c   ****     			        rowData[i]=0;
 177              		.loc 1 180 0 discriminator 3
 178 007a FB89     		ldrh	r3, [r7, #14]
 179 007c 3A68     		ldr	r2, [r7]
 180 007e 1344     		add	r3, r3, r2
 181 0080 0022     		movs	r2, #0
 182 0082 1A70     		strb	r2, [r3]
 178:DataFetch.c   ****     			    {
 183              		.loc 1 178 0 discriminator 3
 184 0084 FB89     		ldrh	r3, [r7, #14]
 185 0086 0133     		adds	r3, r3, #1
 186 0088 FB81     		strh	r3, [r7, #14]	@ movhi
 187              	.L14:
 178:DataFetch.c   ****     			    {
 188              		.loc 1 178 0 is_stmt 0 discriminator 1
 189 008a FB89     		ldrh	r3, [r7, #14]
 190 008c FF2B     		cmp	r3, #255
 191 008e F4D9     		bls	.L15
 192              	.L6:
 181:DataFetch.c   ****                     }
 182:DataFetch.c   ****                 } 
 183:DataFetch.c   **** 	        }
 184:DataFetch.c   **** 
 185:DataFetch.c   ****         #else
 186:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 187:DataFetch.c   **** 			{
 188:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 189:DataFetch.c   **** 			    {
 190:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 191:DataFetch.c   **** 			    }
 192:DataFetch.c   **** 			}
 193:DataFetch.c   **** 		#endif
 194:DataFetch.c   **** 	#else
 195:DataFetch.c   **** 		if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 196:DataFetch.c   **** 			{
 197:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 198:DataFetch.c   **** 			    {
 199:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 8


 200:DataFetch.c   **** 			    }
 201:DataFetch.c   **** 			}
 202:DataFetch.c   **** 	#endif		
 203:DataFetch.c   **** }
 193              		.loc 1 203 0 is_stmt 1
 194 0090 1437     		adds	r7, r7, #20
 195              		.cfi_def_cfa_offset 4
 196 0092 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0094 5DF8047B 		ldr	r7, [sp], #4
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 0098 7047     		bx	lr
 203              	.L17:
 204 009a 00BF     		.align	2
 205              	.L16:
 206 009c 00000000 		.word	flashData_HexFile
 207 00a0 00000000 		.word	flashData_HexFile_RAM
 208              		.cfi_endproc
 209              	.LFE64:
 210              		.size	HEX_ReadRowData, .-HEX_ReadRowData
 211              		.section	.text.HEX_ReadChipProtectionData,"ax",%progbits
 212              		.align	2
 213              		.global	HEX_ReadChipProtectionData
 214              		.thumb
 215              		.thumb_func
 216              		.type	HEX_ReadChipProtectionData, %function
 217              	HEX_ReadChipProtectionData:
 218              	.LFB65:
 204:DataFetch.c   **** 
 205:DataFetch.c   **** /******************************************************************************
 206:DataFetch.c   **** * Function Name: HEX_ReadChipProtectionData
 207:DataFetch.c   **** *******************************************************************************
 208:DataFetch.c   **** *
 209:DataFetch.c   **** * Summary:
 210:DataFetch.c   **** *  Loads the Chip Protection data in to an array 
 211:DataFetch.c   **** *
 212:DataFetch.c   **** * Parameters:
 213:DataFetch.c   **** *
 214:DataFetch.c   **** *  unsigned char * chipProtectionData - Address of variable which will store
 215:DataFetch.c   **** *										the Chip Protection data fetched
 216:DataFetch.c   **** *
 217:DataFetch.c   **** * Return:
 218:DataFetch.c   **** *  None.
 219:DataFetch.c   **** *
 220:DataFetch.c   **** * Note:
 221:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 222:DataFetch.c   **** *
 223:DataFetch.c   **** ******************************************************************************/
 224:DataFetch.c   **** void HEX_ReadChipProtectionData(unsigned char * chipProtectionData)
 225:DataFetch.c   **** {
 219              		.loc 1 225 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 9


 224 0000 80B4     		push	{r7}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 231 0006 7860     		str	r0, [r7, #4]
 226:DataFetch.c   ****     *chipProtectionData = chipProtectionData_HexFile;
 232              		.loc 1 226 0
 233 0008 044B     		ldr	r3, .L19
 234 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 235 000c 7B68     		ldr	r3, [r7, #4]
 236 000e 1A70     		strb	r2, [r3]
 227:DataFetch.c   **** }
 237              		.loc 1 227 0
 238 0010 0C37     		adds	r7, r7, #12
 239              		.cfi_def_cfa_offset 4
 240 0012 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 0014 5DF8047B 		ldr	r7, [sp], #4
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 0018 7047     		bx	lr
 247              	.L20:
 248 001a 00BF     		.align	2
 249              	.L19:
 250 001c 00000000 		.word	chipProtectionData_HexFile
 251              		.cfi_endproc
 252              	.LFE65:
 253              		.size	HEX_ReadChipProtectionData, .-HEX_ReadChipProtectionData
 254              		.section	.text.HEX_ReadRowProtectionData,"ax",%progbits
 255              		.align	2
 256              		.global	HEX_ReadRowProtectionData
 257              		.thumb
 258              		.thumb_func
 259              		.type	HEX_ReadRowProtectionData, %function
 260              	HEX_ReadRowProtectionData:
 261              	.LFB66:
 228:DataFetch.c   **** 
 229:DataFetch.c   **** 
 230:DataFetch.c   **** /******************************************************************************
 231:DataFetch.c   **** * Function Name: HEX_ReadRowProtectionData
 232:DataFetch.c   **** *******************************************************************************
 233:DataFetch.c   **** *
 234:DataFetch.c   **** * Summary:
 235:DataFetch.c   **** *  Loads the Flash Row Protection data in to an array 
 236:DataFetch.c   **** *
 237:DataFetch.c   **** * Parameters:
 238:DataFetch.c   **** *
 239:DataFetch.c   **** *  unsigned char * rowProtectionData  - Base address of array which will store
 240:DataFetch.c   **** *									    the Flash Row Protection data fetched
 241:DataFetch.c   **** *  unsigned char rowProtectionByteSize - Size of flash row protection settings
 242:DataFetch.c   **** *										 in bytes
 243:DataFetch.c   **** *
 244:DataFetch.c   **** * Return:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 10


 245:DataFetch.c   **** *  None.
 246:DataFetch.c   **** *
 247:DataFetch.c   **** * Note:
 248:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 249:DataFetch.c   **** *
 250:DataFetch.c   **** ******************************************************************************/
 251:DataFetch.c   **** void HEX_ReadRowProtectionData(unsigned char rowProtectionByteSize, unsigned char * rowProtectionDa
 252:DataFetch.c   **** {
 262              		.loc 1 252 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 16
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 7, -4
 270 0002 85B0     		sub	sp, sp, #20
 271              		.cfi_def_cfa_offset 24
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 274 0006 0346     		mov	r3, r0
 275 0008 3960     		str	r1, [r7]
 276 000a FB71     		strb	r3, [r7, #7]
 277 000c 1346     		mov	r3, r2
 278 000e BB71     		strb	r3, [r7, #6]
 253:DataFetch.c   ****     unsigned short i;
 254:DataFetch.c   ****     
 255:DataFetch.c   ****     for(i = 0; i < rowProtectionByteSize; i++)
 279              		.loc 1 255 0
 280 0010 0023     		movs	r3, #0
 281 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 282 0014 0EE0     		b	.L22
 283              	.L23:
 256:DataFetch.c   ****     {
 257:DataFetch.c   ****         rowProtectionData[i] = flashProtectionData_HexFile[i + (arrayID * rowProtectionByteSize)];
 284              		.loc 1 257 0 discriminator 3
 285 0016 FB89     		ldrh	r3, [r7, #14]
 286 0018 3A68     		ldr	r2, [r7]
 287 001a 1344     		add	r3, r3, r2
 288 001c F989     		ldrh	r1, [r7, #14]
 289 001e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 290 0020 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 291 0022 00FB02F2 		mul	r2, r0, r2
 292 0026 0A44     		add	r2, r2, r1
 293 0028 0749     		ldr	r1, .L24
 294 002a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 295 002c 1A70     		strb	r2, [r3]
 255:DataFetch.c   ****     {
 296              		.loc 1 255 0 discriminator 3
 297 002e FB89     		ldrh	r3, [r7, #14]
 298 0030 0133     		adds	r3, r3, #1
 299 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 300              	.L22:
 255:DataFetch.c   ****     {
 301              		.loc 1 255 0 is_stmt 0 discriminator 1
 302 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 303 0036 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 11


 304 0038 FA89     		ldrh	r2, [r7, #14]
 305 003a 9A42     		cmp	r2, r3
 306 003c EBD3     		bcc	.L23
 258:DataFetch.c   ****     }    
 259:DataFetch.c   **** }
 307              		.loc 1 259 0 is_stmt 1
 308 003e 1437     		adds	r7, r7, #20
 309              		.cfi_def_cfa_offset 4
 310 0040 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0042 5DF8047B 		ldr	r7, [sp], #4
 314              		.cfi_restore 7
 315              		.cfi_def_cfa_offset 0
 316 0046 7047     		bx	lr
 317              	.L25:
 318              		.align	2
 319              	.L24:
 320 0048 00000000 		.word	flashProtectionData_HexFile
 321              		.cfi_endproc
 322              	.LFE66:
 323              		.size	HEX_ReadRowProtectionData, .-HEX_ReadRowProtectionData
 324              		.section	.text.HEX_ReadChecksumData,"ax",%progbits
 325              		.align	2
 326              		.global	HEX_ReadChecksumData
 327              		.thumb
 328              		.thumb_func
 329              		.type	HEX_ReadChecksumData, %function
 330              	HEX_ReadChecksumData:
 331              	.LFB67:
 260:DataFetch.c   **** 
 261:DataFetch.c   **** /******************************************************************************
 262:DataFetch.c   **** * Function Name: HEX_ReadChecksumData
 263:DataFetch.c   **** *******************************************************************************
 264:DataFetch.c   **** *
 265:DataFetch.c   **** * Summary:
 266:DataFetch.c   **** *  Loads the Checksum data in to an array 
 267:DataFetch.c   **** *
 268:DataFetch.c   **** * Parameters:
 269:DataFetch.c   **** *  unsigned short * checksumData - Base address of the array which will store
 270:DataFetch.c   **** *								   the Checksum data fetched
 271:DataFetch.c   **** *
 272:DataFetch.c   **** * Return:
 273:DataFetch.c   **** *  None.
 274:DataFetch.c   **** *
 275:DataFetch.c   **** * Note:
 276:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 277:DataFetch.c   **** *
 278:DataFetch.c   **** ******************************************************************************/
 279:DataFetch.c   **** void HEX_ReadChecksumData(unsigned short * checksumData)
 280:DataFetch.c   **** {
 332              		.loc 1 280 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 16
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0000 80B4     		push	{r7}
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 12


 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 85B0     		sub	sp, sp, #20
 341              		.cfi_def_cfa_offset 24
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 281:DataFetch.c   ****     unsigned char i;
 282:DataFetch.c   **** 
 283:DataFetch.c   ****     for(i = 0; i < CHECKSUM_BYTE_LENGTH; i++)
 345              		.loc 1 283 0
 346 0008 0023     		movs	r3, #0
 347 000a FB73     		strb	r3, [r7, #15]
 348 000c 14E0     		b	.L27
 349              	.L28:
 284:DataFetch.c   ****     {
 285:DataFetch.c   ****         *checksumData |= (checksumData_HexFile[i] << (8*i));
 350              		.loc 1 285 0 discriminator 3
 351 000e 7B68     		ldr	r3, [r7, #4]
 352 0010 1B88     		ldrh	r3, [r3]
 353 0012 99B2     		uxth	r1, r3
 354 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 355 0016 0C4A     		ldr	r2, .L29
 356 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 357 001a 1A46     		mov	r2, r3
 358 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 359 001e DB00     		lsls	r3, r3, #3
 360 0020 02FA03F3 		lsl	r3, r2, r3
 361 0024 9BB2     		uxth	r3, r3
 362 0026 0A46     		mov	r2, r1	@ movhi
 363 0028 1343     		orrs	r3, r3, r2
 364 002a 9BB2     		uxth	r3, r3
 365 002c 9AB2     		uxth	r2, r3
 366 002e 7B68     		ldr	r3, [r7, #4]
 367 0030 1A80     		strh	r2, [r3]	@ movhi
 283:DataFetch.c   ****     {
 368              		.loc 1 283 0 discriminator 3
 369 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 370 0034 0133     		adds	r3, r3, #1
 371 0036 FB73     		strb	r3, [r7, #15]
 372              	.L27:
 283:DataFetch.c   ****     {
 373              		.loc 1 283 0 is_stmt 0 discriminator 1
 374 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 375 003a 012B     		cmp	r3, #1
 376 003c E7D9     		bls	.L28
 286:DataFetch.c   ****     }
 287:DataFetch.c   **** }
 377              		.loc 1 287 0 is_stmt 1
 378 003e 1437     		adds	r7, r7, #20
 379              		.cfi_def_cfa_offset 4
 380 0040 BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0042 5DF8047B 		ldr	r7, [sp], #4
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 13


 386 0046 7047     		bx	lr
 387              	.L30:
 388              		.align	2
 389              	.L29:
 390 0048 00000000 		.word	checksumData_HexFile
 391              		.cfi_endproc
 392              	.LFE67:
 393              		.size	HEX_ReadChecksumData, .-HEX_ReadChecksumData
 394              		.section	.text.GetFlashRowCount,"ax",%progbits
 395              		.align	2
 396              		.global	GetFlashRowCount
 397              		.thumb
 398              		.thumb_func
 399              		.type	GetFlashRowCount, %function
 400              	GetFlashRowCount:
 401              	.LFB68:
 288:DataFetch.c   **** 
 289:DataFetch.c   **** /******************************************************************************
 290:DataFetch.c   **** * Function Name: GetFlashRowCount
 291:DataFetch.c   **** *******************************************************************************
 292:DataFetch.c   **** *
 293:DataFetch.c   **** * Summary:
 294:DataFetch.c   **** *  Returns the total number of Flash rows in the target PSoC 4 device
 295:DataFetch.c   **** *
 296:DataFetch.c   **** * Parameters:
 297:DataFetch.c   **** *  None
 298:DataFetch.c   **** *
 299:DataFetch.c   **** * Return:
 300:DataFetch.c   **** *  unsigned short
 301:DataFetch.c   **** *   Total number of Flash rows in target PSoC 4
 302:DataFetch.c   **** *
 303:DataFetch.c   **** * Note:
 304:DataFetch.c   **** *  The Flash row count is from the HexImage.h file. Modify the definition based
 305:DataFetch.c   **** *  on the method of getting programming data
 306:DataFetch.c   **** *
 307:DataFetch.c   **** ******************************************************************************/
 308:DataFetch.c   **** unsigned short GetFlashRowCount()
 309:DataFetch.c   **** {
 402              		.loc 1 309 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 7, -4
 410 0002 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 310:DataFetch.c   ****     return(NUMBER_OF_FLASH_ROWS_HEX_FILE);
 412              		.loc 1 310 0
 413 0004 4FF48063 		mov	r3, #1024
 311:DataFetch.c   **** }
 414              		.loc 1 311 0
 415 0008 1846     		mov	r0, r3
 416 000a BD46     		mov	sp, r7
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 14


 419 000c 5DF8047B 		ldr	r7, [sp], #4
 420              		.cfi_restore 7
 421              		.cfi_def_cfa_offset 0
 422 0010 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE68:
 425              		.size	GetFlashRowCount, .-GetFlashRowCount
 426 0012 00BF     		.text
 427              	.Letext0:
 428              		.file 2 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 429              		.file 3 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 430              		.file 4 "HexImage.h"
 431              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 432              		.section	.debug_info,"",%progbits
 433              	.Ldebug_info0:
 434 0000 A1020000 		.4byte	0x2a1
 435 0004 0400     		.2byte	0x4
 436 0006 00000000 		.4byte	.Ldebug_abbrev0
 437 000a 04       		.byte	0x4
 438 000b 01       		.uleb128 0x1
 439 000c 24000000 		.4byte	.LASF35
 440 0010 01       		.byte	0x1
 441 0011 B5020000 		.4byte	.LASF36
 442 0015 0E020000 		.4byte	.LASF37
 443 0019 00000000 		.4byte	.Ldebug_ranges0+0
 444 001d 00000000 		.4byte	0
 445 0021 00000000 		.4byte	.Ldebug_line0
 446 0025 02       		.uleb128 0x2
 447 0026 01       		.byte	0x1
 448 0027 06       		.byte	0x6
 449 0028 C1020000 		.4byte	.LASF0
 450 002c 02       		.uleb128 0x2
 451 002d 01       		.byte	0x1
 452 002e 08       		.byte	0x8
 453 002f 11010000 		.4byte	.LASF1
 454 0033 02       		.uleb128 0x2
 455 0034 02       		.byte	0x2
 456 0035 05       		.byte	0x5
 457 0036 8C020000 		.4byte	.LASF2
 458 003a 02       		.uleb128 0x2
 459 003b 02       		.byte	0x2
 460 003c 07       		.byte	0x7
 461 003d 4E010000 		.4byte	.LASF3
 462 0041 03       		.uleb128 0x3
 463 0042 00000000 		.4byte	.LASF9
 464 0046 02       		.byte	0x2
 465 0047 3F       		.byte	0x3f
 466 0048 4C000000 		.4byte	0x4c
 467 004c 02       		.uleb128 0x2
 468 004d 04       		.byte	0x4
 469 004e 05       		.byte	0x5
 470 004f AC020000 		.4byte	.LASF4
 471 0053 02       		.uleb128 0x2
 472 0054 04       		.byte	0x4
 473 0055 07       		.byte	0x7
 474 0056 96010000 		.4byte	.LASF5
 475 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 15


 476 005b 08       		.byte	0x8
 477 005c 05       		.byte	0x5
 478 005d 79020000 		.4byte	.LASF6
 479 0061 02       		.uleb128 0x2
 480 0062 08       		.byte	0x8
 481 0063 07       		.byte	0x7
 482 0064 E2010000 		.4byte	.LASF7
 483 0068 04       		.uleb128 0x4
 484 0069 04       		.byte	0x4
 485 006a 05       		.byte	0x5
 486 006b 696E7400 		.ascii	"int\000"
 487 006f 02       		.uleb128 0x2
 488 0070 04       		.byte	0x4
 489 0071 07       		.byte	0x7
 490 0072 D5010000 		.4byte	.LASF8
 491 0076 03       		.uleb128 0x3
 492 0077 5B020000 		.4byte	.LASF10
 493 007b 03       		.byte	0x3
 494 007c 2C       		.byte	0x2c
 495 007d 41000000 		.4byte	0x41
 496 0081 02       		.uleb128 0x2
 497 0082 04       		.byte	0x4
 498 0083 04       		.byte	0x4
 499 0084 F3000000 		.4byte	.LASF11
 500 0088 02       		.uleb128 0x2
 501 0089 08       		.byte	0x8
 502 008a 04       		.byte	0x4
 503 008b CD020000 		.4byte	.LASF12
 504 008f 02       		.uleb128 0x2
 505 0090 01       		.byte	0x1
 506 0091 08       		.byte	0x8
 507 0092 87020000 		.4byte	.LASF13
 508 0096 05       		.uleb128 0x5
 509 0097 2C000000 		.4byte	0x2c
 510 009b A6000000 		.4byte	0xa6
 511 009f 06       		.uleb128 0x6
 512 00a0 A6000000 		.4byte	0xa6
 513 00a4 03       		.byte	0x3
 514 00a5 00       		.byte	0
 515 00a6 02       		.uleb128 0x2
 516 00a7 04       		.byte	0x4
 517 00a8 07       		.byte	0x7
 518 00a9 63020000 		.4byte	.LASF14
 519 00ad 07       		.uleb128 0x7
 520 00ae 04       		.byte	0x4
 521 00af 2C000000 		.4byte	0x2c
 522 00b3 08       		.uleb128 0x8
 523 00b4 0A000000 		.4byte	.LASF15
 524 00b8 01       		.byte	0x1
 525 00b9 77       		.byte	0x77
 526 00ba 00000000 		.4byte	.LFB63
 527 00be 44000000 		.4byte	.LFE63-.LFB63
 528 00c2 01       		.uleb128 0x1
 529 00c3 9C       		.byte	0x9c
 530 00c4 E3000000 		.4byte	0xe3
 531 00c8 09       		.uleb128 0x9
 532 00c9 6C020000 		.4byte	.LASF17
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 16


 533 00cd 01       		.byte	0x1
 534 00ce 77       		.byte	0x77
 535 00cf E3000000 		.4byte	0xe3
 536 00d3 02       		.uleb128 0x2
 537 00d4 91       		.byte	0x91
 538 00d5 6C       		.sleb128 -20
 539 00d6 0A       		.uleb128 0xa
 540 00d7 6900     		.ascii	"i\000"
 541 00d9 01       		.byte	0x1
 542 00da 79       		.byte	0x79
 543 00db 2C000000 		.4byte	0x2c
 544 00df 02       		.uleb128 0x2
 545 00e0 91       		.byte	0x91
 546 00e1 77       		.sleb128 -9
 547 00e2 00       		.byte	0
 548 00e3 07       		.uleb128 0x7
 549 00e4 04       		.byte	0x4
 550 00e5 53000000 		.4byte	0x53
 551 00e9 08       		.uleb128 0x8
 552 00ea C7000000 		.4byte	.LASF16
 553 00ee 01       		.byte	0x1
 554 00ef 99       		.byte	0x99
 555 00f0 00000000 		.4byte	.LFB64
 556 00f4 A4000000 		.4byte	.LFE64-.LFB64
 557 00f8 01       		.uleb128 0x1
 558 00f9 9C       		.byte	0x9c
 559 00fa 27010000 		.4byte	0x127
 560 00fe 09       		.uleb128 0x9
 561 00ff 96020000 		.4byte	.LASF18
 562 0103 01       		.byte	0x1
 563 0104 99       		.byte	0x99
 564 0105 3A000000 		.4byte	0x3a
 565 0109 02       		.uleb128 0x2
 566 010a 91       		.byte	0x91
 567 010b 6E       		.sleb128 -18
 568 010c 09       		.uleb128 0x9
 569 010d 30010000 		.4byte	.LASF19
 570 0111 01       		.byte	0x1
 571 0112 99       		.byte	0x99
 572 0113 AD000000 		.4byte	0xad
 573 0117 02       		.uleb128 0x2
 574 0118 91       		.byte	0x91
 575 0119 68       		.sleb128 -24
 576 011a 0A       		.uleb128 0xa
 577 011b 6900     		.ascii	"i\000"
 578 011d 01       		.byte	0x1
 579 011e 9B       		.byte	0x9b
 580 011f 3A000000 		.4byte	0x3a
 581 0123 02       		.uleb128 0x2
 582 0124 91       		.byte	0x91
 583 0125 76       		.sleb128 -10
 584 0126 00       		.byte	0
 585 0127 08       		.uleb128 0x8
 586 0128 EF020000 		.4byte	.LASF20
 587 012c 01       		.byte	0x1
 588 012d E0       		.byte	0xe0
 589 012e 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 17


 590 0132 20000000 		.4byte	.LFE65-.LFB65
 591 0136 01       		.uleb128 0x1
 592 0137 9C       		.byte	0x9c
 593 0138 4B010000 		.4byte	0x14b
 594 013c 09       		.uleb128 0x9
 595 013d A8010000 		.4byte	.LASF21
 596 0141 01       		.byte	0x1
 597 0142 E0       		.byte	0xe0
 598 0143 AD000000 		.4byte	0xad
 599 0147 02       		.uleb128 0x2
 600 0148 91       		.byte	0x91
 601 0149 74       		.sleb128 -12
 602 014a 00       		.byte	0
 603 014b 08       		.uleb128 0x8
 604 014c BB010000 		.4byte	.LASF22
 605 0150 01       		.byte	0x1
 606 0151 FB       		.byte	0xfb
 607 0152 00000000 		.4byte	.LFB66
 608 0156 4C000000 		.4byte	.LFE66-.LFB66
 609 015a 01       		.uleb128 0x1
 610 015b 9C       		.byte	0x9c
 611 015c 97010000 		.4byte	0x197
 612 0160 09       		.uleb128 0x9
 613 0161 6E010000 		.4byte	.LASF23
 614 0165 01       		.byte	0x1
 615 0166 FB       		.byte	0xfb
 616 0167 2C000000 		.4byte	0x2c
 617 016b 02       		.uleb128 0x2
 618 016c 91       		.byte	0x91
 619 016d 6F       		.sleb128 -17
 620 016e 09       		.uleb128 0x9
 621 016f 84010000 		.4byte	.LASF24
 622 0173 01       		.byte	0x1
 623 0174 FB       		.byte	0xfb
 624 0175 AD000000 		.4byte	0xad
 625 0179 02       		.uleb128 0x2
 626 017a 91       		.byte	0x91
 627 017b 68       		.sleb128 -24
 628 017c 09       		.uleb128 0x9
 629 017d 1C000000 		.4byte	.LASF25
 630 0181 01       		.byte	0x1
 631 0182 FB       		.byte	0xfb
 632 0183 2C000000 		.4byte	0x2c
 633 0187 02       		.uleb128 0x2
 634 0188 91       		.byte	0x91
 635 0189 6E       		.sleb128 -18
 636 018a 0A       		.uleb128 0xa
 637 018b 6900     		.ascii	"i\000"
 638 018d 01       		.byte	0x1
 639 018e FD       		.byte	0xfd
 640 018f 3A000000 		.4byte	0x3a
 641 0193 02       		.uleb128 0x2
 642 0194 91       		.byte	0x91
 643 0195 76       		.sleb128 -10
 644 0196 00       		.byte	0
 645 0197 0B       		.uleb128 0xb
 646 0198 B2000000 		.4byte	.LASF26
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 18


 647 019c 01       		.byte	0x1
 648 019d 1701     		.2byte	0x117
 649 019f 00000000 		.4byte	.LFB67
 650 01a3 4C000000 		.4byte	.LFE67-.LFB67
 651 01a7 01       		.uleb128 0x1
 652 01a8 9C       		.byte	0x9c
 653 01a9 CA010000 		.4byte	0x1ca
 654 01ad 0C       		.uleb128 0xc
 655 01ae 9F020000 		.4byte	.LASF27
 656 01b2 01       		.byte	0x1
 657 01b3 1701     		.2byte	0x117
 658 01b5 CA010000 		.4byte	0x1ca
 659 01b9 02       		.uleb128 0x2
 660 01ba 91       		.byte	0x91
 661 01bb 6C       		.sleb128 -20
 662 01bc 0D       		.uleb128 0xd
 663 01bd 6900     		.ascii	"i\000"
 664 01bf 01       		.byte	0x1
 665 01c0 1901     		.2byte	0x119
 666 01c2 2C000000 		.4byte	0x2c
 667 01c6 02       		.uleb128 0x2
 668 01c7 91       		.byte	0x91
 669 01c8 77       		.sleb128 -9
 670 01c9 00       		.byte	0
 671 01ca 07       		.uleb128 0x7
 672 01cb 04       		.byte	0x4
 673 01cc 3A000000 		.4byte	0x3a
 674 01d0 0E       		.uleb128 0xe
 675 01d1 1F010000 		.4byte	.LASF38
 676 01d5 01       		.byte	0x1
 677 01d6 3401     		.2byte	0x134
 678 01d8 3A000000 		.4byte	0x3a
 679 01dc 00000000 		.4byte	.LFB68
 680 01e0 12000000 		.4byte	.LFE68-.LFB68
 681 01e4 01       		.uleb128 0x1
 682 01e5 9C       		.byte	0x9c
 683 01e6 0F       		.uleb128 0xf
 684 01e7 F9000000 		.4byte	.LASF28
 685 01eb 01       		.byte	0x1
 686 01ec 49       		.byte	0x49
 687 01ed F1010000 		.4byte	0x1f1
 688 01f1 10       		.uleb128 0x10
 689 01f2 96000000 		.4byte	0x96
 690 01f6 05       		.uleb128 0x5
 691 01f7 2C000000 		.4byte	0x2c
 692 01fb 06020000 		.4byte	0x206
 693 01ff 06       		.uleb128 0x6
 694 0200 A6000000 		.4byte	0xa6
 695 0204 01       		.byte	0x1
 696 0205 00       		.byte	0
 697 0206 0F       		.uleb128 0xf
 698 0207 F9010000 		.4byte	.LASF29
 699 020b 01       		.byte	0x1
 700 020c 4A       		.byte	0x4a
 701 020d 11020000 		.4byte	0x211
 702 0211 10       		.uleb128 0x10
 703 0212 F6010000 		.4byte	0x1f6
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 19


 704 0216 05       		.uleb128 0x5
 705 0217 2C000000 		.4byte	0x2c
 706 021b 2D020000 		.4byte	0x22d
 707 021f 11       		.uleb128 0x11
 708 0220 A6000000 		.4byte	0xa6
 709 0224 CC02     		.2byte	0x2cc
 710 0226 06       		.uleb128 0x6
 711 0227 A6000000 		.4byte	0xa6
 712 022b FF       		.byte	0xff
 713 022c 00       		.byte	0
 714 022d 0F       		.uleb128 0xf
 715 022e 0A030000 		.4byte	.LASF30
 716 0232 01       		.byte	0x1
 717 0233 4F       		.byte	0x4f
 718 0234 38020000 		.4byte	0x238
 719 0238 10       		.uleb128 0x10
 720 0239 16020000 		.4byte	0x216
 721 023d 05       		.uleb128 0x5
 722 023e 2C000000 		.4byte	0x2c
 723 0242 4D020000 		.4byte	0x24d
 724 0246 06       		.uleb128 0x6
 725 0247 A6000000 		.4byte	0xa6
 726 024b 7F       		.byte	0x7f
 727 024c 00       		.byte	0
 728 024d 0F       		.uleb128 0xf
 729 024e D7000000 		.4byte	.LASF31
 730 0252 01       		.byte	0x1
 731 0253 57       		.byte	0x57
 732 0254 58020000 		.4byte	0x258
 733 0258 10       		.uleb128 0x10
 734 0259 3D020000 		.4byte	0x23d
 735 025d 0F       		.uleb128 0xf
 736 025e D4020000 		.4byte	.LASF32
 737 0262 01       		.byte	0x1
 738 0263 58       		.byte	0x58
 739 0264 68020000 		.4byte	0x268
 740 0268 10       		.uleb128 0x10
 741 0269 2C000000 		.4byte	0x2c
 742 026d 05       		.uleb128 0x5
 743 026e 2C000000 		.4byte	0x2c
 744 0272 83020000 		.4byte	0x283
 745 0276 06       		.uleb128 0x6
 746 0277 A6000000 		.4byte	0xa6
 747 027b 07       		.byte	0x7
 748 027c 06       		.uleb128 0x6
 749 027d A6000000 		.4byte	0xa6
 750 0281 FF       		.byte	0xff
 751 0282 00       		.byte	0
 752 0283 0F       		.uleb128 0xf
 753 0284 38010000 		.4byte	.LASF33
 754 0288 04       		.byte	0x4
 755 0289 30       		.byte	0x30
 756 028a 8E020000 		.4byte	0x28e
 757 028e 10       		.uleb128 0x10
 758 028f 6D020000 		.4byte	0x26d
 759 0293 12       		.uleb128 0x12
 760 0294 61010000 		.4byte	.LASF34
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 20


 761 0298 05       		.byte	0x5
 762 0299 9606     		.2byte	0x696
 763 029b 9F020000 		.4byte	0x29f
 764 029f 13       		.uleb128 0x13
 765 02a0 76000000 		.4byte	0x76
 766 02a4 00       		.byte	0
 767              		.section	.debug_abbrev,"",%progbits
 768              	.Ldebug_abbrev0:
 769 0000 01       		.uleb128 0x1
 770 0001 11       		.uleb128 0x11
 771 0002 01       		.byte	0x1
 772 0003 25       		.uleb128 0x25
 773 0004 0E       		.uleb128 0xe
 774 0005 13       		.uleb128 0x13
 775 0006 0B       		.uleb128 0xb
 776 0007 03       		.uleb128 0x3
 777 0008 0E       		.uleb128 0xe
 778 0009 1B       		.uleb128 0x1b
 779 000a 0E       		.uleb128 0xe
 780 000b 55       		.uleb128 0x55
 781 000c 17       		.uleb128 0x17
 782 000d 11       		.uleb128 0x11
 783 000e 01       		.uleb128 0x1
 784 000f 10       		.uleb128 0x10
 785 0010 17       		.uleb128 0x17
 786 0011 00       		.byte	0
 787 0012 00       		.byte	0
 788 0013 02       		.uleb128 0x2
 789 0014 24       		.uleb128 0x24
 790 0015 00       		.byte	0
 791 0016 0B       		.uleb128 0xb
 792 0017 0B       		.uleb128 0xb
 793 0018 3E       		.uleb128 0x3e
 794 0019 0B       		.uleb128 0xb
 795 001a 03       		.uleb128 0x3
 796 001b 0E       		.uleb128 0xe
 797 001c 00       		.byte	0
 798 001d 00       		.byte	0
 799 001e 03       		.uleb128 0x3
 800 001f 16       		.uleb128 0x16
 801 0020 00       		.byte	0
 802 0021 03       		.uleb128 0x3
 803 0022 0E       		.uleb128 0xe
 804 0023 3A       		.uleb128 0x3a
 805 0024 0B       		.uleb128 0xb
 806 0025 3B       		.uleb128 0x3b
 807 0026 0B       		.uleb128 0xb
 808 0027 49       		.uleb128 0x49
 809 0028 13       		.uleb128 0x13
 810 0029 00       		.byte	0
 811 002a 00       		.byte	0
 812 002b 04       		.uleb128 0x4
 813 002c 24       		.uleb128 0x24
 814 002d 00       		.byte	0
 815 002e 0B       		.uleb128 0xb
 816 002f 0B       		.uleb128 0xb
 817 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 21


 818 0031 0B       		.uleb128 0xb
 819 0032 03       		.uleb128 0x3
 820 0033 08       		.uleb128 0x8
 821 0034 00       		.byte	0
 822 0035 00       		.byte	0
 823 0036 05       		.uleb128 0x5
 824 0037 01       		.uleb128 0x1
 825 0038 01       		.byte	0x1
 826 0039 49       		.uleb128 0x49
 827 003a 13       		.uleb128 0x13
 828 003b 01       		.uleb128 0x1
 829 003c 13       		.uleb128 0x13
 830 003d 00       		.byte	0
 831 003e 00       		.byte	0
 832 003f 06       		.uleb128 0x6
 833 0040 21       		.uleb128 0x21
 834 0041 00       		.byte	0
 835 0042 49       		.uleb128 0x49
 836 0043 13       		.uleb128 0x13
 837 0044 2F       		.uleb128 0x2f
 838 0045 0B       		.uleb128 0xb
 839 0046 00       		.byte	0
 840 0047 00       		.byte	0
 841 0048 07       		.uleb128 0x7
 842 0049 0F       		.uleb128 0xf
 843 004a 00       		.byte	0
 844 004b 0B       		.uleb128 0xb
 845 004c 0B       		.uleb128 0xb
 846 004d 49       		.uleb128 0x49
 847 004e 13       		.uleb128 0x13
 848 004f 00       		.byte	0
 849 0050 00       		.byte	0
 850 0051 08       		.uleb128 0x8
 851 0052 2E       		.uleb128 0x2e
 852 0053 01       		.byte	0x1
 853 0054 3F       		.uleb128 0x3f
 854 0055 19       		.uleb128 0x19
 855 0056 03       		.uleb128 0x3
 856 0057 0E       		.uleb128 0xe
 857 0058 3A       		.uleb128 0x3a
 858 0059 0B       		.uleb128 0xb
 859 005a 3B       		.uleb128 0x3b
 860 005b 0B       		.uleb128 0xb
 861 005c 27       		.uleb128 0x27
 862 005d 19       		.uleb128 0x19
 863 005e 11       		.uleb128 0x11
 864 005f 01       		.uleb128 0x1
 865 0060 12       		.uleb128 0x12
 866 0061 06       		.uleb128 0x6
 867 0062 40       		.uleb128 0x40
 868 0063 18       		.uleb128 0x18
 869 0064 9742     		.uleb128 0x2117
 870 0066 19       		.uleb128 0x19
 871 0067 01       		.uleb128 0x1
 872 0068 13       		.uleb128 0x13
 873 0069 00       		.byte	0
 874 006a 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 22


 875 006b 09       		.uleb128 0x9
 876 006c 05       		.uleb128 0x5
 877 006d 00       		.byte	0
 878 006e 03       		.uleb128 0x3
 879 006f 0E       		.uleb128 0xe
 880 0070 3A       		.uleb128 0x3a
 881 0071 0B       		.uleb128 0xb
 882 0072 3B       		.uleb128 0x3b
 883 0073 0B       		.uleb128 0xb
 884 0074 49       		.uleb128 0x49
 885 0075 13       		.uleb128 0x13
 886 0076 02       		.uleb128 0x2
 887 0077 18       		.uleb128 0x18
 888 0078 00       		.byte	0
 889 0079 00       		.byte	0
 890 007a 0A       		.uleb128 0xa
 891 007b 34       		.uleb128 0x34
 892 007c 00       		.byte	0
 893 007d 03       		.uleb128 0x3
 894 007e 08       		.uleb128 0x8
 895 007f 3A       		.uleb128 0x3a
 896 0080 0B       		.uleb128 0xb
 897 0081 3B       		.uleb128 0x3b
 898 0082 0B       		.uleb128 0xb
 899 0083 49       		.uleb128 0x49
 900 0084 13       		.uleb128 0x13
 901 0085 02       		.uleb128 0x2
 902 0086 18       		.uleb128 0x18
 903 0087 00       		.byte	0
 904 0088 00       		.byte	0
 905 0089 0B       		.uleb128 0xb
 906 008a 2E       		.uleb128 0x2e
 907 008b 01       		.byte	0x1
 908 008c 3F       		.uleb128 0x3f
 909 008d 19       		.uleb128 0x19
 910 008e 03       		.uleb128 0x3
 911 008f 0E       		.uleb128 0xe
 912 0090 3A       		.uleb128 0x3a
 913 0091 0B       		.uleb128 0xb
 914 0092 3B       		.uleb128 0x3b
 915 0093 05       		.uleb128 0x5
 916 0094 27       		.uleb128 0x27
 917 0095 19       		.uleb128 0x19
 918 0096 11       		.uleb128 0x11
 919 0097 01       		.uleb128 0x1
 920 0098 12       		.uleb128 0x12
 921 0099 06       		.uleb128 0x6
 922 009a 40       		.uleb128 0x40
 923 009b 18       		.uleb128 0x18
 924 009c 9742     		.uleb128 0x2117
 925 009e 19       		.uleb128 0x19
 926 009f 01       		.uleb128 0x1
 927 00a0 13       		.uleb128 0x13
 928 00a1 00       		.byte	0
 929 00a2 00       		.byte	0
 930 00a3 0C       		.uleb128 0xc
 931 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 23


 932 00a5 00       		.byte	0
 933 00a6 03       		.uleb128 0x3
 934 00a7 0E       		.uleb128 0xe
 935 00a8 3A       		.uleb128 0x3a
 936 00a9 0B       		.uleb128 0xb
 937 00aa 3B       		.uleb128 0x3b
 938 00ab 05       		.uleb128 0x5
 939 00ac 49       		.uleb128 0x49
 940 00ad 13       		.uleb128 0x13
 941 00ae 02       		.uleb128 0x2
 942 00af 18       		.uleb128 0x18
 943 00b0 00       		.byte	0
 944 00b1 00       		.byte	0
 945 00b2 0D       		.uleb128 0xd
 946 00b3 34       		.uleb128 0x34
 947 00b4 00       		.byte	0
 948 00b5 03       		.uleb128 0x3
 949 00b6 08       		.uleb128 0x8
 950 00b7 3A       		.uleb128 0x3a
 951 00b8 0B       		.uleb128 0xb
 952 00b9 3B       		.uleb128 0x3b
 953 00ba 05       		.uleb128 0x5
 954 00bb 49       		.uleb128 0x49
 955 00bc 13       		.uleb128 0x13
 956 00bd 02       		.uleb128 0x2
 957 00be 18       		.uleb128 0x18
 958 00bf 00       		.byte	0
 959 00c0 00       		.byte	0
 960 00c1 0E       		.uleb128 0xe
 961 00c2 2E       		.uleb128 0x2e
 962 00c3 00       		.byte	0
 963 00c4 3F       		.uleb128 0x3f
 964 00c5 19       		.uleb128 0x19
 965 00c6 03       		.uleb128 0x3
 966 00c7 0E       		.uleb128 0xe
 967 00c8 3A       		.uleb128 0x3a
 968 00c9 0B       		.uleb128 0xb
 969 00ca 3B       		.uleb128 0x3b
 970 00cb 05       		.uleb128 0x5
 971 00cc 27       		.uleb128 0x27
 972 00cd 19       		.uleb128 0x19
 973 00ce 49       		.uleb128 0x49
 974 00cf 13       		.uleb128 0x13
 975 00d0 11       		.uleb128 0x11
 976 00d1 01       		.uleb128 0x1
 977 00d2 12       		.uleb128 0x12
 978 00d3 06       		.uleb128 0x6
 979 00d4 40       		.uleb128 0x40
 980 00d5 18       		.uleb128 0x18
 981 00d6 9742     		.uleb128 0x2117
 982 00d8 19       		.uleb128 0x19
 983 00d9 00       		.byte	0
 984 00da 00       		.byte	0
 985 00db 0F       		.uleb128 0xf
 986 00dc 34       		.uleb128 0x34
 987 00dd 00       		.byte	0
 988 00de 03       		.uleb128 0x3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 24


 989 00df 0E       		.uleb128 0xe
 990 00e0 3A       		.uleb128 0x3a
 991 00e1 0B       		.uleb128 0xb
 992 00e2 3B       		.uleb128 0x3b
 993 00e3 0B       		.uleb128 0xb
 994 00e4 49       		.uleb128 0x49
 995 00e5 13       		.uleb128 0x13
 996 00e6 3F       		.uleb128 0x3f
 997 00e7 19       		.uleb128 0x19
 998 00e8 3C       		.uleb128 0x3c
 999 00e9 19       		.uleb128 0x19
 1000 00ea 00       		.byte	0
 1001 00eb 00       		.byte	0
 1002 00ec 10       		.uleb128 0x10
 1003 00ed 26       		.uleb128 0x26
 1004 00ee 00       		.byte	0
 1005 00ef 49       		.uleb128 0x49
 1006 00f0 13       		.uleb128 0x13
 1007 00f1 00       		.byte	0
 1008 00f2 00       		.byte	0
 1009 00f3 11       		.uleb128 0x11
 1010 00f4 21       		.uleb128 0x21
 1011 00f5 00       		.byte	0
 1012 00f6 49       		.uleb128 0x49
 1013 00f7 13       		.uleb128 0x13
 1014 00f8 2F       		.uleb128 0x2f
 1015 00f9 05       		.uleb128 0x5
 1016 00fa 00       		.byte	0
 1017 00fb 00       		.byte	0
 1018 00fc 12       		.uleb128 0x12
 1019 00fd 34       		.uleb128 0x34
 1020 00fe 00       		.byte	0
 1021 00ff 03       		.uleb128 0x3
 1022 0100 0E       		.uleb128 0xe
 1023 0101 3A       		.uleb128 0x3a
 1024 0102 0B       		.uleb128 0xb
 1025 0103 3B       		.uleb128 0x3b
 1026 0104 05       		.uleb128 0x5
 1027 0105 49       		.uleb128 0x49
 1028 0106 13       		.uleb128 0x13
 1029 0107 3F       		.uleb128 0x3f
 1030 0108 19       		.uleb128 0x19
 1031 0109 3C       		.uleb128 0x3c
 1032 010a 19       		.uleb128 0x19
 1033 010b 00       		.byte	0
 1034 010c 00       		.byte	0
 1035 010d 13       		.uleb128 0x13
 1036 010e 35       		.uleb128 0x35
 1037 010f 00       		.byte	0
 1038 0110 49       		.uleb128 0x49
 1039 0111 13       		.uleb128 0x13
 1040 0112 00       		.byte	0
 1041 0113 00       		.byte	0
 1042 0114 00       		.byte	0
 1043              		.section	.debug_aranges,"",%progbits
 1044 0000 44000000 		.4byte	0x44
 1045 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 25


 1046 0006 00000000 		.4byte	.Ldebug_info0
 1047 000a 04       		.byte	0x4
 1048 000b 00       		.byte	0
 1049 000c 0000     		.2byte	0
 1050 000e 0000     		.2byte	0
 1051 0010 00000000 		.4byte	.LFB63
 1052 0014 44000000 		.4byte	.LFE63-.LFB63
 1053 0018 00000000 		.4byte	.LFB64
 1054 001c A4000000 		.4byte	.LFE64-.LFB64
 1055 0020 00000000 		.4byte	.LFB65
 1056 0024 20000000 		.4byte	.LFE65-.LFB65
 1057 0028 00000000 		.4byte	.LFB66
 1058 002c 4C000000 		.4byte	.LFE66-.LFB66
 1059 0030 00000000 		.4byte	.LFB67
 1060 0034 4C000000 		.4byte	.LFE67-.LFB67
 1061 0038 00000000 		.4byte	.LFB68
 1062 003c 12000000 		.4byte	.LFE68-.LFB68
 1063 0040 00000000 		.4byte	0
 1064 0044 00000000 		.4byte	0
 1065              		.section	.debug_ranges,"",%progbits
 1066              	.Ldebug_ranges0:
 1067 0000 00000000 		.4byte	.LFB63
 1068 0004 44000000 		.4byte	.LFE63
 1069 0008 00000000 		.4byte	.LFB64
 1070 000c A4000000 		.4byte	.LFE64
 1071 0010 00000000 		.4byte	.LFB65
 1072 0014 20000000 		.4byte	.LFE65
 1073 0018 00000000 		.4byte	.LFB66
 1074 001c 4C000000 		.4byte	.LFE66
 1075 0020 00000000 		.4byte	.LFB67
 1076 0024 4C000000 		.4byte	.LFE67
 1077 0028 00000000 		.4byte	.LFB68
 1078 002c 12000000 		.4byte	.LFE68
 1079 0030 00000000 		.4byte	0
 1080 0034 00000000 		.4byte	0
 1081              		.section	.debug_line,"",%progbits
 1082              	.Ldebug_line0:
 1083 0000 20020000 		.section	.debug_str,"MS",%progbits,1
 1083      02004101 
 1083      00000201 
 1083      FB0E0D00 
 1083      01010101 
 1084              	.LASF9:
 1085 0000 5F5F696E 		.ascii	"__int32_t\000"
 1085      7433325F 
 1085      7400
 1086              	.LASF15:
 1087 000a 4845585F 		.ascii	"HEX_ReadSiliconId\000"
 1087      52656164 
 1087      53696C69 
 1087      636F6E49 
 1087      6400
 1088              	.LASF25:
 1089 001c 61727261 		.ascii	"arrayID\000"
 1089      79494400 
 1090              	.LASF35:
 1091 0024 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 26


 1091      4320342E 
 1091      392E3320 
 1091      32303135 
 1091      30333033 
 1092 0057 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1092      20726576 
 1092      6973696F 
 1092      6E203232 
 1092      31323230 
 1093 008a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1093      66756E63 
 1093      74696F6E 
 1093      2D736563 
 1093      74696F6E 
 1094              	.LASF26:
 1095 00b2 4845585F 		.ascii	"HEX_ReadChecksumData\000"
 1095      52656164 
 1095      43686563 
 1095      6B73756D 
 1095      44617461 
 1096              	.LASF16:
 1097 00c7 4845585F 		.ascii	"HEX_ReadRowData\000"
 1097      52656164 
 1097      526F7744 
 1097      61746100 
 1098              	.LASF31:
 1099 00d7 666C6173 		.ascii	"flashProtectionData_HexFile\000"
 1099      6850726F 
 1099      74656374 
 1099      696F6E44 
 1099      6174615F 
 1100              	.LASF11:
 1101 00f3 666C6F61 		.ascii	"float\000"
 1101      7400
 1102              	.LASF28:
 1103 00f9 64657669 		.ascii	"deviceSiliconId_HexFile\000"
 1103      63655369 
 1103      6C69636F 
 1103      6E49645F 
 1103      48657846 
 1104              	.LASF1:
 1105 0111 756E7369 		.ascii	"unsigned char\000"
 1105      676E6564 
 1105      20636861 
 1105      7200
 1106              	.LASF38:
 1107 011f 47657446 		.ascii	"GetFlashRowCount\000"
 1107      6C617368 
 1107      526F7743 
 1107      6F756E74 
 1107      00
 1108              	.LASF19:
 1109 0130 726F7744 		.ascii	"rowData\000"
 1109      61746100 
 1110              	.LASF33:
 1111 0138 666C6173 		.ascii	"flashData_HexFile_RAM\000"
 1111      68446174 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 27


 1111      615F4865 
 1111      7846696C 
 1111      655F5241 
 1112              	.LASF3:
 1113 014e 73686F72 		.ascii	"short unsigned int\000"
 1113      7420756E 
 1113      7369676E 
 1113      65642069 
 1113      6E7400
 1114              	.LASF34:
 1115 0161 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1115      52784275 
 1115      66666572 
 1115      00
 1116              	.LASF23:
 1117 016e 726F7750 		.ascii	"rowProtectionByteSize\000"
 1117      726F7465 
 1117      6374696F 
 1117      6E427974 
 1117      6553697A 
 1118              	.LASF24:
 1119 0184 726F7750 		.ascii	"rowProtectionData\000"
 1119      726F7465 
 1119      6374696F 
 1119      6E446174 
 1119      6100
 1120              	.LASF5:
 1121 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 1121      20756E73 
 1121      69676E65 
 1121      6420696E 
 1121      7400
 1122              	.LASF21:
 1123 01a8 63686970 		.ascii	"chipProtectionData\000"
 1123      50726F74 
 1123      65637469 
 1123      6F6E4461 
 1123      746100
 1124              	.LASF22:
 1125 01bb 4845585F 		.ascii	"HEX_ReadRowProtectionData\000"
 1125      52656164 
 1125      526F7750 
 1125      726F7465 
 1125      6374696F 
 1126              	.LASF8:
 1127 01d5 756E7369 		.ascii	"unsigned int\000"
 1127      676E6564 
 1127      20696E74 
 1127      00
 1128              	.LASF7:
 1129 01e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1129      206C6F6E 
 1129      6720756E 
 1129      7369676E 
 1129      65642069 
 1130              	.LASF29:
 1131 01f9 63686563 		.ascii	"checksumData_HexFile\000"
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 28


 1131      6B73756D 
 1131      44617461 
 1131      5F486578 
 1131      46696C65 
 1132              	.LASF37:
 1133 020e 443A5C55 		.ascii	"D:\\Users\\WorkBench\\Documents\\GitHub\\BackboneHS"
 1133      73657273 
 1133      5C576F72 
 1133      6B42656E 
 1133      63685C44 
 1134 023c 53505C50 		.ascii	"SP\\Programmer\\Programmer.cydsn\000"
 1134      726F6772 
 1134      616D6D65 
 1134      725C5072 
 1134      6F677261 
 1135              	.LASF10:
 1136 025b 696E7433 		.ascii	"int32_t\000"
 1136      325F7400 
 1137              	.LASF14:
 1138 0263 73697A65 		.ascii	"sizetype\000"
 1138      74797065 
 1138      00
 1139              	.LASF17:
 1140 026c 68657853 		.ascii	"hexSiliconId\000"
 1140      696C6963 
 1140      6F6E4964 
 1140      00
 1141              	.LASF6:
 1142 0279 6C6F6E67 		.ascii	"long long int\000"
 1142      206C6F6E 
 1142      6720696E 
 1142      7400
 1143              	.LASF13:
 1144 0287 63686172 		.ascii	"char\000"
 1144      00
 1145              	.LASF2:
 1146 028c 73686F72 		.ascii	"short int\000"
 1146      7420696E 
 1146      7400
 1147              	.LASF18:
 1148 0296 726F7743 		.ascii	"rowCount\000"
 1148      6F756E74 
 1148      00
 1149              	.LASF27:
 1150 029f 63686563 		.ascii	"checksumData\000"
 1150      6B73756D 
 1150      44617461 
 1150      00
 1151              	.LASF4:
 1152 02ac 6C6F6E67 		.ascii	"long int\000"
 1152      20696E74 
 1152      00
 1153              	.LASF36:
 1154 02b5 44617461 		.ascii	"DataFetch.c\000"
 1154      46657463 
 1154      682E6300 
 1155              	.LASF0:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFA23bU.s 			page 29


 1156 02c1 7369676E 		.ascii	"signed char\000"
 1156      65642063 
 1156      68617200 
 1157              	.LASF12:
 1158 02cd 646F7562 		.ascii	"double\000"
 1158      6C6500
 1159              	.LASF32:
 1160 02d4 63686970 		.ascii	"chipProtectionData_HexFile\000"
 1160      50726F74 
 1160      65637469 
 1160      6F6E4461 
 1160      74615F48 
 1161              	.LASF20:
 1162 02ef 4845585F 		.ascii	"HEX_ReadChipProtectionData\000"
 1162      52656164 
 1162      43686970 
 1162      50726F74 
 1162      65637469 
 1163              	.LASF30:
 1164 030a 666C6173 		.ascii	"flashData_HexFile\000"
 1164      68446174 
 1164      615F4865 
 1164      7846696C 
 1164      6500
 1165              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
