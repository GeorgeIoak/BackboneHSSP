ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SWD_PacketLayer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	swd_PacketHeader,1,1
  19              		.comm	swd_PacketAck,1,1
  20              		.comm	swd_PacketData,4,4
  21              		.section	.text.Swd_SendByte,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  25              		.type	Swd_SendByte, %function
  26              	Swd_SendByte:
  27              	.LFB0:
  28              		.file 1 "SWD_PacketLayer.c"
   1:SWD_PacketLayer.c **** /******************************************************************************
   2:SWD_PacketLayer.c **** * File Name: SWD_PacketLayer.c
   3:SWD_PacketLayer.c **** * Version 1.0
   4:SWD_PacketLayer.c **** *
   5:SWD_PacketLayer.c **** * Description:
   6:SWD_PacketLayer.c **** *  This file provides the source code for the packet layer functions of the 
   7:SWD_PacketLayer.c **** *  SWD protocol. This includes SWD Read packet, SWD Write packet.
   8:SWD_PacketLayer.c **** *
   9:SWD_PacketLayer.c **** * Owner:
  10:SWD_PacketLayer.c **** *	Tushar Rastogi, Application Engineer (tusr@cypress.com)
  11:SWD_PacketLayer.c **** *
  12:SWD_PacketLayer.c **** * Related Document:
  13:SWD_PacketLayer.c **** *	AN84858 - PSoC 4 Programming using an External Microcontroller (HSSP)
  14:SWD_PacketLayer.c **** *
  15:SWD_PacketLayer.c **** * Hardware Dependency:
  16:SWD_PacketLayer.c **** *   PSoC 5LP Development Kit - CY8CKIT-050
  17:SWD_PacketLayer.c **** *
  18:SWD_PacketLayer.c **** * Code Tested With:
  19:SWD_PacketLayer.c **** *	PSoC Creator 3.2
  20:SWD_PacketLayer.c **** *	ARM GCC 4.8.4
  21:SWD_PacketLayer.c **** *	CY8CKIT-050
  22:SWD_PacketLayer.c **** *
  23:SWD_PacketLayer.c **** * Note:
  24:SWD_PacketLayer.c **** *  The functions in SWD packet layer use the bit banging macros, functions
  25:SWD_PacketLayer.c **** *  in "SWD_PhysicalLayer.h"
  26:SWD_PacketLayer.c **** *
  27:SWD_PacketLayer.c **** *******************************************************************************
  28:SWD_PacketLayer.c **** * Copyright (2015), Cypress Semiconductor Corporation.
  29:SWD_PacketLayer.c **** *******************************************************************************
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 2


  30:SWD_PacketLayer.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  31:SWD_PacketLayer.c **** * protected by and subject to worldwide patent protection (United States and
  32:SWD_PacketLayer.c **** * foreign), United States copyright laws and international treaty provisions.
  33:SWD_PacketLayer.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  34:SWD_PacketLayer.c **** * license to copy, use, modify, create derivative works of, and compile the
  35:SWD_PacketLayer.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  36:SWD_PacketLayer.c **** * custom software in support of licensee product to be used only in conjunction
  37:SWD_PacketLayer.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  38:SWD_PacketLayer.c **** * Any reproduction, modification, translation, compilation, or representation of
  39:SWD_PacketLayer.c **** * this software except as specified above is prohibited without the express
  40:SWD_PacketLayer.c **** * written permission of Cypress.
  41:SWD_PacketLayer.c **** *
  42:SWD_PacketLayer.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  43:SWD_PacketLayer.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  44:SWD_PacketLayer.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  45:SWD_PacketLayer.c **** * Cypress reserves the right to make changes without further notice to the
  46:SWD_PacketLayer.c **** * materials described herein. Cypress does not assume any liability arising out
  47:SWD_PacketLayer.c **** * of the application or use of any product or circuit described herein. Cypress
  48:SWD_PacketLayer.c **** * does not authorize its products for use as critical components in life-support
  49:SWD_PacketLayer.c **** * systems where a malfunction or failure may reasonably be expected to result in
  50:SWD_PacketLayer.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  51:SWD_PacketLayer.c **** * support systems application implies that the manufacturer assumes all risk of
  52:SWD_PacketLayer.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  53:SWD_PacketLayer.c **** * limited by and subject to the applicable Cypress software license agreement.
  54:SWD_PacketLayer.c **** ******************************************************************************/
  55:SWD_PacketLayer.c **** 
  56:SWD_PacketLayer.c **** /******************************************************************************
  57:SWD_PacketLayer.c **** *   Header file Inclusion
  58:SWD_PacketLayer.c **** ******************************************************************************/
  59:SWD_PacketLayer.c **** #include "SWD_PacketLayer.h"
  60:SWD_PacketLayer.c **** 
  61:SWD_PacketLayer.c **** /* "SWD_PhysicalLayer.h" file contains the bit banging routines for 
  62:SWD_PacketLayer.c ****    programming */
  63:SWD_PacketLayer.c **** #include "SWD_PhysicalLayer.h"
  64:SWD_PacketLayer.c **** 
  65:SWD_PacketLayer.c **** /******************************************************************************
  66:SWD_PacketLayer.c **** *   Global Variable definitions
  67:SWD_PacketLayer.c **** ******************************************************************************/
  68:SWD_PacketLayer.c **** /* Stores the 8-bit SWD Packet header */
  69:SWD_PacketLayer.c **** unsigned char swd_PacketHeader;
  70:SWD_PacketLayer.c **** 
  71:SWD_PacketLayer.c **** /* Stores the 3-bit SWD Packet ACK data */
  72:SWD_PacketLayer.c **** unsigned char swd_PacketAck;
  73:SWD_PacketLayer.c **** 
  74:SWD_PacketLayer.c **** /* 4-byte Read, Write packet data */
  75:SWD_PacketLayer.c **** unsigned char swd_PacketData[DATA_BYTES_PER_PACKET];
  76:SWD_PacketLayer.c **** 
  77:SWD_PacketLayer.c **** /******************************************************************************
  78:SWD_PacketLayer.c **** *   Function Definitions
  79:SWD_PacketLayer.c **** ******************************************************************************/
  80:SWD_PacketLayer.c **** 
  81:SWD_PacketLayer.c **** /******************************************************************************
  82:SWD_PacketLayer.c **** * Function Name: Swd_SendByte
  83:SWD_PacketLayer.c **** *******************************************************************************
  84:SWD_PacketLayer.c **** *
  85:SWD_PacketLayer.c **** * Summary:
  86:SWD_PacketLayer.c **** *  Sends a byte of data on the SWD lines (SWDIO, SWDCK)
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 3


  87:SWD_PacketLayer.c **** *
  88:SWD_PacketLayer.c **** * Parameters:
  89:SWD_PacketLayer.c **** *  txByte: Data byte to be sent by host on SWDIO line (Least significant bit
  90:SWD_PacketLayer.c **** *		   sent first)
  91:SWD_PacketLayer.c **** *
  92:SWD_PacketLayer.c **** * Return:
  93:SWD_PacketLayer.c **** *  None.
  94:SWD_PacketLayer.c **** *
  95:SWD_PacketLayer.c **** * Note:
  96:SWD_PacketLayer.c **** *  This function is called for sending SWD header data in SWD Read/Write
  97:SWD_PacketLayer.c **** *  packets, and also to send data in a SWD Write packet.
  98:SWD_PacketLayer.c **** *
  99:SWD_PacketLayer.c **** ******************************************************************************/
 100:SWD_PacketLayer.c **** static void Swd_SendByte(unsigned char txByte)
 101:SWD_PacketLayer.c **** {
  29              		.loc 1 101 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
 102:SWD_PacketLayer.c ****     unsigned char loop = 0;
  43              		.loc 1 102 0
  44 000a 0023     		movs	r3, #0
  45 000c FB73     		strb	r3, [r7, #15]
 103:SWD_PacketLayer.c ****     
 104:SWD_PacketLayer.c ****     /* Loop for 8-bits of a byte */
 105:SWD_PacketLayer.c ****     for(loop = 0; loop < 8; loop++)
  46              		.loc 1 105 0
  47 000e 0023     		movs	r3, #0
  48 0010 FB73     		strb	r3, [r7, #15]
  49 0012 17E0     		b	.L2
  50              	.L5:
 106:SWD_PacketLayer.c ****     {
 107:SWD_PacketLayer.c ****         if(txByte & LSB_BIT_MASK) /* Send a '1' */
  51              		.loc 1 107 0
  52 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  53 0016 03F00103 		and	r3, r3, #1
  54 001a 002B     		cmp	r3, #0
  55 001c 06D0     		beq	.L3
 108:SWD_PacketLayer.c ****         {
 109:SWD_PacketLayer.c ****             SetSwdckLow();
  56              		.loc 1 109 0
  57 001e FFF7FEFF 		bl	SetSwdckLow
 110:SWD_PacketLayer.c ****             SetSwdioHigh();
  58              		.loc 1 110 0
  59 0022 FFF7FEFF 		bl	SetSwdioHigh
 111:SWD_PacketLayer.c ****             SetSwdckHigh();
  60              		.loc 1 111 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 4


  61 0026 FFF7FEFF 		bl	SetSwdckHigh
  62 002a 05E0     		b	.L4
  63              	.L3:
 112:SWD_PacketLayer.c ****         }
 113:SWD_PacketLayer.c ****         else  /* Send a '0' */
 114:SWD_PacketLayer.c ****         {
 115:SWD_PacketLayer.c ****             SetSwdckLow();
  64              		.loc 1 115 0
  65 002c FFF7FEFF 		bl	SetSwdckLow
 116:SWD_PacketLayer.c ****             SetSwdioLow();
  66              		.loc 1 116 0
  67 0030 FFF7FEFF 		bl	SetSwdioLow
 117:SWD_PacketLayer.c ****             SetSwdckHigh();            
  68              		.loc 1 117 0
  69 0034 FFF7FEFF 		bl	SetSwdckHigh
  70              	.L4:
 118:SWD_PacketLayer.c ****         }
 119:SWD_PacketLayer.c ****         
 120:SWD_PacketLayer.c ****         txByte = txByte >> 1; /* Make the next bit to send as LS bit */
  71              		.loc 1 120 0 discriminator 2
  72 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  73 003a 5B08     		lsrs	r3, r3, #1
  74 003c FB71     		strb	r3, [r7, #7]
 105:SWD_PacketLayer.c ****     {
  75              		.loc 1 105 0 discriminator 2
  76 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  77 0040 0133     		adds	r3, r3, #1
  78 0042 FB73     		strb	r3, [r7, #15]
  79              	.L2:
 105:SWD_PacketLayer.c ****     {
  80              		.loc 1 105 0 is_stmt 0 discriminator 1
  81 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  82 0046 072B     		cmp	r3, #7
  83 0048 E4D9     		bls	.L5
 121:SWD_PacketLayer.c ****     }
 122:SWD_PacketLayer.c **** }
  84              		.loc 1 122 0 is_stmt 1
  85 004a 1037     		adds	r7, r7, #16
  86              		.cfi_def_cfa_offset 8
  87 004c BD46     		mov	sp, r7
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 004e 80BD     		pop	{r7, pc}
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	Swd_SendByte, .-Swd_SendByte
  94              		.section	.text.Swd_ReceiveByte,"ax",%progbits
  95              		.align	2
  96              		.thumb
  97              		.thumb_func
  98              		.type	Swd_ReceiveByte, %function
  99              	Swd_ReceiveByte:
 100              	.LFB1:
 123:SWD_PacketLayer.c **** 
 124:SWD_PacketLayer.c **** 
 125:SWD_PacketLayer.c **** /******************************************************************************
 126:SWD_PacketLayer.c **** * Function Name: Swd_ReceiveByte
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 5


 127:SWD_PacketLayer.c **** *******************************************************************************
 128:SWD_PacketLayer.c **** *
 129:SWD_PacketLayer.c **** * Summary:
 130:SWD_PacketLayer.c **** *  Receives a byte of data on the SWD lines (SWDIO, SWDCK)
 131:SWD_PacketLayer.c **** *
 132:SWD_PacketLayer.c **** * Parameters:
 133:SWD_PacketLayer.c **** *  None.
 134:SWD_PacketLayer.c **** *
 135:SWD_PacketLayer.c **** * Return:
 136:SWD_PacketLayer.c **** *  rxByte: Data byte received by host on SWDIO line (Least significant bit is 
 137:SWD_PacketLayer.c **** *          first received bit)
 138:SWD_PacketLayer.c **** *
 139:SWD_PacketLayer.c **** * Note:
 140:SWD_PacketLayer.c **** *  This function is called for reading data bytes in a SWD Read Packet
 141:SWD_PacketLayer.c **** *
 142:SWD_PacketLayer.c **** ******************************************************************************/
 143:SWD_PacketLayer.c **** static unsigned char Swd_ReceiveByte()
 144:SWD_PacketLayer.c **** {
 101              		.loc 1 144 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 8
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 82B0     		sub	sp, sp, #8
 110              		.cfi_def_cfa_offset 16
 111 0004 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 145:SWD_PacketLayer.c ****     unsigned char loop   = 0;
 113              		.loc 1 145 0
 114 0006 0023     		movs	r3, #0
 115 0008 FB71     		strb	r3, [r7, #7]
 146:SWD_PacketLayer.c ****     unsigned char rxBit  = 0;
 116              		.loc 1 146 0
 117 000a 0023     		movs	r3, #0
 118 000c 7B71     		strb	r3, [r7, #5]
 147:SWD_PacketLayer.c ****     unsigned char rxByte = 0;
 119              		.loc 1 147 0
 120 000e 0023     		movs	r3, #0
 121 0010 BB71     		strb	r3, [r7, #6]
 148:SWD_PacketLayer.c ****     
 149:SWD_PacketLayer.c ****     /* Loop for 8-bits of a byte */
 150:SWD_PacketLayer.c ****     for(loop = 0; loop < 8; loop++)
 122              		.loc 1 150 0
 123 0012 0023     		movs	r3, #0
 124 0014 FB71     		strb	r3, [r7, #7]
 125 0016 25E0     		b	.L7
 126              	.L10:
 151:SWD_PacketLayer.c ****     {
 152:SWD_PacketLayer.c ****         SWDCK_OUTPUT_LOW;
 127              		.loc 1 152 0
 128 0018 164A     		ldr	r2, .L12
 129 001a 164B     		ldr	r3, .L12
 130 001c 1B78     		ldrb	r3, [r3]
 131 001e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 6


 132 0020 23F00803 		bic	r3, r3, #8
 133 0024 DBB2     		uxtb	r3, r3
 134 0026 1370     		strb	r3, [r2]
 153:SWD_PacketLayer.c **** 		
 154:SWD_PacketLayer.c **** 		/* Read the SWDIO input line */
 155:SWD_PacketLayer.c ****         rxBit = ReadSwdio();
 135              		.loc 1 155 0
 136 0028 FFF7FEFF 		bl	ReadSwdio
 137 002c 0346     		mov	r3, r0
 138 002e 7B71     		strb	r3, [r7, #5]
 156:SWD_PacketLayer.c **** 		
 157:SWD_PacketLayer.c ****         SWDCK_OUTPUT_HIGH;
 139              		.loc 1 157 0
 140 0030 104A     		ldr	r2, .L12
 141 0032 104B     		ldr	r3, .L12
 142 0034 1B78     		ldrb	r3, [r3]
 143 0036 DBB2     		uxtb	r3, r3
 144 0038 43F00803 		orr	r3, r3, #8
 145 003c DBB2     		uxtb	r3, r3
 146 003e 1370     		strb	r3, [r2]
 158:SWD_PacketLayer.c ****         
 159:SWD_PacketLayer.c ****         rxByte = rxByte >> 1;
 147              		.loc 1 159 0
 148 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 149 0042 5B08     		lsrs	r3, r3, #1
 150 0044 BB71     		strb	r3, [r7, #6]
 160:SWD_PacketLayer.c ****         
 161:SWD_PacketLayer.c ****         if(rxBit) /* Received a '1' */
 151              		.loc 1 161 0
 152 0046 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 153 0048 002B     		cmp	r3, #0
 154 004a 04D0     		beq	.L8
 162:SWD_PacketLayer.c ****         {
 163:SWD_PacketLayer.c ****             rxByte = rxByte | MSB_BIT_MASK;
 155              		.loc 1 163 0
 156 004c BB79     		ldrb	r3, [r7, #6]
 157 004e 63F07F03 		orn	r3, r3, #127
 158 0052 BB71     		strb	r3, [r7, #6]
 159 0054 03E0     		b	.L9
 160              	.L8:
 164:SWD_PacketLayer.c ****         }
 165:SWD_PacketLayer.c ****         else /* Received a '0' */
 166:SWD_PacketLayer.c ****         {
 167:SWD_PacketLayer.c ****             rxByte = rxByte & (~MSB_BIT_MASK);   
 161              		.loc 1 167 0
 162 0056 BB79     		ldrb	r3, [r7, #6]
 163 0058 03F07F03 		and	r3, r3, #127
 164 005c BB71     		strb	r3, [r7, #6]
 165              	.L9:
 150:SWD_PacketLayer.c ****     {
 166              		.loc 1 150 0 discriminator 2
 167 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 168 0060 0133     		adds	r3, r3, #1
 169 0062 FB71     		strb	r3, [r7, #7]
 170              	.L7:
 150:SWD_PacketLayer.c ****     {
 171              		.loc 1 150 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 7


 172 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 0066 072B     		cmp	r3, #7
 174 0068 D6D9     		bls	.L10
 168:SWD_PacketLayer.c ****         }  
 169:SWD_PacketLayer.c ****         
 170:SWD_PacketLayer.c ****     }
 171:SWD_PacketLayer.c ****     
 172:SWD_PacketLayer.c ****     return(rxByte);
 175              		.loc 1 172 0 is_stmt 1
 176 006a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 173:SWD_PacketLayer.c **** }
 177              		.loc 1 173 0
 178 006c 1846     		mov	r0, r3
 179 006e 0837     		adds	r7, r7, #8
 180              		.cfi_def_cfa_offset 8
 181 0070 BD46     		mov	sp, r7
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0072 80BD     		pop	{r7, pc}
 185              	.L13:
 186              		.align	2
 187              	.L12:
 188 0074 C0510040 		.word	1073762752
 189              		.cfi_endproc
 190              	.LFE1:
 191              		.size	Swd_ReceiveByte, .-Swd_ReceiveByte
 192              		.section	.text.Swd_FirstTurnAroundPhase,"ax",%progbits
 193              		.align	2
 194              		.thumb
 195              		.thumb_func
 196              		.type	Swd_FirstTurnAroundPhase, %function
 197              	Swd_FirstTurnAroundPhase:
 198              	.LFB2:
 174:SWD_PacketLayer.c **** 
 175:SWD_PacketLayer.c **** 
 176:SWD_PacketLayer.c **** /******************************************************************************
 177:SWD_PacketLayer.c **** * Function Name: Swd_FirstTurnAroundPhase
 178:SWD_PacketLayer.c **** *******************************************************************************
 179:SWD_PacketLayer.c **** *
 180:SWD_PacketLayer.c **** * Summary:
 181:SWD_PacketLayer.c **** *  Generates one SWDCK clock cycle for Turnaround phase of a SWD packet.
 182:SWD_PacketLayer.c **** *  SWDIO drive mode is changed to High-Z drive mode so that the host can read
 183:SWD_PacketLayer.c **** *  the data on the SWDIO.
 184:SWD_PacketLayer.c **** *
 185:SWD_PacketLayer.c **** * Parameters:
 186:SWD_PacketLayer.c **** *  None.
 187:SWD_PacketLayer.c **** *
 188:SWD_PacketLayer.c **** * Return:
 189:SWD_PacketLayer.c **** *  None.
 190:SWD_PacketLayer.c **** *
 191:SWD_PacketLayer.c **** * Note:
 192:SWD_PacketLayer.c **** *  This function is called during SWD Read/Write packets
 193:SWD_PacketLayer.c **** *
 194:SWD_PacketLayer.c **** ******************************************************************************/
 195:SWD_PacketLayer.c **** static void Swd_FirstTurnAroundPhase()
 196:SWD_PacketLayer.c **** {
 199              		.loc 1 196 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 8


 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 197:SWD_PacketLayer.c **** 	/* Change to High-Z drive mode for host to read the SWDIO line */
 198:SWD_PacketLayer.c ****     SetSwdioHizInput(); 
 209              		.loc 1 198 0
 210 0004 FFF7FEFF 		bl	SetSwdioHizInput
 199:SWD_PacketLayer.c ****     SetSwdckLow();
 211              		.loc 1 199 0
 212 0008 FFF7FEFF 		bl	SetSwdckLow
 200:SWD_PacketLayer.c ****     SetSwdckHigh();
 213              		.loc 1 200 0
 214 000c FFF7FEFF 		bl	SetSwdckHigh
 201:SWD_PacketLayer.c **** }
 215              		.loc 1 201 0
 216 0010 80BD     		pop	{r7, pc}
 217              		.cfi_endproc
 218              	.LFE2:
 219              		.size	Swd_FirstTurnAroundPhase, .-Swd_FirstTurnAroundPhase
 220 0012 00BF     		.section	.text.Swd_SecondTurnAroundPhase,"ax",%progbits
 221              		.align	2
 222              		.thumb
 223              		.thumb_func
 224              		.type	Swd_SecondTurnAroundPhase, %function
 225              	Swd_SecondTurnAroundPhase:
 226              	.LFB3:
 202:SWD_PacketLayer.c **** 
 203:SWD_PacketLayer.c **** /******************************************************************************
 204:SWD_PacketLayer.c **** * Function Name: Swd_SecondTurnAroundPhase
 205:SWD_PacketLayer.c **** *******************************************************************************
 206:SWD_PacketLayer.c **** *
 207:SWD_PacketLayer.c **** * Summary:
 208:SWD_PacketLayer.c **** *  Generates one SWDCK clock cycle for Turnaround phase of a SWD packet.
 209:SWD_PacketLayer.c **** *  SWDIO drive mode is changed to CMOS output drive mode so that the host can
 210:SWD_PacketLayer.c **** *  write data on SWDIO.
 211:SWD_PacketLayer.c **** *
 212:SWD_PacketLayer.c **** * Parameters:
 213:SWD_PacketLayer.c **** *  None.
 214:SWD_PacketLayer.c **** *
 215:SWD_PacketLayer.c **** * Return:
 216:SWD_PacketLayer.c **** *  None.
 217:SWD_PacketLayer.c **** *
 218:SWD_PacketLayer.c **** * Note:
 219:SWD_PacketLayer.c **** *  This function is called during SWD Read/Write packets
 220:SWD_PacketLayer.c **** *
 221:SWD_PacketLayer.c **** ******************************************************************************/
 222:SWD_PacketLayer.c **** static void Swd_SecondTurnAroundPhase()
 223:SWD_PacketLayer.c **** {
 227              		.loc 1 223 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 9


 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 224:SWD_PacketLayer.c **** 	/* Change to CMOS output drive mode for host to write to SWDIO */
 225:SWD_PacketLayer.c ****     SetSwdioCmosOutput();
 237              		.loc 1 225 0
 238 0004 FFF7FEFF 		bl	SetSwdioCmosOutput
 226:SWD_PacketLayer.c ****     SetSwdckLow();
 239              		.loc 1 226 0
 240 0008 FFF7FEFF 		bl	SetSwdckLow
 227:SWD_PacketLayer.c ****     SetSwdckHigh();
 241              		.loc 1 227 0
 242 000c FFF7FEFF 		bl	SetSwdckHigh
 228:SWD_PacketLayer.c **** }
 243              		.loc 1 228 0
 244 0010 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE3:
 247              		.size	Swd_SecondTurnAroundPhase, .-Swd_SecondTurnAroundPhase
 248 0012 00BF     		.section	.text.Swd_GetAckSegment,"ax",%progbits
 249              		.align	2
 250              		.thumb
 251              		.thumb_func
 252              		.type	Swd_GetAckSegment, %function
 253              	Swd_GetAckSegment:
 254              	.LFB4:
 229:SWD_PacketLayer.c **** 
 230:SWD_PacketLayer.c **** /******************************************************************************
 231:SWD_PacketLayer.c **** * Function Name: Swd_GetAckSegment
 232:SWD_PacketLayer.c **** ********************************************************************************
 233:SWD_PacketLayer.c **** *
 234:SWD_PacketLayer.c **** * Summary:
 235:SWD_PacketLayer.c **** *  Gets the 3-bit ACK response in a SWD packet
 236:SWD_PacketLayer.c **** *
 237:SWD_PacketLayer.c **** * Parameters:
 238:SWD_PacketLayer.c **** *  None.
 239:SWD_PacketLayer.c **** *
 240:SWD_PacketLayer.c **** * Return:
 241:SWD_PacketLayer.c **** *  ack:
 242:SWD_PacketLayer.c **** *   3-bit ACK response is returned as a byte. Three possible return values are:
 243:SWD_PacketLayer.c **** *       0x01 - SWD_OK_ACK
 244:SWD_PacketLayer.c **** *       0x02 - SWD_WAIT_ACK
 245:SWD_PacketLayer.c **** *       0x04 - SWD_FAULT_ACK
 246:SWD_PacketLayer.c **** *       Any other return value - Undefined ACK code.
 247:SWD_PacketLayer.c **** *       Treat it similar to SWD_FAULT_ACK and abort operation.
 248:SWD_PacketLayer.c **** *
 249:SWD_PacketLayer.c **** * Note:
 250:SWD_PacketLayer.c **** *  This function is called during SWD Read/Write packets
 251:SWD_PacketLayer.c **** *
 252:SWD_PacketLayer.c **** ******************************************************************************/
 253:SWD_PacketLayer.c **** static unsigned char Swd_GetAckSegment()
 254:SWD_PacketLayer.c **** {
 255              		.loc 1 254 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 10


 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 0000 80B5     		push	{r7, lr}
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 82B0     		sub	sp, sp, #8
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 255:SWD_PacketLayer.c ****     unsigned char ack = 0;
 267              		.loc 1 255 0
 268 0006 0023     		movs	r3, #0
 269 0008 FB71     		strb	r3, [r7, #7]
 256:SWD_PacketLayer.c ****     unsigned char receiveBit = 0;
 270              		.loc 1 256 0
 271 000a 0023     		movs	r3, #0
 272 000c 7B71     		strb	r3, [r7, #5]
 257:SWD_PacketLayer.c ****     unsigned char loop = 0;
 273              		.loc 1 257 0
 274 000e 0023     		movs	r3, #0
 275 0010 BB71     		strb	r3, [r7, #6]
 258:SWD_PacketLayer.c ****     
 259:SWD_PacketLayer.c ****     /* ACK bits are received lsb bit first */
 260:SWD_PacketLayer.c ****     for(loop = 0; loop < NUMBER_OF_ACK_BITS; loop++)
 276              		.loc 1 260 0
 277 0012 0023     		movs	r3, #0
 278 0014 BB71     		strb	r3, [r7, #6]
 279 0016 13E0     		b	.L17
 280              	.L18:
 261:SWD_PacketLayer.c ****     {
 262:SWD_PacketLayer.c ****         SetSwdckLow();
 281              		.loc 1 262 0 discriminator 3
 282 0018 FFF7FEFF 		bl	SetSwdckLow
 263:SWD_PacketLayer.c **** 		
 264:SWD_PacketLayer.c **** 		/* Store the ACK bit received */
 265:SWD_PacketLayer.c ****         receiveBit = ReadSwdio();
 283              		.loc 1 265 0 discriminator 3
 284 001c FFF7FEFF 		bl	ReadSwdio
 285 0020 0346     		mov	r3, r0
 286 0022 7B71     		strb	r3, [r7, #5]
 266:SWD_PacketLayer.c ****         SetSwdckHigh();
 287              		.loc 1 266 0 discriminator 3
 288 0024 FFF7FEFF 		bl	SetSwdckHigh
 267:SWD_PacketLayer.c ****         
 268:SWD_PacketLayer.c **** 		/* Concatenate the ACK bit with ACK data byte */
 269:SWD_PacketLayer.c ****         ack = ack | (receiveBit << loop); 
 289              		.loc 1 269 0 discriminator 3
 290 0028 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 291 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 292 002c 02FA03F3 		lsl	r3, r2, r3
 293 0030 DAB2     		uxtb	r2, r3
 294 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 295 0034 1343     		orrs	r3, r3, r2
 296 0036 DBB2     		uxtb	r3, r3
 297 0038 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 11


 260:SWD_PacketLayer.c ****     {
 298              		.loc 1 260 0 discriminator 3
 299 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 300 003c 0133     		adds	r3, r3, #1
 301 003e BB71     		strb	r3, [r7, #6]
 302              	.L17:
 260:SWD_PacketLayer.c ****     {
 303              		.loc 1 260 0 is_stmt 0 discriminator 1
 304 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 305 0042 022B     		cmp	r3, #2
 306 0044 E8D9     		bls	.L18
 270:SWD_PacketLayer.c ****     }
 271:SWD_PacketLayer.c ****     
 272:SWD_PacketLayer.c ****     return(ack);   
 307              		.loc 1 272 0 is_stmt 1
 308 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 273:SWD_PacketLayer.c **** }
 309              		.loc 1 273 0
 310 0048 1846     		mov	r0, r3
 311 004a 0837     		adds	r7, r7, #8
 312              		.cfi_def_cfa_offset 8
 313 004c BD46     		mov	sp, r7
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 004e 80BD     		pop	{r7, pc}
 317              		.cfi_endproc
 318              	.LFE4:
 319              		.size	Swd_GetAckSegment, .-Swd_GetAckSegment
 320              		.section	.text.Swd_SendParity,"ax",%progbits
 321              		.align	2
 322              		.thumb
 323              		.thumb_func
 324              		.type	Swd_SendParity, %function
 325              	Swd_SendParity:
 326              	.LFB5:
 274:SWD_PacketLayer.c **** 
 275:SWD_PacketLayer.c **** /******************************************************************************
 276:SWD_PacketLayer.c **** * Function Name: Swd_SendParity
 277:SWD_PacketLayer.c **** *******************************************************************************
 278:SWD_PacketLayer.c **** *
 279:SWD_PacketLayer.c **** * Summary:
 280:SWD_PacketLayer.c **** *  Sends the 1-bit parity data on SWD lines
 281:SWD_PacketLayer.c **** *
 282:SWD_PacketLayer.c **** * Parameters:
 283:SWD_PacketLayer.c **** *  parity:
 284:SWD_PacketLayer.c **** *    1-bit parity data received as a byte (either '1' or '0')
 285:SWD_PacketLayer.c **** *
 286:SWD_PacketLayer.c **** * Return:
 287:SWD_PacketLayer.c **** *  None.
 288:SWD_PacketLayer.c **** *
 289:SWD_PacketLayer.c **** * Note:
 290:SWD_PacketLayer.c **** *  This function is called during SWD Write packet
 291:SWD_PacketLayer.c **** *
 292:SWD_PacketLayer.c **** ******************************************************************************/
 293:SWD_PacketLayer.c **** static void Swd_SendParity(unsigned char parity)
 294:SWD_PacketLayer.c **** {
 327              		.loc 1 294 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 12


 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 82B0     		sub	sp, sp, #8
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 339 0006 0346     		mov	r3, r0
 340 0008 FB71     		strb	r3, [r7, #7]
 295:SWD_PacketLayer.c ****     /* Make the clock low, Send SWDIO data, Make Clock high */
 296:SWD_PacketLayer.c **** 
 297:SWD_PacketLayer.c ****     SetSwdckLow();
 341              		.loc 1 297 0
 342 000a FFF7FEFF 		bl	SetSwdckLow
 298:SWD_PacketLayer.c ****     if(parity)
 343              		.loc 1 298 0
 344 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 345 0010 002B     		cmp	r3, #0
 346 0012 02D0     		beq	.L21
 299:SWD_PacketLayer.c ****     {
 300:SWD_PacketLayer.c ****         SetSwdioHigh();
 347              		.loc 1 300 0
 348 0014 FFF7FEFF 		bl	SetSwdioHigh
 349 0018 01E0     		b	.L22
 350              	.L21:
 301:SWD_PacketLayer.c ****     }
 302:SWD_PacketLayer.c ****     else
 303:SWD_PacketLayer.c ****     {
 304:SWD_PacketLayer.c ****         SetSwdioLow();
 351              		.loc 1 304 0
 352 001a FFF7FEFF 		bl	SetSwdioLow
 353              	.L22:
 305:SWD_PacketLayer.c ****     }
 306:SWD_PacketLayer.c ****     SetSwdckHigh();    
 354              		.loc 1 306 0
 355 001e FFF7FEFF 		bl	SetSwdckHigh
 307:SWD_PacketLayer.c **** }
 356              		.loc 1 307 0
 357 0022 0837     		adds	r7, r7, #8
 358              		.cfi_def_cfa_offset 8
 359 0024 BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 0026 80BD     		pop	{r7, pc}
 363              		.cfi_endproc
 364              	.LFE5:
 365              		.size	Swd_SendParity, .-Swd_SendParity
 366              		.section	.text.Swd_ReceiveParity,"ax",%progbits
 367              		.align	2
 368              		.thumb
 369              		.thumb_func
 370              		.type	Swd_ReceiveParity, %function
 371              	Swd_ReceiveParity:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 13


 372              	.LFB6:
 308:SWD_PacketLayer.c **** 
 309:SWD_PacketLayer.c **** /******************************************************************************
 310:SWD_PacketLayer.c **** * Function Name: Swd_ReceiveParity
 311:SWD_PacketLayer.c **** *******************************************************************************
 312:SWD_PacketLayer.c **** *
 313:SWD_PacketLayer.c **** * Summary:
 314:SWD_PacketLayer.c **** *  Receives the 1-bit parity data on SWD lines
 315:SWD_PacketLayer.c **** *
 316:SWD_PacketLayer.c **** * Parameters:
 317:SWD_PacketLayer.c **** *  None.
 318:SWD_PacketLayer.c **** *
 319:SWD_PacketLayer.c **** * Return:
 320:SWD_PacketLayer.c **** *  parity:
 321:SWD_PacketLayer.c **** *    1-bit parity data returned as a byte (either '1' or '0')
 322:SWD_PacketLayer.c **** *
 323:SWD_PacketLayer.c **** * Note:
 324:SWD_PacketLayer.c **** *  This function is called during SWD Read packet
 325:SWD_PacketLayer.c **** *
 326:SWD_PacketLayer.c **** ******************************************************************************/
 327:SWD_PacketLayer.c **** static unsigned char Swd_ReceiveParity()
 328:SWD_PacketLayer.c **** {
 373              		.loc 1 328 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 82B0     		sub	sp, sp, #8
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 329:SWD_PacketLayer.c ****     unsigned char parity;
 330:SWD_PacketLayer.c ****     
 331:SWD_PacketLayer.c ****     /* Make the clock low, Read SWDIO data, Make Clock high */
 332:SWD_PacketLayer.c ****     
 333:SWD_PacketLayer.c ****     SetSwdckLow();
 385              		.loc 1 333 0
 386 0006 FFF7FEFF 		bl	SetSwdckLow
 334:SWD_PacketLayer.c ****     parity = ReadSwdio();
 387              		.loc 1 334 0
 388 000a FFF7FEFF 		bl	ReadSwdio
 389 000e 0346     		mov	r3, r0
 390 0010 FB71     		strb	r3, [r7, #7]
 335:SWD_PacketLayer.c ****     SetSwdckHigh();    
 391              		.loc 1 335 0
 392 0012 FFF7FEFF 		bl	SetSwdckHigh
 336:SWD_PacketLayer.c ****     
 337:SWD_PacketLayer.c ****     return(parity);
 393              		.loc 1 337 0
 394 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 338:SWD_PacketLayer.c **** }
 395              		.loc 1 338 0
 396 0018 1846     		mov	r0, r3
 397 001a 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 14


 398              		.cfi_def_cfa_offset 8
 399 001c BD46     		mov	sp, r7
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 001e 80BD     		pop	{r7, pc}
 403              		.cfi_endproc
 404              	.LFE6:
 405              		.size	Swd_ReceiveParity, .-Swd_ReceiveParity
 406              		.section	.text.Swd_SendDummyClocks,"ax",%progbits
 407              		.align	2
 408              		.thumb
 409              		.thumb_func
 410              		.type	Swd_SendDummyClocks, %function
 411              	Swd_SendDummyClocks:
 412              	.LFB7:
 339:SWD_PacketLayer.c **** 
 340:SWD_PacketLayer.c **** /******************************************************************************
 341:SWD_PacketLayer.c **** * Function Name: Swd_SendDummyClocks
 342:SWD_PacketLayer.c **** *******************************************************************************
 343:SWD_PacketLayer.c **** *
 344:SWD_PacketLayer.c **** * Summary:
 345:SWD_PacketLayer.c **** *  Sends three SWDCK clock cycles with SWDIO line held low
 346:SWD_PacketLayer.c **** *
 347:SWD_PacketLayer.c **** * Parameters:
 348:SWD_PacketLayer.c **** *  None.
 349:SWD_PacketLayer.c **** *
 350:SWD_PacketLayer.c **** * Return:
 351:SWD_PacketLayer.c **** *  None.
 352:SWD_PacketLayer.c **** *
 353:SWD_PacketLayer.c **** * Note:
 354:SWD_PacketLayer.c **** *  This function is called during SWD Read/Write packets.
 355:SWD_PacketLayer.c **** *
 356:SWD_PacketLayer.c **** ******************************************************************************/
 357:SWD_PacketLayer.c **** static void Swd_SendDummyClocks()
 358:SWD_PacketLayer.c **** {
 413              		.loc 1 358 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 82B0     		sub	sp, sp, #8
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 359:SWD_PacketLayer.c ****     unsigned char loop;
 360:SWD_PacketLayer.c ****     
 361:SWD_PacketLayer.c ****     /* Send three SWDCK clock cycles with SWDIO line held low */   
 362:SWD_PacketLayer.c ****     SetSwdioLow();
 425              		.loc 1 362 0
 426 0006 FFF7FEFF 		bl	SetSwdioLow
 363:SWD_PacketLayer.c ****     for(loop = 0; loop < NUMBER_OF_DUMMY_SWD_CLOCK_CYCLES; loop++)
 427              		.loc 1 363 0
 428 000a 0023     		movs	r3, #0
 429 000c FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 15


 430 000e 06E0     		b	.L26
 431              	.L27:
 364:SWD_PacketLayer.c ****     {
 365:SWD_PacketLayer.c ****        SetSwdckLow();       
 432              		.loc 1 365 0 discriminator 3
 433 0010 FFF7FEFF 		bl	SetSwdckLow
 366:SWD_PacketLayer.c ****        SetSwdckHigh(); 
 434              		.loc 1 366 0 discriminator 3
 435 0014 FFF7FEFF 		bl	SetSwdckHigh
 363:SWD_PacketLayer.c ****     for(loop = 0; loop < NUMBER_OF_DUMMY_SWD_CLOCK_CYCLES; loop++)
 436              		.loc 1 363 0 discriminator 3
 437 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 001a 0133     		adds	r3, r3, #1
 439 001c FB71     		strb	r3, [r7, #7]
 440              	.L26:
 363:SWD_PacketLayer.c ****     for(loop = 0; loop < NUMBER_OF_DUMMY_SWD_CLOCK_CYCLES; loop++)
 441              		.loc 1 363 0 is_stmt 0 discriminator 1
 442 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 443 0020 022B     		cmp	r3, #2
 444 0022 F5D9     		bls	.L27
 367:SWD_PacketLayer.c ****     }
 368:SWD_PacketLayer.c **** }
 445              		.loc 1 368 0 is_stmt 1
 446 0024 0837     		adds	r7, r7, #8
 447              		.cfi_def_cfa_offset 8
 448 0026 BD46     		mov	sp, r7
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 0028 80BD     		pop	{r7, pc}
 452              		.cfi_endproc
 453              	.LFE7:
 454              		.size	Swd_SendDummyClocks, .-Swd_SendDummyClocks
 455 002a 00BF     		.section	.text.Swd_CountOneBits,"ax",%progbits
 456              		.align	2
 457              		.thumb
 458              		.thumb_func
 459              		.type	Swd_CountOneBits, %function
 460              	Swd_CountOneBits:
 461              	.LFB8:
 369:SWD_PacketLayer.c **** 
 370:SWD_PacketLayer.c **** /******************************************************************************
 371:SWD_PacketLayer.c **** * Function Name: Swd_CountOneBits
 372:SWD_PacketLayer.c **** *******************************************************************************
 373:SWD_PacketLayer.c **** *
 374:SWD_PacketLayer.c **** * Summary:
 375:SWD_PacketLayer.c **** *  Counts the number of 1's in a byte
 376:SWD_PacketLayer.c **** *
 377:SWD_PacketLayer.c **** * Parameters:
 378:SWD_PacketLayer.c **** *  dataByte:
 379:SWD_PacketLayer.c **** *   Byte for which the number of 1's need to be found
 380:SWD_PacketLayer.c **** *
 381:SWD_PacketLayer.c **** * Return:
 382:SWD_PacketLayer.c **** *  count:
 383:SWD_PacketLayer.c **** *   Number of 1's present in DataByte
 384:SWD_PacketLayer.c **** *
 385:SWD_PacketLayer.c **** * Note:
 386:SWD_PacketLayer.c **** *  This function is used for computing parity of data
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 16


 387:SWD_PacketLayer.c **** *
 388:SWD_PacketLayer.c **** ******************************************************************************/
 389:SWD_PacketLayer.c **** static unsigned char Swd_CountOneBits(unsigned char dataByte)
 390:SWD_PacketLayer.c **** {
 462              		.loc 1 390 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 0000 80B4     		push	{r7}
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 0002 85B0     		sub	sp, sp, #20
 471              		.cfi_def_cfa_offset 24
 472 0004 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 474 0006 0346     		mov	r3, r0
 475 0008 FB71     		strb	r3, [r7, #7]
 391:SWD_PacketLayer.c ****     unsigned char count = 0;
 476              		.loc 1 391 0
 477 000a 0023     		movs	r3, #0
 478 000c FB73     		strb	r3, [r7, #15]
 392:SWD_PacketLayer.c ****     unsigned char i;
 393:SWD_PacketLayer.c ****     
 394:SWD_PacketLayer.c ****     /* Loop for 8-bits of a byte */
 395:SWD_PacketLayer.c ****     /* Increment count variable if LS bit is set */
 396:SWD_PacketLayer.c ****     for(i = 0; i < 8; i++)
 479              		.loc 1 396 0
 480 000e 0023     		movs	r3, #0
 481 0010 BB73     		strb	r3, [r7, #14]
 482 0012 0DE0     		b	.L29
 483              	.L31:
 397:SWD_PacketLayer.c ****     {
 398:SWD_PacketLayer.c ****         if(dataByte & LSB_BIT_MASK)
 484              		.loc 1 398 0
 485 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 486 0016 03F00103 		and	r3, r3, #1
 487 001a 002B     		cmp	r3, #0
 488 001c 02D0     		beq	.L30
 399:SWD_PacketLayer.c ****         {
 400:SWD_PacketLayer.c ****             count++; 
 489              		.loc 1 400 0
 490 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 491 0020 0133     		adds	r3, r3, #1
 492 0022 FB73     		strb	r3, [r7, #15]
 493              	.L30:
 401:SWD_PacketLayer.c ****         }
 402:SWD_PacketLayer.c ****         
 403:SWD_PacketLayer.c ****         dataByte = dataByte >> 1;
 494              		.loc 1 403 0 discriminator 2
 495 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 496 0026 5B08     		lsrs	r3, r3, #1
 497 0028 FB71     		strb	r3, [r7, #7]
 396:SWD_PacketLayer.c ****     {
 498              		.loc 1 396 0 discriminator 2
 499 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 500 002c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 17


 501 002e BB73     		strb	r3, [r7, #14]
 502              	.L29:
 396:SWD_PacketLayer.c ****     {
 503              		.loc 1 396 0 is_stmt 0 discriminator 1
 504 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 505 0032 072B     		cmp	r3, #7
 506 0034 EED9     		bls	.L31
 404:SWD_PacketLayer.c ****     }
 405:SWD_PacketLayer.c ****     
 406:SWD_PacketLayer.c ****     return(count);
 507              		.loc 1 406 0 is_stmt 1
 508 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 407:SWD_PacketLayer.c **** }
 509              		.loc 1 407 0
 510 0038 1846     		mov	r0, r3
 511 003a 1437     		adds	r7, r7, #20
 512              		.cfi_def_cfa_offset 4
 513 003c BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 003e 5DF8047B 		ldr	r7, [sp], #4
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 0042 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE8:
 522              		.size	Swd_CountOneBits, .-Swd_CountOneBits
 523              		.section	.text.Swd_ComputeDataParity,"ax",%progbits
 524              		.align	2
 525              		.thumb
 526              		.thumb_func
 527              		.type	Swd_ComputeDataParity, %function
 528              	Swd_ComputeDataParity:
 529              	.LFB9:
 408:SWD_PacketLayer.c **** 
 409:SWD_PacketLayer.c **** /******************************************************************************
 410:SWD_PacketLayer.c **** * Function Name: Swd_ComputeDataParity
 411:SWD_PacketLayer.c **** *******************************************************************************
 412:SWD_PacketLayer.c **** *
 413:SWD_PacketLayer.c **** * Summary:
 414:SWD_PacketLayer.c **** *  Computes Even parity  of 4-byte data
 415:SWD_PacketLayer.c **** *
 416:SWD_PacketLayer.c **** * Parameters:
 417:SWD_PacketLayer.c **** *  swd_PacketData[DATA_BYTES_PER_PACKET] - Global variable that holds the data
 418:SWD_PacketLayer.c **** *
 419:SWD_PacketLayer.c **** * Return:
 420:SWD_PacketLayer.c **** *   Even parity bit
 421:SWD_PacketLayer.c **** *   0x01 - Parity is '1' if 4-byte data has an odd number of 1's
 422:SWD_PacketLayer.c **** *   0x00 - Parity is '0' if 4-byte data has an even number of 1's
 423:SWD_PacketLayer.c **** *
 424:SWD_PacketLayer.c **** * Note:
 425:SWD_PacketLayer.c **** *  This function is called during SWD Read/Write packets
 426:SWD_PacketLayer.c **** *
 427:SWD_PacketLayer.c **** ******************************************************************************/
 428:SWD_PacketLayer.c **** static unsigned char Swd_ComputeDataParity()
 429:SWD_PacketLayer.c **** {
 530              		.loc 1 429 0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 18


 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 82B0     		sub	sp, sp, #8
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 430:SWD_PacketLayer.c ****     unsigned char count = 0;
 542              		.loc 1 430 0
 543 0006 0023     		movs	r3, #0
 544 0008 FB71     		strb	r3, [r7, #7]
 431:SWD_PacketLayer.c ****     unsigned char i;
 432:SWD_PacketLayer.c ****     
 433:SWD_PacketLayer.c ****     /* Count number of 1's in 4-byte data */
 434:SWD_PacketLayer.c ****     for(i = 0; i < DATA_BYTES_PER_PACKET; i++)
 545              		.loc 1 434 0
 546 000a 0023     		movs	r3, #0
 547 000c BB71     		strb	r3, [r7, #6]
 548 000e 0DE0     		b	.L34
 549              	.L35:
 435:SWD_PacketLayer.c ****     {
 436:SWD_PacketLayer.c ****         count = count + Swd_CountOneBits(swd_PacketData[i]);
 550              		.loc 1 436 0 discriminator 3
 551 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 552 0012 0C4A     		ldr	r2, .L37
 553 0014 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 554 0016 1846     		mov	r0, r3
 555 0018 FFF7FEFF 		bl	Swd_CountOneBits
 556 001c 0346     		mov	r3, r0
 557 001e 1A46     		mov	r2, r3
 558 0020 FB79     		ldrb	r3, [r7, #7]
 559 0022 1344     		add	r3, r3, r2
 560 0024 FB71     		strb	r3, [r7, #7]
 434:SWD_PacketLayer.c ****     {
 561              		.loc 1 434 0 discriminator 3
 562 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 563 0028 0133     		adds	r3, r3, #1
 564 002a BB71     		strb	r3, [r7, #6]
 565              	.L34:
 434:SWD_PacketLayer.c ****     {
 566              		.loc 1 434 0 is_stmt 0 discriminator 1
 567 002c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 568 002e 032B     		cmp	r3, #3
 569 0030 EED9     		bls	.L35
 437:SWD_PacketLayer.c ****     }
 438:SWD_PacketLayer.c ****     
 439:SWD_PacketLayer.c ****     /* Return even parity. If Lsb bit is 1, it implies the number of 1's is odd,
 440:SWD_PacketLayer.c ****     and hence the even parity bit is set. For even number of 1's, parity bit
 441:SWD_PacketLayer.c **** 	is 0 */
 442:SWD_PacketLayer.c ****     return(count & LSB_BIT_MASK);
 570              		.loc 1 442 0 is_stmt 1
 571 0032 FB79     		ldrb	r3, [r7, #7]
 572 0034 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 19


 573 0038 DBB2     		uxtb	r3, r3
 443:SWD_PacketLayer.c **** }
 574              		.loc 1 443 0
 575 003a 1846     		mov	r0, r3
 576 003c 0837     		adds	r7, r7, #8
 577              		.cfi_def_cfa_offset 8
 578 003e BD46     		mov	sp, r7
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0040 80BD     		pop	{r7, pc}
 582              	.L38:
 583 0042 00BF     		.align	2
 584              	.L37:
 585 0044 00000000 		.word	swd_PacketData
 586              		.cfi_endproc
 587              	.LFE9:
 588              		.size	Swd_ComputeDataParity, .-Swd_ComputeDataParity
 589              		.section	.text.Swd_ReadPacket,"ax",%progbits
 590              		.align	2
 591              		.global	Swd_ReadPacket
 592              		.thumb
 593              		.thumb_func
 594              		.type	Swd_ReadPacket, %function
 595              	Swd_ReadPacket:
 596              	.LFB10:
 444:SWD_PacketLayer.c **** 
 445:SWD_PacketLayer.c **** /******************************************************************************
 446:SWD_PacketLayer.c **** * Function Name: Swd_ReadPacket
 447:SWD_PacketLayer.c **** *******************************************************************************
 448:SWD_PacketLayer.c **** *
 449:SWD_PacketLayer.c **** * Summary:
 450:SWD_PacketLayer.c **** *  Sends a single SWD Read packet
 451:SWD_PacketLayer.c **** *
 452:SWD_PacketLayer.c **** * Parameters:
 453:SWD_PacketLayer.c **** * swd_PacketHeader - Global variable that holds the 8-bit header data for packet
 454:SWD_PacketLayer.c **** *
 455:SWD_PacketLayer.c **** * Return:
 456:SWD_PacketLayer.c **** *  swd_PacketData[DATA_BYTES_PER_PACKET] - Global variable that holds the 4-byte
 457:SWD_PacketLayer.c **** *										   data that has been read
 458:SWD_PacketLayer.c **** *
 459:SWD_PacketLayer.c **** *  swd_PacketAck - Global variable that holds the status of the SWD transaction
 460:SWD_PacketLayer.c **** *    ACK response is stored as a byte. Three possible ACK return values are:
 461:SWD_PacketLayer.c **** *       0x01 - SWD_OK_ACK
 462:SWD_PacketLayer.c **** *       0x02 - SWD_WAIT_ACK
 463:SWD_PacketLayer.c **** *       0x04 - SWD_FAULT_ACK
 464:SWD_PacketLayer.c **** *       0x09 - SWD_OK_ACK, but Parity error in data received
 465:SWD_PacketLayer.c **** *       Any other ACK value - Undefined ACK code.
 466:SWD_PacketLayer.c **** *                             Treat it similar to SWD_FAULT_ACK and abort
 467:SWD_PacketLayer.c **** *							  operation.
 468:SWD_PacketLayer.c **** *
 469:SWD_PacketLayer.c **** * Note:
 470:SWD_PacketLayer.c **** *  1.)Swd_RawReadPacket() is called during SPC Polling operations when the host
 471:SWD_PacketLayer.c **** *	  must read the SPC status register continuously till a Programming operation
 472:SWD_PacketLayer.c **** *	  is completed or data is ready to be read.
 473:SWD_PacketLayer.c **** *
 474:SWD_PacketLayer.c **** *  2.)This function is called duing continuous multi byte read operations from
 475:SWD_PacketLayer.c **** *	  the SPC_DATA register
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 20


 476:SWD_PacketLayer.c **** *  
 477:SWD_PacketLayer.c **** *  3.)This function is called during IDCODE instruction for reading the Device
 478:SWD_PacketLayer.c **** *	  JTAG ID
 479:SWD_PacketLayer.c **** *
 480:SWD_PacketLayer.c **** *  4.)This function is not called during normal SWD read transactions. To read
 481:SWD_PacketLayer.c **** *     a register data, two SWD Read packets must be sent (call this function 
 482:SWD_PacketLayer.c **** *     twice). This method of reading twice has been implemented in
 483:SWD_PacketLayer.c **** *	  SWD_ReadPacket() function which will be called during normal read 
 484:SWD_PacketLayer.c **** *	  transactions. 
 485:SWD_PacketLayer.c **** *
 486:SWD_PacketLayer.c **** ******************************************************************************/
 487:SWD_PacketLayer.c **** void Swd_ReadPacket()
 488:SWD_PacketLayer.c **** {
 597              		.loc 1 488 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 90B5     		push	{r4, r7, lr}
 602              		.cfi_def_cfa_offset 12
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 83B0     		sub	sp, sp, #12
 607              		.cfi_def_cfa_offset 24
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 489:SWD_PacketLayer.c ****     unsigned char parity;
 490:SWD_PacketLayer.c ****     unsigned char loop = 0;
 610              		.loc 1 490 0
 611 0006 0023     		movs	r3, #0
 612 0008 FB71     		strb	r3, [r7, #7]
 613              	.L43:
 491:SWD_PacketLayer.c ****     unsigned char i;
 492:SWD_PacketLayer.c ****     
 493:SWD_PacketLayer.c ****     do
 494:SWD_PacketLayer.c ****     {
 495:SWD_PacketLayer.c **** 		/* 8-bit Header data */
 496:SWD_PacketLayer.c ****         Swd_SendByte(swd_PacketHeader);        
 614              		.loc 1 496 0
 615 000a 224B     		ldr	r3, .L45
 616 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617 000e 1846     		mov	r0, r3
 618 0010 FFF7FEFF 		bl	Swd_SendByte
 497:SWD_PacketLayer.c ****         
 498:SWD_PacketLayer.c **** 		/* First Turnaround phase */
 499:SWD_PacketLayer.c ****         Swd_FirstTurnAroundPhase(); 
 619              		.loc 1 499 0
 620 0014 FFF7FEFF 		bl	Swd_FirstTurnAroundPhase
 500:SWD_PacketLayer.c ****         
 501:SWD_PacketLayer.c **** 		/* Get the 3-bit ACK data */
 502:SWD_PacketLayer.c ****         swd_PacketAck = Swd_GetAckSegment();
 621              		.loc 1 502 0
 622 0018 FFF7FEFF 		bl	Swd_GetAckSegment
 623 001c 0346     		mov	r3, r0
 624 001e 1A46     		mov	r2, r3
 625 0020 1D4B     		ldr	r3, .L45+4
 626 0022 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 21


 503:SWD_PacketLayer.c ****         
 504:SWD_PacketLayer.c ****         /* Read 4-byte data and store in Global array swd_PacketData[] */
 505:SWD_PacketLayer.c ****         for(i = 0; i < DATA_BYTES_PER_PACKET; i++)
 627              		.loc 1 505 0
 628 0024 0023     		movs	r3, #0
 629 0026 BB71     		strb	r3, [r7, #6]
 630 0028 09E0     		b	.L40
 631              	.L41:
 506:SWD_PacketLayer.c ****         {
 507:SWD_PacketLayer.c ****             swd_PacketData[i] = Swd_ReceiveByte();
 632              		.loc 1 507 0 discriminator 3
 633 002a BC79     		ldrb	r4, [r7, #6]	@ zero_extendqisi2
 634 002c FFF7FEFF 		bl	Swd_ReceiveByte
 635 0030 0346     		mov	r3, r0
 636 0032 1A46     		mov	r2, r3
 637 0034 194B     		ldr	r3, .L45+8
 638 0036 1A55     		strb	r2, [r3, r4]
 505:SWD_PacketLayer.c ****         {
 639              		.loc 1 505 0 discriminator 3
 640 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 641 003a 0133     		adds	r3, r3, #1
 642 003c BB71     		strb	r3, [r7, #6]
 643              	.L40:
 505:SWD_PacketLayer.c ****         {
 644              		.loc 1 505 0 is_stmt 0 discriminator 1
 645 003e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 646 0040 032B     		cmp	r3, #3
 647 0042 F2D9     		bls	.L41
 508:SWD_PacketLayer.c ****         }
 509:SWD_PacketLayer.c ****         
 510:SWD_PacketLayer.c **** 		/* Parity phase */
 511:SWD_PacketLayer.c ****         parity = Swd_ReceiveParity();        
 648              		.loc 1 511 0 is_stmt 1
 649 0044 FFF7FEFF 		bl	Swd_ReceiveParity
 650 0048 0346     		mov	r3, r0
 651 004a 7B71     		strb	r3, [r7, #5]
 512:SWD_PacketLayer.c ****         
 513:SWD_PacketLayer.c **** 		/* Second Turnaround phase */
 514:SWD_PacketLayer.c ****         Swd_SecondTurnAroundPhase();
 652              		.loc 1 514 0
 653 004c FFF7FEFF 		bl	Swd_SecondTurnAroundPhase
 515:SWD_PacketLayer.c ****         
 516:SWD_PacketLayer.c **** 		/* Dummy clock phase since clock is not free running */
 517:SWD_PacketLayer.c ****         Swd_SendDummyClocks();
 654              		.loc 1 517 0
 655 0050 FFF7FEFF 		bl	Swd_SendDummyClocks
 518:SWD_PacketLayer.c ****         
 519:SWD_PacketLayer.c ****         /* Repeat for a WAIT ACK till timeout loop expires */
 520:SWD_PacketLayer.c ****         loop++;
 656              		.loc 1 520 0
 657 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 658 0056 0133     		adds	r3, r3, #1
 659 0058 FB71     		strb	r3, [r7, #7]
 521:SWD_PacketLayer.c **** 		
 522:SWD_PacketLayer.c ****     }while((swd_PacketAck == SWD_WAIT_ACK ) && (loop < NUMBER_OF_WAIT_ACK_LOOPS));
 660              		.loc 1 522 0
 661 005a 0F4B     		ldr	r3, .L45+4
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 22


 662 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 663 005e 022B     		cmp	r3, #2
 664 0060 02D1     		bne	.L42
 665              		.loc 1 522 0 is_stmt 0 discriminator 1
 666 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 667 0064 042B     		cmp	r3, #4
 668 0066 D0D9     		bls	.L43
 669              	.L42:
 523:SWD_PacketLayer.c ****     
 524:SWD_PacketLayer.c ****     /* For a OK ACK, check the parity bit received with parity computed */
 525:SWD_PacketLayer.c ****     if(swd_PacketAck == SWD_OK_ACK)
 670              		.loc 1 525 0 is_stmt 1
 671 0068 0B4B     		ldr	r3, .L45+4
 672 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 006c 012B     		cmp	r3, #1
 674 006e 0DD1     		bne	.L39
 526:SWD_PacketLayer.c ****     {
 527:SWD_PacketLayer.c ****         if(parity != Swd_ComputeDataParity())
 675              		.loc 1 527 0
 676 0070 FFF7FEFF 		bl	Swd_ComputeDataParity
 677 0074 0346     		mov	r3, r0
 678 0076 1A46     		mov	r2, r3
 679 0078 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 680 007a 9342     		cmp	r3, r2
 681 007c 06D0     		beq	.L39
 528:SWD_PacketLayer.c ****         {
 529:SWD_PacketLayer.c **** 			/* Set the Parity error bit in ACK code */
 530:SWD_PacketLayer.c ****             swd_PacketAck = swd_PacketAck | SWD_PARITY_ERROR;
 682              		.loc 1 530 0
 683 007e 064B     		ldr	r3, .L45+4
 684 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 685 0082 43F00803 		orr	r3, r3, #8
 686 0086 DAB2     		uxtb	r2, r3
 687 0088 034B     		ldr	r3, .L45+4
 688 008a 1A70     		strb	r2, [r3]
 689              	.L39:
 531:SWD_PacketLayer.c ****         }
 532:SWD_PacketLayer.c ****     }
 533:SWD_PacketLayer.c ****     
 534:SWD_PacketLayer.c ****     /* Swd_PacketAck global variable holds the status of the SWD transaction */
 535:SWD_PacketLayer.c **** }
 690              		.loc 1 535 0
 691 008c 0C37     		adds	r7, r7, #12
 692              		.cfi_def_cfa_offset 12
 693 008e BD46     		mov	sp, r7
 694              		.cfi_def_cfa_register 13
 695              		@ sp needed
 696 0090 90BD     		pop	{r4, r7, pc}
 697              	.L46:
 698 0092 00BF     		.align	2
 699              	.L45:
 700 0094 00000000 		.word	swd_PacketHeader
 701 0098 00000000 		.word	swd_PacketAck
 702 009c 00000000 		.word	swd_PacketData
 703              		.cfi_endproc
 704              	.LFE10:
 705              		.size	Swd_ReadPacket, .-Swd_ReadPacket
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 23


 706              		.section	.text.Swd_WritePacket,"ax",%progbits
 707              		.align	2
 708              		.global	Swd_WritePacket
 709              		.thumb
 710              		.thumb_func
 711              		.type	Swd_WritePacket, %function
 712              	Swd_WritePacket:
 713              	.LFB11:
 536:SWD_PacketLayer.c **** 
 537:SWD_PacketLayer.c **** 
 538:SWD_PacketLayer.c **** /******************************************************************************
 539:SWD_PacketLayer.c **** * Function Name: Swd_WritePacket
 540:SWD_PacketLayer.c **** *******************************************************************************
 541:SWD_PacketLayer.c **** *
 542:SWD_PacketLayer.c **** * Summary:
 543:SWD_PacketLayer.c **** *  Sends a single SWD Write packet
 544:SWD_PacketLayer.c **** *
 545:SWD_PacketLayer.c **** * Parameters:
 546:SWD_PacketLayer.c **** *  swd_PacketHeader - Global variable that holds the 8-bit header data for packet
 547:SWD_PacketLayer.c **** *  swd_PacketData[DATA_BYTES_PER_PACKET] - Global variable that holds the data
 548:SWD_PacketLayer.c **** *										   to be sent
 549:SWD_PacketLayer.c **** *
 550:SWD_PacketLayer.c **** * Return:
 551:SWD_PacketLayer.c **** *  swd_PacketAck - Global variable that holds the status of the SWD transaction
 552:SWD_PacketLayer.c **** *    ACK response is stored as a byte. Three possible ACK return values are:
 553:SWD_PacketLayer.c **** *       0x01 - SWD_OK_ACK
 554:SWD_PacketLayer.c **** *       0x02 - SWD_WAIT_ACK
 555:SWD_PacketLayer.c **** *       0x04 - SWD_FAULT_ACK
 556:SWD_PacketLayer.c **** *       Any other ACK value - Undefined ACK code.
 557:SWD_PacketLayer.c **** *       Treat it similar to SWD_FAULT_ACK and abort operation.
 558:SWD_PacketLayer.c **** *
 559:SWD_PacketLayer.c **** * Note:
 560:SWD_PacketLayer.c **** *  This function is called for Address Write, Data Write operations
 561:SWD_PacketLayer.c **** *
 562:SWD_PacketLayer.c **** ******************************************************************************/
 563:SWD_PacketLayer.c **** void Swd_WritePacket()
 564:SWD_PacketLayer.c **** {
 714              		.loc 1 564 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718 0000 80B5     		push	{r7, lr}
 719              		.cfi_def_cfa_offset 8
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
 722 0002 82B0     		sub	sp, sp, #8
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 565:SWD_PacketLayer.c ****     unsigned char parity;
 566:SWD_PacketLayer.c ****     unsigned char loop = 0;
 726              		.loc 1 566 0
 727 0006 0023     		movs	r3, #0
 728 0008 FB71     		strb	r3, [r7, #7]
 567:SWD_PacketLayer.c ****     unsigned char i;
 568:SWD_PacketLayer.c ****     
 569:SWD_PacketLayer.c **** 	/* Compute Even parity for 4-byte data */
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 24


 570:SWD_PacketLayer.c ****     parity = Swd_ComputeDataParity();  
 729              		.loc 1 570 0
 730 000a FFF7FEFF 		bl	Swd_ComputeDataParity
 731 000e 0346     		mov	r3, r0
 732 0010 7B71     		strb	r3, [r7, #5]
 733              	.L51:
 571:SWD_PacketLayer.c ****     
 572:SWD_PacketLayer.c ****     do
 573:SWD_PacketLayer.c ****     {
 574:SWD_PacketLayer.c **** 		/* 8-bit Header data */
 575:SWD_PacketLayer.c ****         Swd_SendByte(swd_PacketHeader); 
 734              		.loc 1 575 0
 735 0012 184B     		ldr	r3, .L52
 736 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 0016 1846     		mov	r0, r3
 738 0018 FFF7FEFF 		bl	Swd_SendByte
 576:SWD_PacketLayer.c ****         
 577:SWD_PacketLayer.c **** 		/* First Turnaround phase */
 578:SWD_PacketLayer.c ****         Swd_FirstTurnAroundPhase();
 739              		.loc 1 578 0
 740 001c FFF7FEFF 		bl	Swd_FirstTurnAroundPhase
 579:SWD_PacketLayer.c ****         
 580:SWD_PacketLayer.c **** 		/* Get the 3-bit ACK data */
 581:SWD_PacketLayer.c ****         swd_PacketAck = Swd_GetAckSegment();
 741              		.loc 1 581 0
 742 0020 FFF7FEFF 		bl	Swd_GetAckSegment
 743 0024 0346     		mov	r3, r0
 744 0026 1A46     		mov	r2, r3
 745 0028 134B     		ldr	r3, .L52+4
 746 002a 1A70     		strb	r2, [r3]
 582:SWD_PacketLayer.c ****         
 583:SWD_PacketLayer.c **** 		/* Second Turnaround phase */
 584:SWD_PacketLayer.c ****         Swd_SecondTurnAroundPhase();
 747              		.loc 1 584 0
 748 002c FFF7FEFF 		bl	Swd_SecondTurnAroundPhase
 585:SWD_PacketLayer.c ****         
 586:SWD_PacketLayer.c ****         /* Send 4-byte data stored in Global array swd_PacketData[] */
 587:SWD_PacketLayer.c ****         for(i = 0; i < DATA_BYTES_PER_PACKET; i++)
 749              		.loc 1 587 0
 750 0030 0023     		movs	r3, #0
 751 0032 BB71     		strb	r3, [r7, #6]
 752 0034 08E0     		b	.L48
 753              	.L49:
 588:SWD_PacketLayer.c ****         {
 589:SWD_PacketLayer.c ****             Swd_SendByte(swd_PacketData[i]); 
 754              		.loc 1 589 0 discriminator 3
 755 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 756 0038 104A     		ldr	r2, .L52+8
 757 003a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 758 003c 1846     		mov	r0, r3
 759 003e FFF7FEFF 		bl	Swd_SendByte
 587:SWD_PacketLayer.c ****         {
 760              		.loc 1 587 0 discriminator 3
 761 0042 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 762 0044 0133     		adds	r3, r3, #1
 763 0046 BB71     		strb	r3, [r7, #6]
 764              	.L48:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 25


 587:SWD_PacketLayer.c ****         {
 765              		.loc 1 587 0 is_stmt 0 discriminator 1
 766 0048 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 767 004a 032B     		cmp	r3, #3
 768 004c F3D9     		bls	.L49
 590:SWD_PacketLayer.c ****         }
 591:SWD_PacketLayer.c ****         
 592:SWD_PacketLayer.c **** 		/* Parity phase */
 593:SWD_PacketLayer.c ****         Swd_SendParity(parity);
 769              		.loc 1 593 0 is_stmt 1
 770 004e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 771 0050 1846     		mov	r0, r3
 772 0052 FFF7FEFF 		bl	Swd_SendParity
 594:SWD_PacketLayer.c ****         
 595:SWD_PacketLayer.c **** 		/* Dummy clock phase since clock is not free running */
 596:SWD_PacketLayer.c ****         Swd_SendDummyClocks();
 773              		.loc 1 596 0
 774 0056 FFF7FEFF 		bl	Swd_SendDummyClocks
 597:SWD_PacketLayer.c ****         
 598:SWD_PacketLayer.c ****         loop++;
 775              		.loc 1 598 0
 776 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 777 005c 0133     		adds	r3, r3, #1
 778 005e FB71     		strb	r3, [r7, #7]
 599:SWD_PacketLayer.c ****         
 600:SWD_PacketLayer.c ****         /* Repeat for a WAIT ACK till timeout loop expires */
 601:SWD_PacketLayer.c ****         
 602:SWD_PacketLayer.c ****     }while((swd_PacketAck == SWD_WAIT_ACK ) && (loop < NUMBER_OF_WAIT_ACK_LOOPS));
 779              		.loc 1 602 0
 780 0060 054B     		ldr	r3, .L52+4
 781 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 782 0064 022B     		cmp	r3, #2
 783 0066 02D1     		bne	.L47
 784              		.loc 1 602 0 is_stmt 0 discriminator 1
 785 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 786 006a 042B     		cmp	r3, #4
 787 006c D1D9     		bls	.L51
 788              	.L47:
 603:SWD_PacketLayer.c ****     
 604:SWD_PacketLayer.c ****     /* swd_PacketAck global variable holds the status of the SWD transaction */
 605:SWD_PacketLayer.c **** }
 789              		.loc 1 605 0 is_stmt 1
 790 006e 0837     		adds	r7, r7, #8
 791              		.cfi_def_cfa_offset 8
 792 0070 BD46     		mov	sp, r7
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 0072 80BD     		pop	{r7, pc}
 796              	.L53:
 797              		.align	2
 798              	.L52:
 799 0074 00000000 		.word	swd_PacketHeader
 800 0078 00000000 		.word	swd_PacketAck
 801 007c 00000000 		.word	swd_PacketData
 802              		.cfi_endproc
 803              	.LFE11:
 804              		.size	Swd_WritePacket, .-Swd_WritePacket
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 26


 805              		.section	.text.Swd_LineReset,"ax",%progbits
 806              		.align	2
 807              		.global	Swd_LineReset
 808              		.thumb
 809              		.thumb_func
 810              		.type	Swd_LineReset, %function
 811              	Swd_LineReset:
 812              	.LFB12:
 606:SWD_PacketLayer.c **** 
 607:SWD_PacketLayer.c **** 
 608:SWD_PacketLayer.c **** /******************************************************************************
 609:SWD_PacketLayer.c **** * Function Name: Swd_LineReset
 610:SWD_PacketLayer.c **** *******************************************************************************
 611:SWD_PacketLayer.c **** *
 612:SWD_PacketLayer.c **** * Summary:
 613:SWD_PacketLayer.c **** *  Resets the SWD line by sending 51 SWDCK clock cycles with SWDIO line high
 614:SWD_PacketLayer.c **** *
 615:SWD_PacketLayer.c **** * Parameters:
 616:SWD_PacketLayer.c **** *  None
 617:SWD_PacketLayer.c **** *
 618:SWD_PacketLayer.c **** * Return:
 619:SWD_PacketLayer.c **** *  None
 620:SWD_PacketLayer.c **** *
 621:SWD_PacketLayer.c **** * Note:
 622:SWD_PacketLayer.c **** *  This function is called as part of SWD switching sequence
 623:SWD_PacketLayer.c **** *
 624:SWD_PacketLayer.c **** ******************************************************************************/
 625:SWD_PacketLayer.c **** void Swd_LineReset(void)
 626:SWD_PacketLayer.c **** {
 813              		.loc 1 626 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 818 0000 80B4     		push	{r7}
 819              		.cfi_def_cfa_offset 4
 820              		.cfi_offset 7, -4
 821 0002 83B0     		sub	sp, sp, #12
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 627:SWD_PacketLayer.c ****     unsigned char i;
 628:SWD_PacketLayer.c ****      
 629:SWD_PacketLayer.c ****     /* To reset SWD line, clock more than 50 SWDCK clock cycles with SWDIO 
 630:SWD_PacketLayer.c **** 	   high. */ 
 631:SWD_PacketLayer.c ****        
 632:SWD_PacketLayer.c ****     SWDIO_OUTPUT_HIGH;
 825              		.loc 1 632 0
 826 0006 1F4A     		ldr	r2, .L57
 827 0008 1E4B     		ldr	r3, .L57
 828 000a 1B78     		ldrb	r3, [r3]
 829 000c DBB2     		uxtb	r3, r3
 830 000e 43F00403 		orr	r3, r3, #4
 831 0012 DBB2     		uxtb	r3, r3
 832 0014 1370     		strb	r3, [r2]
 633:SWD_PacketLayer.c ****     
 634:SWD_PacketLayer.c ****     for(i = 0; i < NUMBER_OF_SWD_RESET_CLOCK_CYCLES; i++)
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 27


 833              		.loc 1 634 0
 834 0016 0023     		movs	r3, #0
 835 0018 FB71     		strb	r3, [r7, #7]
 836 001a 12E0     		b	.L55
 837              	.L56:
 635:SWD_PacketLayer.c ****     {
 636:SWD_PacketLayer.c ****         SWDCK_OUTPUT_LOW;
 838              		.loc 1 636 0 discriminator 3
 839 001c 194A     		ldr	r2, .L57
 840 001e 194B     		ldr	r3, .L57
 841 0020 1B78     		ldrb	r3, [r3]
 842 0022 DBB2     		uxtb	r3, r3
 843 0024 23F00803 		bic	r3, r3, #8
 844 0028 DBB2     		uxtb	r3, r3
 845 002a 1370     		strb	r3, [r2]
 637:SWD_PacketLayer.c ****         SWDCK_OUTPUT_HIGH;
 846              		.loc 1 637 0 discriminator 3
 847 002c 154A     		ldr	r2, .L57
 848 002e 154B     		ldr	r3, .L57
 849 0030 1B78     		ldrb	r3, [r3]
 850 0032 DBB2     		uxtb	r3, r3
 851 0034 43F00803 		orr	r3, r3, #8
 852 0038 DBB2     		uxtb	r3, r3
 853 003a 1370     		strb	r3, [r2]
 634:SWD_PacketLayer.c ****     {
 854              		.loc 1 634 0 discriminator 3
 855 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 856 003e 0133     		adds	r3, r3, #1
 857 0040 FB71     		strb	r3, [r7, #7]
 858              	.L55:
 634:SWD_PacketLayer.c ****     {
 859              		.loc 1 634 0 is_stmt 0 discriminator 1
 860 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 861 0044 322B     		cmp	r3, #50
 862 0046 E9D9     		bls	.L56
 638:SWD_PacketLayer.c ****     }
 639:SWD_PacketLayer.c **** 	SWDCK_OUTPUT_LOW;
 863              		.loc 1 639 0 is_stmt 1
 864 0048 0E4A     		ldr	r2, .L57
 865 004a 0E4B     		ldr	r3, .L57
 866 004c 1B78     		ldrb	r3, [r3]
 867 004e DBB2     		uxtb	r3, r3
 868 0050 23F00803 		bic	r3, r3, #8
 869 0054 DBB2     		uxtb	r3, r3
 870 0056 1370     		strb	r3, [r2]
 640:SWD_PacketLayer.c **** 	SWDIO_OUTPUT_LOW;
 871              		.loc 1 640 0
 872 0058 0A4A     		ldr	r2, .L57
 873 005a 0A4B     		ldr	r3, .L57
 874 005c 1B78     		ldrb	r3, [r3]
 875 005e DBB2     		uxtb	r3, r3
 876 0060 23F00403 		bic	r3, r3, #4
 877 0064 DBB2     		uxtb	r3, r3
 878 0066 1370     		strb	r3, [r2]
 641:SWD_PacketLayer.c **** 	SWDCK_OUTPUT_HIGH;
 879              		.loc 1 641 0
 880 0068 064A     		ldr	r2, .L57
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 28


 881 006a 064B     		ldr	r3, .L57
 882 006c 1B78     		ldrb	r3, [r3]
 883 006e DBB2     		uxtb	r3, r3
 884 0070 43F00803 		orr	r3, r3, #8
 885 0074 DBB2     		uxtb	r3, r3
 886 0076 1370     		strb	r3, [r2]
 642:SWD_PacketLayer.c **** }
 887              		.loc 1 642 0
 888 0078 0C37     		adds	r7, r7, #12
 889              		.cfi_def_cfa_offset 4
 890 007a BD46     		mov	sp, r7
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 007c 5DF8047B 		ldr	r7, [sp], #4
 894              		.cfi_restore 7
 895              		.cfi_def_cfa_offset 0
 896 0080 7047     		bx	lr
 897              	.L58:
 898 0082 00BF     		.align	2
 899              	.L57:
 900 0084 C0510040 		.word	1073762752
 901              		.cfi_endproc
 902              	.LFE12:
 903              		.size	Swd_LineReset, .-Swd_LineReset
 904              		.text
 905              	.Letext0:
 906              		.section	.debug_info,"",%progbits
 907              	.Ldebug_info0:
 908 0000 EC020000 		.4byte	0x2ec
 909 0004 0400     		.2byte	0x4
 910 0006 00000000 		.4byte	.Ldebug_abbrev0
 911 000a 04       		.byte	0x4
 912 000b 01       		.uleb128 0x1
 913 000c E7000000 		.4byte	.LASF24
 914 0010 01       		.byte	0x1
 915 0011 52000000 		.4byte	.LASF25
 916 0015 C4010000 		.4byte	.LASF26
 917 0019 00000000 		.4byte	.Ldebug_ranges0+0
 918 001d 00000000 		.4byte	0
 919 0021 00000000 		.4byte	.Ldebug_line0
 920 0025 02       		.uleb128 0x2
 921 0026 99000000 		.4byte	.LASF0
 922 002a 01       		.byte	0x1
 923 002b 64       		.byte	0x64
 924 002c 00000000 		.4byte	.LFB0
 925 0030 50000000 		.4byte	.LFE0-.LFB0
 926 0034 01       		.uleb128 0x1
 927 0035 9C       		.byte	0x9c
 928 0036 57000000 		.4byte	0x57
 929 003a 03       		.uleb128 0x3
 930 003b E0000000 		.4byte	.LASF10
 931 003f 01       		.byte	0x1
 932 0040 64       		.byte	0x64
 933 0041 57000000 		.4byte	0x57
 934 0045 02       		.uleb128 0x2
 935 0046 91       		.byte	0x91
 936 0047 6F       		.sleb128 -17
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 29


 937 0048 04       		.uleb128 0x4
 938 0049 13020000 		.4byte	.LASF2
 939 004d 01       		.byte	0x1
 940 004e 66       		.byte	0x66
 941 004f 57000000 		.4byte	0x57
 942 0053 02       		.uleb128 0x2
 943 0054 91       		.byte	0x91
 944 0055 77       		.sleb128 -9
 945 0056 00       		.byte	0
 946 0057 05       		.uleb128 0x5
 947 0058 01       		.byte	0x1
 948 0059 08       		.byte	0x8
 949 005a CB000000 		.4byte	.LASF21
 950 005e 06       		.uleb128 0x6
 951 005f B4010000 		.4byte	.LASF1
 952 0063 01       		.byte	0x1
 953 0064 8F       		.byte	0x8f
 954 0065 57000000 		.4byte	0x57
 955 0069 00000000 		.4byte	.LFB1
 956 006d 78000000 		.4byte	.LFE1-.LFB1
 957 0071 01       		.uleb128 0x1
 958 0072 9C       		.byte	0x9c
 959 0073 A2000000 		.4byte	0xa2
 960 0077 04       		.uleb128 0x4
 961 0078 13020000 		.4byte	.LASF2
 962 007c 01       		.byte	0x1
 963 007d 91       		.byte	0x91
 964 007e 57000000 		.4byte	0x57
 965 0082 02       		.uleb128 0x2
 966 0083 91       		.byte	0x91
 967 0084 77       		.sleb128 -9
 968 0085 04       		.uleb128 0x4
 969 0086 94010000 		.4byte	.LASF3
 970 008a 01       		.byte	0x1
 971 008b 92       		.byte	0x92
 972 008c 57000000 		.4byte	0x57
 973 0090 02       		.uleb128 0x2
 974 0091 91       		.byte	0x91
 975 0092 75       		.sleb128 -11
 976 0093 04       		.uleb128 0x4
 977 0094 75010000 		.4byte	.LASF4
 978 0098 01       		.byte	0x1
 979 0099 93       		.byte	0x93
 980 009a 57000000 		.4byte	0x57
 981 009e 02       		.uleb128 0x2
 982 009f 91       		.byte	0x91
 983 00a0 76       		.sleb128 -10
 984 00a1 00       		.byte	0
 985 00a2 07       		.uleb128 0x7
 986 00a3 32020000 		.4byte	.LASF5
 987 00a7 01       		.byte	0x1
 988 00a8 C3       		.byte	0xc3
 989 00a9 00000000 		.4byte	.LFB2
 990 00ad 12000000 		.4byte	.LFE2-.LFB2
 991 00b1 01       		.uleb128 0x1
 992 00b2 9C       		.byte	0x9c
 993 00b3 07       		.uleb128 0x7
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 30


 994 00b4 18020000 		.4byte	.LASF6
 995 00b8 01       		.byte	0x1
 996 00b9 DE       		.byte	0xde
 997 00ba 00000000 		.4byte	.LFB3
 998 00be 12000000 		.4byte	.LFE3-.LFB3
 999 00c2 01       		.uleb128 0x1
 1000 00c3 9C       		.byte	0x9c
 1001 00c4 06       		.uleb128 0x6
 1002 00c5 00000000 		.4byte	.LASF7
 1003 00c9 01       		.byte	0x1
 1004 00ca FD       		.byte	0xfd
 1005 00cb 57000000 		.4byte	0x57
 1006 00cf 00000000 		.4byte	.LFB4
 1007 00d3 50000000 		.4byte	.LFE4-.LFB4
 1008 00d7 01       		.uleb128 0x1
 1009 00d8 9C       		.byte	0x9c
 1010 00d9 0A010000 		.4byte	0x10a
 1011 00dd 08       		.uleb128 0x8
 1012 00de 61636B00 		.ascii	"ack\000"
 1013 00e2 01       		.byte	0x1
 1014 00e3 FF       		.byte	0xff
 1015 00e4 57000000 		.4byte	0x57
 1016 00e8 02       		.uleb128 0x2
 1017 00e9 91       		.byte	0x91
 1018 00ea 77       		.sleb128 -9
 1019 00eb 09       		.uleb128 0x9
 1020 00ec A9010000 		.4byte	.LASF8
 1021 00f0 01       		.byte	0x1
 1022 00f1 0001     		.2byte	0x100
 1023 00f3 57000000 		.4byte	0x57
 1024 00f7 02       		.uleb128 0x2
 1025 00f8 91       		.byte	0x91
 1026 00f9 75       		.sleb128 -11
 1027 00fa 09       		.uleb128 0x9
 1028 00fb 13020000 		.4byte	.LASF2
 1029 00ff 01       		.byte	0x1
 1030 0100 0101     		.2byte	0x101
 1031 0102 57000000 		.4byte	0x57
 1032 0106 02       		.uleb128 0x2
 1033 0107 91       		.byte	0x91
 1034 0108 76       		.sleb128 -10
 1035 0109 00       		.byte	0
 1036 010a 0A       		.uleb128 0xa
 1037 010b 9A010000 		.4byte	.LASF9
 1038 010f 01       		.byte	0x1
 1039 0110 2501     		.2byte	0x125
 1040 0112 00000000 		.4byte	.LFB5
 1041 0116 28000000 		.4byte	.LFE5-.LFB5
 1042 011a 01       		.uleb128 0x1
 1043 011b 9C       		.byte	0x9c
 1044 011c 30010000 		.4byte	0x130
 1045 0120 0B       		.uleb128 0xb
 1046 0121 D9000000 		.4byte	.LASF11
 1047 0125 01       		.byte	0x1
 1048 0126 2501     		.2byte	0x125
 1049 0128 57000000 		.4byte	0x57
 1050 012c 02       		.uleb128 0x2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 31


 1051 012d 91       		.byte	0x91
 1052 012e 77       		.sleb128 -9
 1053 012f 00       		.byte	0
 1054 0130 0C       		.uleb128 0xc
 1055 0131 12000000 		.4byte	.LASF12
 1056 0135 01       		.byte	0x1
 1057 0136 4701     		.2byte	0x147
 1058 0138 57000000 		.4byte	0x57
 1059 013c 00000000 		.4byte	.LFB6
 1060 0140 20000000 		.4byte	.LFE6-.LFB6
 1061 0144 01       		.uleb128 0x1
 1062 0145 9C       		.byte	0x9c
 1063 0146 5A010000 		.4byte	0x15a
 1064 014a 09       		.uleb128 0x9
 1065 014b D9000000 		.4byte	.LASF11
 1066 014f 01       		.byte	0x1
 1067 0150 4901     		.2byte	0x149
 1068 0152 57000000 		.4byte	0x57
 1069 0156 02       		.uleb128 0x2
 1070 0157 91       		.byte	0x91
 1071 0158 77       		.sleb128 -9
 1072 0159 00       		.byte	0
 1073 015a 0D       		.uleb128 0xd
 1074 015b 64000000 		.4byte	.LASF27
 1075 015f 01       		.byte	0x1
 1076 0160 6501     		.2byte	0x165
 1077 0162 00000000 		.4byte	.LFB7
 1078 0166 2A000000 		.4byte	.LFE7-.LFB7
 1079 016a 01       		.uleb128 0x1
 1080 016b 9C       		.byte	0x9c
 1081 016c 80010000 		.4byte	0x180
 1082 0170 09       		.uleb128 0x9
 1083 0171 13020000 		.4byte	.LASF2
 1084 0175 01       		.byte	0x1
 1085 0176 6701     		.2byte	0x167
 1086 0178 57000000 		.4byte	0x57
 1087 017c 02       		.uleb128 0x2
 1088 017d 91       		.byte	0x91
 1089 017e 77       		.sleb128 -9
 1090 017f 00       		.byte	0
 1091 0180 0E       		.uleb128 0xe
 1092 0181 33000000 		.4byte	.LASF28
 1093 0185 01       		.byte	0x1
 1094 0186 8501     		.2byte	0x185
 1095 0188 57000000 		.4byte	0x57
 1096 018c 00000000 		.4byte	.LFB8
 1097 0190 44000000 		.4byte	.LFE8-.LFB8
 1098 0194 01       		.uleb128 0x1
 1099 0195 9C       		.byte	0x9c
 1100 0196 C6010000 		.4byte	0x1c6
 1101 019a 0B       		.uleb128 0xb
 1102 019b 2A000000 		.4byte	.LASF13
 1103 019f 01       		.byte	0x1
 1104 01a0 8501     		.2byte	0x185
 1105 01a2 57000000 		.4byte	0x57
 1106 01a6 02       		.uleb128 0x2
 1107 01a7 91       		.byte	0x91
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 32


 1108 01a8 6F       		.sleb128 -17
 1109 01a9 09       		.uleb128 0x9
 1110 01aa 24000000 		.4byte	.LASF14
 1111 01ae 01       		.byte	0x1
 1112 01af 8701     		.2byte	0x187
 1113 01b1 57000000 		.4byte	0x57
 1114 01b5 02       		.uleb128 0x2
 1115 01b6 91       		.byte	0x91
 1116 01b7 77       		.sleb128 -9
 1117 01b8 0F       		.uleb128 0xf
 1118 01b9 6900     		.ascii	"i\000"
 1119 01bb 01       		.byte	0x1
 1120 01bc 8801     		.2byte	0x188
 1121 01be 57000000 		.4byte	0x57
 1122 01c2 02       		.uleb128 0x2
 1123 01c3 91       		.byte	0x91
 1124 01c4 76       		.sleb128 -10
 1125 01c5 00       		.byte	0
 1126 01c6 0C       		.uleb128 0xc
 1127 01c7 A6000000 		.4byte	.LASF15
 1128 01cb 01       		.byte	0x1
 1129 01cc AC01     		.2byte	0x1ac
 1130 01ce 57000000 		.4byte	0x57
 1131 01d2 00000000 		.4byte	.LFB9
 1132 01d6 48000000 		.4byte	.LFE9-.LFB9
 1133 01da 01       		.uleb128 0x1
 1134 01db 9C       		.byte	0x9c
 1135 01dc FD010000 		.4byte	0x1fd
 1136 01e0 09       		.uleb128 0x9
 1137 01e1 24000000 		.4byte	.LASF14
 1138 01e5 01       		.byte	0x1
 1139 01e6 AE01     		.2byte	0x1ae
 1140 01e8 57000000 		.4byte	0x57
 1141 01ec 02       		.uleb128 0x2
 1142 01ed 91       		.byte	0x91
 1143 01ee 77       		.sleb128 -9
 1144 01ef 0F       		.uleb128 0xf
 1145 01f0 6900     		.ascii	"i\000"
 1146 01f2 01       		.byte	0x1
 1147 01f3 AF01     		.2byte	0x1af
 1148 01f5 57000000 		.4byte	0x57
 1149 01f9 02       		.uleb128 0x2
 1150 01fa 91       		.byte	0x91
 1151 01fb 76       		.sleb128 -10
 1152 01fc 00       		.byte	0
 1153 01fd 10       		.uleb128 0x10
 1154 01fe 7C010000 		.4byte	.LASF16
 1155 0202 01       		.byte	0x1
 1156 0203 E701     		.2byte	0x1e7
 1157 0205 00000000 		.4byte	.LFB10
 1158 0209 A0000000 		.4byte	.LFE10-.LFB10
 1159 020d 01       		.uleb128 0x1
 1160 020e 9C       		.byte	0x9c
 1161 020f 3F020000 		.4byte	0x23f
 1162 0213 09       		.uleb128 0x9
 1163 0214 D9000000 		.4byte	.LASF11
 1164 0218 01       		.byte	0x1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 33


 1165 0219 E901     		.2byte	0x1e9
 1166 021b 57000000 		.4byte	0x57
 1167 021f 02       		.uleb128 0x2
 1168 0220 91       		.byte	0x91
 1169 0221 6D       		.sleb128 -19
 1170 0222 09       		.uleb128 0x9
 1171 0223 13020000 		.4byte	.LASF2
 1172 0227 01       		.byte	0x1
 1173 0228 EA01     		.2byte	0x1ea
 1174 022a 57000000 		.4byte	0x57
 1175 022e 02       		.uleb128 0x2
 1176 022f 91       		.byte	0x91
 1177 0230 6F       		.sleb128 -17
 1178 0231 0F       		.uleb128 0xf
 1179 0232 6900     		.ascii	"i\000"
 1180 0234 01       		.byte	0x1
 1181 0235 EB01     		.2byte	0x1eb
 1182 0237 57000000 		.4byte	0x57
 1183 023b 02       		.uleb128 0x2
 1184 023c 91       		.byte	0x91
 1185 023d 6E       		.sleb128 -18
 1186 023e 00       		.byte	0
 1187 023f 10       		.uleb128 0x10
 1188 0240 78000000 		.4byte	.LASF17
 1189 0244 01       		.byte	0x1
 1190 0245 3302     		.2byte	0x233
 1191 0247 00000000 		.4byte	.LFB11
 1192 024b 80000000 		.4byte	.LFE11-.LFB11
 1193 024f 01       		.uleb128 0x1
 1194 0250 9C       		.byte	0x9c
 1195 0251 81020000 		.4byte	0x281
 1196 0255 09       		.uleb128 0x9
 1197 0256 D9000000 		.4byte	.LASF11
 1198 025a 01       		.byte	0x1
 1199 025b 3502     		.2byte	0x235
 1200 025d 57000000 		.4byte	0x57
 1201 0261 02       		.uleb128 0x2
 1202 0262 91       		.byte	0x91
 1203 0263 75       		.sleb128 -11
 1204 0264 09       		.uleb128 0x9
 1205 0265 13020000 		.4byte	.LASF2
 1206 0269 01       		.byte	0x1
 1207 026a 3602     		.2byte	0x236
 1208 026c 57000000 		.4byte	0x57
 1209 0270 02       		.uleb128 0x2
 1210 0271 91       		.byte	0x91
 1211 0272 77       		.sleb128 -9
 1212 0273 0F       		.uleb128 0xf
 1213 0274 6900     		.ascii	"i\000"
 1214 0276 01       		.byte	0x1
 1215 0277 3702     		.2byte	0x237
 1216 0279 57000000 		.4byte	0x57
 1217 027d 02       		.uleb128 0x2
 1218 027e 91       		.byte	0x91
 1219 027f 76       		.sleb128 -10
 1220 0280 00       		.byte	0
 1221 0281 11       		.uleb128 0x11
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 34


 1222 0282 4B020000 		.4byte	.LASF18
 1223 0286 01       		.byte	0x1
 1224 0287 7102     		.2byte	0x271
 1225 0289 00000000 		.4byte	.LFB12
 1226 028d 88000000 		.4byte	.LFE12-.LFB12
 1227 0291 01       		.uleb128 0x1
 1228 0292 9C       		.byte	0x9c
 1229 0293 A5020000 		.4byte	0x2a5
 1230 0297 0F       		.uleb128 0xf
 1231 0298 6900     		.ascii	"i\000"
 1232 029a 01       		.byte	0x1
 1233 029b 7302     		.2byte	0x273
 1234 029d 57000000 		.4byte	0x57
 1235 02a1 02       		.uleb128 0x2
 1236 02a2 91       		.byte	0x91
 1237 02a3 77       		.sleb128 -9
 1238 02a4 00       		.byte	0
 1239 02a5 12       		.uleb128 0x12
 1240 02a6 88000000 		.4byte	.LASF19
 1241 02aa 01       		.byte	0x1
 1242 02ab 45       		.byte	0x45
 1243 02ac 57000000 		.4byte	0x57
 1244 02b0 05       		.uleb128 0x5
 1245 02b1 03       		.byte	0x3
 1246 02b2 00000000 		.4byte	swd_PacketHeader
 1247 02b6 12       		.uleb128 0x12
 1248 02b7 44000000 		.4byte	.LASF20
 1249 02bb 01       		.byte	0x1
 1250 02bc 48       		.byte	0x48
 1251 02bd 57000000 		.4byte	0x57
 1252 02c1 05       		.uleb128 0x5
 1253 02c2 03       		.byte	0x3
 1254 02c3 00000000 		.4byte	swd_PacketAck
 1255 02c7 13       		.uleb128 0x13
 1256 02c8 57000000 		.4byte	0x57
 1257 02cc D7020000 		.4byte	0x2d7
 1258 02d0 14       		.uleb128 0x14
 1259 02d1 D7020000 		.4byte	0x2d7
 1260 02d5 03       		.byte	0x3
 1261 02d6 00       		.byte	0
 1262 02d7 05       		.uleb128 0x5
 1263 02d8 04       		.byte	0x4
 1264 02d9 07       		.byte	0x7
 1265 02da 8B010000 		.4byte	.LASF22
 1266 02de 12       		.uleb128 0x12
 1267 02df BC000000 		.4byte	.LASF23
 1268 02e3 01       		.byte	0x1
 1269 02e4 4B       		.byte	0x4b
 1270 02e5 C7020000 		.4byte	0x2c7
 1271 02e9 05       		.uleb128 0x5
 1272 02ea 03       		.byte	0x3
 1273 02eb 00000000 		.4byte	swd_PacketData
 1274 02ef 00       		.byte	0
 1275              		.section	.debug_abbrev,"",%progbits
 1276              	.Ldebug_abbrev0:
 1277 0000 01       		.uleb128 0x1
 1278 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 35


 1279 0002 01       		.byte	0x1
 1280 0003 25       		.uleb128 0x25
 1281 0004 0E       		.uleb128 0xe
 1282 0005 13       		.uleb128 0x13
 1283 0006 0B       		.uleb128 0xb
 1284 0007 03       		.uleb128 0x3
 1285 0008 0E       		.uleb128 0xe
 1286 0009 1B       		.uleb128 0x1b
 1287 000a 0E       		.uleb128 0xe
 1288 000b 55       		.uleb128 0x55
 1289 000c 17       		.uleb128 0x17
 1290 000d 11       		.uleb128 0x11
 1291 000e 01       		.uleb128 0x1
 1292 000f 10       		.uleb128 0x10
 1293 0010 17       		.uleb128 0x17
 1294 0011 00       		.byte	0
 1295 0012 00       		.byte	0
 1296 0013 02       		.uleb128 0x2
 1297 0014 2E       		.uleb128 0x2e
 1298 0015 01       		.byte	0x1
 1299 0016 03       		.uleb128 0x3
 1300 0017 0E       		.uleb128 0xe
 1301 0018 3A       		.uleb128 0x3a
 1302 0019 0B       		.uleb128 0xb
 1303 001a 3B       		.uleb128 0x3b
 1304 001b 0B       		.uleb128 0xb
 1305 001c 27       		.uleb128 0x27
 1306 001d 19       		.uleb128 0x19
 1307 001e 11       		.uleb128 0x11
 1308 001f 01       		.uleb128 0x1
 1309 0020 12       		.uleb128 0x12
 1310 0021 06       		.uleb128 0x6
 1311 0022 40       		.uleb128 0x40
 1312 0023 18       		.uleb128 0x18
 1313 0024 9642     		.uleb128 0x2116
 1314 0026 19       		.uleb128 0x19
 1315 0027 01       		.uleb128 0x1
 1316 0028 13       		.uleb128 0x13
 1317 0029 00       		.byte	0
 1318 002a 00       		.byte	0
 1319 002b 03       		.uleb128 0x3
 1320 002c 05       		.uleb128 0x5
 1321 002d 00       		.byte	0
 1322 002e 03       		.uleb128 0x3
 1323 002f 0E       		.uleb128 0xe
 1324 0030 3A       		.uleb128 0x3a
 1325 0031 0B       		.uleb128 0xb
 1326 0032 3B       		.uleb128 0x3b
 1327 0033 0B       		.uleb128 0xb
 1328 0034 49       		.uleb128 0x49
 1329 0035 13       		.uleb128 0x13
 1330 0036 02       		.uleb128 0x2
 1331 0037 18       		.uleb128 0x18
 1332 0038 00       		.byte	0
 1333 0039 00       		.byte	0
 1334 003a 04       		.uleb128 0x4
 1335 003b 34       		.uleb128 0x34
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 36


 1336 003c 00       		.byte	0
 1337 003d 03       		.uleb128 0x3
 1338 003e 0E       		.uleb128 0xe
 1339 003f 3A       		.uleb128 0x3a
 1340 0040 0B       		.uleb128 0xb
 1341 0041 3B       		.uleb128 0x3b
 1342 0042 0B       		.uleb128 0xb
 1343 0043 49       		.uleb128 0x49
 1344 0044 13       		.uleb128 0x13
 1345 0045 02       		.uleb128 0x2
 1346 0046 18       		.uleb128 0x18
 1347 0047 00       		.byte	0
 1348 0048 00       		.byte	0
 1349 0049 05       		.uleb128 0x5
 1350 004a 24       		.uleb128 0x24
 1351 004b 00       		.byte	0
 1352 004c 0B       		.uleb128 0xb
 1353 004d 0B       		.uleb128 0xb
 1354 004e 3E       		.uleb128 0x3e
 1355 004f 0B       		.uleb128 0xb
 1356 0050 03       		.uleb128 0x3
 1357 0051 0E       		.uleb128 0xe
 1358 0052 00       		.byte	0
 1359 0053 00       		.byte	0
 1360 0054 06       		.uleb128 0x6
 1361 0055 2E       		.uleb128 0x2e
 1362 0056 01       		.byte	0x1
 1363 0057 03       		.uleb128 0x3
 1364 0058 0E       		.uleb128 0xe
 1365 0059 3A       		.uleb128 0x3a
 1366 005a 0B       		.uleb128 0xb
 1367 005b 3B       		.uleb128 0x3b
 1368 005c 0B       		.uleb128 0xb
 1369 005d 49       		.uleb128 0x49
 1370 005e 13       		.uleb128 0x13
 1371 005f 11       		.uleb128 0x11
 1372 0060 01       		.uleb128 0x1
 1373 0061 12       		.uleb128 0x12
 1374 0062 06       		.uleb128 0x6
 1375 0063 40       		.uleb128 0x40
 1376 0064 18       		.uleb128 0x18
 1377 0065 9642     		.uleb128 0x2116
 1378 0067 19       		.uleb128 0x19
 1379 0068 01       		.uleb128 0x1
 1380 0069 13       		.uleb128 0x13
 1381 006a 00       		.byte	0
 1382 006b 00       		.byte	0
 1383 006c 07       		.uleb128 0x7
 1384 006d 2E       		.uleb128 0x2e
 1385 006e 00       		.byte	0
 1386 006f 03       		.uleb128 0x3
 1387 0070 0E       		.uleb128 0xe
 1388 0071 3A       		.uleb128 0x3a
 1389 0072 0B       		.uleb128 0xb
 1390 0073 3B       		.uleb128 0x3b
 1391 0074 0B       		.uleb128 0xb
 1392 0075 11       		.uleb128 0x11
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 37


 1393 0076 01       		.uleb128 0x1
 1394 0077 12       		.uleb128 0x12
 1395 0078 06       		.uleb128 0x6
 1396 0079 40       		.uleb128 0x40
 1397 007a 18       		.uleb128 0x18
 1398 007b 9642     		.uleb128 0x2116
 1399 007d 19       		.uleb128 0x19
 1400 007e 00       		.byte	0
 1401 007f 00       		.byte	0
 1402 0080 08       		.uleb128 0x8
 1403 0081 34       		.uleb128 0x34
 1404 0082 00       		.byte	0
 1405 0083 03       		.uleb128 0x3
 1406 0084 08       		.uleb128 0x8
 1407 0085 3A       		.uleb128 0x3a
 1408 0086 0B       		.uleb128 0xb
 1409 0087 3B       		.uleb128 0x3b
 1410 0088 0B       		.uleb128 0xb
 1411 0089 49       		.uleb128 0x49
 1412 008a 13       		.uleb128 0x13
 1413 008b 02       		.uleb128 0x2
 1414 008c 18       		.uleb128 0x18
 1415 008d 00       		.byte	0
 1416 008e 00       		.byte	0
 1417 008f 09       		.uleb128 0x9
 1418 0090 34       		.uleb128 0x34
 1419 0091 00       		.byte	0
 1420 0092 03       		.uleb128 0x3
 1421 0093 0E       		.uleb128 0xe
 1422 0094 3A       		.uleb128 0x3a
 1423 0095 0B       		.uleb128 0xb
 1424 0096 3B       		.uleb128 0x3b
 1425 0097 05       		.uleb128 0x5
 1426 0098 49       		.uleb128 0x49
 1427 0099 13       		.uleb128 0x13
 1428 009a 02       		.uleb128 0x2
 1429 009b 18       		.uleb128 0x18
 1430 009c 00       		.byte	0
 1431 009d 00       		.byte	0
 1432 009e 0A       		.uleb128 0xa
 1433 009f 2E       		.uleb128 0x2e
 1434 00a0 01       		.byte	0x1
 1435 00a1 03       		.uleb128 0x3
 1436 00a2 0E       		.uleb128 0xe
 1437 00a3 3A       		.uleb128 0x3a
 1438 00a4 0B       		.uleb128 0xb
 1439 00a5 3B       		.uleb128 0x3b
 1440 00a6 05       		.uleb128 0x5
 1441 00a7 27       		.uleb128 0x27
 1442 00a8 19       		.uleb128 0x19
 1443 00a9 11       		.uleb128 0x11
 1444 00aa 01       		.uleb128 0x1
 1445 00ab 12       		.uleb128 0x12
 1446 00ac 06       		.uleb128 0x6
 1447 00ad 40       		.uleb128 0x40
 1448 00ae 18       		.uleb128 0x18
 1449 00af 9642     		.uleb128 0x2116
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 38


 1450 00b1 19       		.uleb128 0x19
 1451 00b2 01       		.uleb128 0x1
 1452 00b3 13       		.uleb128 0x13
 1453 00b4 00       		.byte	0
 1454 00b5 00       		.byte	0
 1455 00b6 0B       		.uleb128 0xb
 1456 00b7 05       		.uleb128 0x5
 1457 00b8 00       		.byte	0
 1458 00b9 03       		.uleb128 0x3
 1459 00ba 0E       		.uleb128 0xe
 1460 00bb 3A       		.uleb128 0x3a
 1461 00bc 0B       		.uleb128 0xb
 1462 00bd 3B       		.uleb128 0x3b
 1463 00be 05       		.uleb128 0x5
 1464 00bf 49       		.uleb128 0x49
 1465 00c0 13       		.uleb128 0x13
 1466 00c1 02       		.uleb128 0x2
 1467 00c2 18       		.uleb128 0x18
 1468 00c3 00       		.byte	0
 1469 00c4 00       		.byte	0
 1470 00c5 0C       		.uleb128 0xc
 1471 00c6 2E       		.uleb128 0x2e
 1472 00c7 01       		.byte	0x1
 1473 00c8 03       		.uleb128 0x3
 1474 00c9 0E       		.uleb128 0xe
 1475 00ca 3A       		.uleb128 0x3a
 1476 00cb 0B       		.uleb128 0xb
 1477 00cc 3B       		.uleb128 0x3b
 1478 00cd 05       		.uleb128 0x5
 1479 00ce 49       		.uleb128 0x49
 1480 00cf 13       		.uleb128 0x13
 1481 00d0 11       		.uleb128 0x11
 1482 00d1 01       		.uleb128 0x1
 1483 00d2 12       		.uleb128 0x12
 1484 00d3 06       		.uleb128 0x6
 1485 00d4 40       		.uleb128 0x40
 1486 00d5 18       		.uleb128 0x18
 1487 00d6 9642     		.uleb128 0x2116
 1488 00d8 19       		.uleb128 0x19
 1489 00d9 01       		.uleb128 0x1
 1490 00da 13       		.uleb128 0x13
 1491 00db 00       		.byte	0
 1492 00dc 00       		.byte	0
 1493 00dd 0D       		.uleb128 0xd
 1494 00de 2E       		.uleb128 0x2e
 1495 00df 01       		.byte	0x1
 1496 00e0 03       		.uleb128 0x3
 1497 00e1 0E       		.uleb128 0xe
 1498 00e2 3A       		.uleb128 0x3a
 1499 00e3 0B       		.uleb128 0xb
 1500 00e4 3B       		.uleb128 0x3b
 1501 00e5 05       		.uleb128 0x5
 1502 00e6 11       		.uleb128 0x11
 1503 00e7 01       		.uleb128 0x1
 1504 00e8 12       		.uleb128 0x12
 1505 00e9 06       		.uleb128 0x6
 1506 00ea 40       		.uleb128 0x40
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 39


 1507 00eb 18       		.uleb128 0x18
 1508 00ec 9642     		.uleb128 0x2116
 1509 00ee 19       		.uleb128 0x19
 1510 00ef 01       		.uleb128 0x1
 1511 00f0 13       		.uleb128 0x13
 1512 00f1 00       		.byte	0
 1513 00f2 00       		.byte	0
 1514 00f3 0E       		.uleb128 0xe
 1515 00f4 2E       		.uleb128 0x2e
 1516 00f5 01       		.byte	0x1
 1517 00f6 03       		.uleb128 0x3
 1518 00f7 0E       		.uleb128 0xe
 1519 00f8 3A       		.uleb128 0x3a
 1520 00f9 0B       		.uleb128 0xb
 1521 00fa 3B       		.uleb128 0x3b
 1522 00fb 05       		.uleb128 0x5
 1523 00fc 27       		.uleb128 0x27
 1524 00fd 19       		.uleb128 0x19
 1525 00fe 49       		.uleb128 0x49
 1526 00ff 13       		.uleb128 0x13
 1527 0100 11       		.uleb128 0x11
 1528 0101 01       		.uleb128 0x1
 1529 0102 12       		.uleb128 0x12
 1530 0103 06       		.uleb128 0x6
 1531 0104 40       		.uleb128 0x40
 1532 0105 18       		.uleb128 0x18
 1533 0106 9742     		.uleb128 0x2117
 1534 0108 19       		.uleb128 0x19
 1535 0109 01       		.uleb128 0x1
 1536 010a 13       		.uleb128 0x13
 1537 010b 00       		.byte	0
 1538 010c 00       		.byte	0
 1539 010d 0F       		.uleb128 0xf
 1540 010e 34       		.uleb128 0x34
 1541 010f 00       		.byte	0
 1542 0110 03       		.uleb128 0x3
 1543 0111 08       		.uleb128 0x8
 1544 0112 3A       		.uleb128 0x3a
 1545 0113 0B       		.uleb128 0xb
 1546 0114 3B       		.uleb128 0x3b
 1547 0115 05       		.uleb128 0x5
 1548 0116 49       		.uleb128 0x49
 1549 0117 13       		.uleb128 0x13
 1550 0118 02       		.uleb128 0x2
 1551 0119 18       		.uleb128 0x18
 1552 011a 00       		.byte	0
 1553 011b 00       		.byte	0
 1554 011c 10       		.uleb128 0x10
 1555 011d 2E       		.uleb128 0x2e
 1556 011e 01       		.byte	0x1
 1557 011f 3F       		.uleb128 0x3f
 1558 0120 19       		.uleb128 0x19
 1559 0121 03       		.uleb128 0x3
 1560 0122 0E       		.uleb128 0xe
 1561 0123 3A       		.uleb128 0x3a
 1562 0124 0B       		.uleb128 0xb
 1563 0125 3B       		.uleb128 0x3b
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 40


 1564 0126 05       		.uleb128 0x5
 1565 0127 27       		.uleb128 0x27
 1566 0128 19       		.uleb128 0x19
 1567 0129 11       		.uleb128 0x11
 1568 012a 01       		.uleb128 0x1
 1569 012b 12       		.uleb128 0x12
 1570 012c 06       		.uleb128 0x6
 1571 012d 40       		.uleb128 0x40
 1572 012e 18       		.uleb128 0x18
 1573 012f 9642     		.uleb128 0x2116
 1574 0131 19       		.uleb128 0x19
 1575 0132 01       		.uleb128 0x1
 1576 0133 13       		.uleb128 0x13
 1577 0134 00       		.byte	0
 1578 0135 00       		.byte	0
 1579 0136 11       		.uleb128 0x11
 1580 0137 2E       		.uleb128 0x2e
 1581 0138 01       		.byte	0x1
 1582 0139 3F       		.uleb128 0x3f
 1583 013a 19       		.uleb128 0x19
 1584 013b 03       		.uleb128 0x3
 1585 013c 0E       		.uleb128 0xe
 1586 013d 3A       		.uleb128 0x3a
 1587 013e 0B       		.uleb128 0xb
 1588 013f 3B       		.uleb128 0x3b
 1589 0140 05       		.uleb128 0x5
 1590 0141 27       		.uleb128 0x27
 1591 0142 19       		.uleb128 0x19
 1592 0143 11       		.uleb128 0x11
 1593 0144 01       		.uleb128 0x1
 1594 0145 12       		.uleb128 0x12
 1595 0146 06       		.uleb128 0x6
 1596 0147 40       		.uleb128 0x40
 1597 0148 18       		.uleb128 0x18
 1598 0149 9742     		.uleb128 0x2117
 1599 014b 19       		.uleb128 0x19
 1600 014c 01       		.uleb128 0x1
 1601 014d 13       		.uleb128 0x13
 1602 014e 00       		.byte	0
 1603 014f 00       		.byte	0
 1604 0150 12       		.uleb128 0x12
 1605 0151 34       		.uleb128 0x34
 1606 0152 00       		.byte	0
 1607 0153 03       		.uleb128 0x3
 1608 0154 0E       		.uleb128 0xe
 1609 0155 3A       		.uleb128 0x3a
 1610 0156 0B       		.uleb128 0xb
 1611 0157 3B       		.uleb128 0x3b
 1612 0158 0B       		.uleb128 0xb
 1613 0159 49       		.uleb128 0x49
 1614 015a 13       		.uleb128 0x13
 1615 015b 3F       		.uleb128 0x3f
 1616 015c 19       		.uleb128 0x19
 1617 015d 02       		.uleb128 0x2
 1618 015e 18       		.uleb128 0x18
 1619 015f 00       		.byte	0
 1620 0160 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 41


 1621 0161 13       		.uleb128 0x13
 1622 0162 01       		.uleb128 0x1
 1623 0163 01       		.byte	0x1
 1624 0164 49       		.uleb128 0x49
 1625 0165 13       		.uleb128 0x13
 1626 0166 01       		.uleb128 0x1
 1627 0167 13       		.uleb128 0x13
 1628 0168 00       		.byte	0
 1629 0169 00       		.byte	0
 1630 016a 14       		.uleb128 0x14
 1631 016b 21       		.uleb128 0x21
 1632 016c 00       		.byte	0
 1633 016d 49       		.uleb128 0x49
 1634 016e 13       		.uleb128 0x13
 1635 016f 2F       		.uleb128 0x2f
 1636 0170 0B       		.uleb128 0xb
 1637 0171 00       		.byte	0
 1638 0172 00       		.byte	0
 1639 0173 00       		.byte	0
 1640              		.section	.debug_aranges,"",%progbits
 1641 0000 7C000000 		.4byte	0x7c
 1642 0004 0200     		.2byte	0x2
 1643 0006 00000000 		.4byte	.Ldebug_info0
 1644 000a 04       		.byte	0x4
 1645 000b 00       		.byte	0
 1646 000c 0000     		.2byte	0
 1647 000e 0000     		.2byte	0
 1648 0010 00000000 		.4byte	.LFB0
 1649 0014 50000000 		.4byte	.LFE0-.LFB0
 1650 0018 00000000 		.4byte	.LFB1
 1651 001c 78000000 		.4byte	.LFE1-.LFB1
 1652 0020 00000000 		.4byte	.LFB2
 1653 0024 12000000 		.4byte	.LFE2-.LFB2
 1654 0028 00000000 		.4byte	.LFB3
 1655 002c 12000000 		.4byte	.LFE3-.LFB3
 1656 0030 00000000 		.4byte	.LFB4
 1657 0034 50000000 		.4byte	.LFE4-.LFB4
 1658 0038 00000000 		.4byte	.LFB5
 1659 003c 28000000 		.4byte	.LFE5-.LFB5
 1660 0040 00000000 		.4byte	.LFB6
 1661 0044 20000000 		.4byte	.LFE6-.LFB6
 1662 0048 00000000 		.4byte	.LFB7
 1663 004c 2A000000 		.4byte	.LFE7-.LFB7
 1664 0050 00000000 		.4byte	.LFB8
 1665 0054 44000000 		.4byte	.LFE8-.LFB8
 1666 0058 00000000 		.4byte	.LFB9
 1667 005c 48000000 		.4byte	.LFE9-.LFB9
 1668 0060 00000000 		.4byte	.LFB10
 1669 0064 A0000000 		.4byte	.LFE10-.LFB10
 1670 0068 00000000 		.4byte	.LFB11
 1671 006c 80000000 		.4byte	.LFE11-.LFB11
 1672 0070 00000000 		.4byte	.LFB12
 1673 0074 88000000 		.4byte	.LFE12-.LFB12
 1674 0078 00000000 		.4byte	0
 1675 007c 00000000 		.4byte	0
 1676              		.section	.debug_ranges,"",%progbits
 1677              	.Ldebug_ranges0:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 42


 1678 0000 00000000 		.4byte	.LFB0
 1679 0004 50000000 		.4byte	.LFE0
 1680 0008 00000000 		.4byte	.LFB1
 1681 000c 78000000 		.4byte	.LFE1
 1682 0010 00000000 		.4byte	.LFB2
 1683 0014 12000000 		.4byte	.LFE2
 1684 0018 00000000 		.4byte	.LFB3
 1685 001c 12000000 		.4byte	.LFE3
 1686 0020 00000000 		.4byte	.LFB4
 1687 0024 50000000 		.4byte	.LFE4
 1688 0028 00000000 		.4byte	.LFB5
 1689 002c 28000000 		.4byte	.LFE5
 1690 0030 00000000 		.4byte	.LFB6
 1691 0034 20000000 		.4byte	.LFE6
 1692 0038 00000000 		.4byte	.LFB7
 1693 003c 2A000000 		.4byte	.LFE7
 1694 0040 00000000 		.4byte	.LFB8
 1695 0044 44000000 		.4byte	.LFE8
 1696 0048 00000000 		.4byte	.LFB9
 1697 004c 48000000 		.4byte	.LFE9
 1698 0050 00000000 		.4byte	.LFB10
 1699 0054 A0000000 		.4byte	.LFE10
 1700 0058 00000000 		.4byte	.LFB11
 1701 005c 80000000 		.4byte	.LFE11
 1702 0060 00000000 		.4byte	.LFB12
 1703 0064 88000000 		.4byte	.LFE12
 1704 0068 00000000 		.4byte	0
 1705 006c 00000000 		.4byte	0
 1706              		.section	.debug_line,"",%progbits
 1707              	.Ldebug_line0:
 1708 0000 26020000 		.section	.debug_str,"MS",%progbits,1
 1708      02002800 
 1708      00000201 
 1708      FB0E0D00 
 1708      01010101 
 1709              	.LASF7:
 1710 0000 5377645F 		.ascii	"Swd_GetAckSegment\000"
 1710      47657441 
 1710      636B5365 
 1710      676D656E 
 1710      7400
 1711              	.LASF12:
 1712 0012 5377645F 		.ascii	"Swd_ReceiveParity\000"
 1712      52656365 
 1712      69766550 
 1712      61726974 
 1712      7900
 1713              	.LASF14:
 1714 0024 636F756E 		.ascii	"count\000"
 1714      7400
 1715              	.LASF13:
 1716 002a 64617461 		.ascii	"dataByte\000"
 1716      42797465 
 1716      00
 1717              	.LASF28:
 1718 0033 5377645F 		.ascii	"Swd_CountOneBits\000"
 1718      436F756E 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 43


 1718      744F6E65 
 1718      42697473 
 1718      00
 1719              	.LASF20:
 1720 0044 7377645F 		.ascii	"swd_PacketAck\000"
 1720      5061636B 
 1720      65744163 
 1720      6B00
 1721              	.LASF25:
 1722 0052 5357445F 		.ascii	"SWD_PacketLayer.c\000"
 1722      5061636B 
 1722      65744C61 
 1722      7965722E 
 1722      6300
 1723              	.LASF27:
 1724 0064 5377645F 		.ascii	"Swd_SendDummyClocks\000"
 1724      53656E64 
 1724      44756D6D 
 1724      79436C6F 
 1724      636B7300 
 1725              	.LASF17:
 1726 0078 5377645F 		.ascii	"Swd_WritePacket\000"
 1726      57726974 
 1726      65506163 
 1726      6B657400 
 1727              	.LASF19:
 1728 0088 7377645F 		.ascii	"swd_PacketHeader\000"
 1728      5061636B 
 1728      65744865 
 1728      61646572 
 1728      00
 1729              	.LASF0:
 1730 0099 5377645F 		.ascii	"Swd_SendByte\000"
 1730      53656E64 
 1730      42797465 
 1730      00
 1731              	.LASF15:
 1732 00a6 5377645F 		.ascii	"Swd_ComputeDataParity\000"
 1732      436F6D70 
 1732      75746544 
 1732      61746150 
 1732      61726974 
 1733              	.LASF23:
 1734 00bc 7377645F 		.ascii	"swd_PacketData\000"
 1734      5061636B 
 1734      65744461 
 1734      746100
 1735              	.LASF21:
 1736 00cb 756E7369 		.ascii	"unsigned char\000"
 1736      676E6564 
 1736      20636861 
 1736      7200
 1737              	.LASF11:
 1738 00d9 70617269 		.ascii	"parity\000"
 1738      747900
 1739              	.LASF10:
 1740 00e0 74784279 		.ascii	"txByte\000"
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 44


 1740      746500
 1741              	.LASF24:
 1742 00e7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1742      4320342E 
 1742      392E3320 
 1742      32303135 
 1742      30333033 
 1743 011a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1743      20726576 
 1743      6973696F 
 1743      6E203232 
 1743      31323230 
 1744 014d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1744      66756E63 
 1744      74696F6E 
 1744      2D736563 
 1744      74696F6E 
 1745              	.LASF4:
 1746 0175 72784279 		.ascii	"rxByte\000"
 1746      746500
 1747              	.LASF16:
 1748 017c 5377645F 		.ascii	"Swd_ReadPacket\000"
 1748      52656164 
 1748      5061636B 
 1748      657400
 1749              	.LASF22:
 1750 018b 73697A65 		.ascii	"sizetype\000"
 1750      74797065 
 1750      00
 1751              	.LASF3:
 1752 0194 72784269 		.ascii	"rxBit\000"
 1752      7400
 1753              	.LASF9:
 1754 019a 5377645F 		.ascii	"Swd_SendParity\000"
 1754      53656E64 
 1754      50617269 
 1754      747900
 1755              	.LASF8:
 1756 01a9 72656365 		.ascii	"receiveBit\000"
 1756      69766542 
 1756      697400
 1757              	.LASF1:
 1758 01b4 5377645F 		.ascii	"Swd_ReceiveByte\000"
 1758      52656365 
 1758      69766542 
 1758      79746500 
 1759              	.LASF26:
 1760 01c4 443A5C55 		.ascii	"D:\\Users\\WorkBench\\Documents\\PSoC Creator\\HSSP"
 1760      73657273 
 1760      5C576F72 
 1760      6B42656E 
 1760      63685C44 
 1761 01f2 5C414E38 		.ascii	"\\AN84858\\A_Hssp_Programmer.cydsn\000"
 1761      34383538 
 1761      5C415F48 
 1761      7373705F 
 1761      50726F67 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFNNu5q.s 			page 45


 1762              	.LASF2:
 1763 0213 6C6F6F70 		.ascii	"loop\000"
 1763      00
 1764              	.LASF6:
 1765 0218 5377645F 		.ascii	"Swd_SecondTurnAroundPhase\000"
 1765      5365636F 
 1765      6E645475 
 1765      726E4172 
 1765      6F756E64 
 1766              	.LASF5:
 1767 0232 5377645F 		.ascii	"Swd_FirstTurnAroundPhase\000"
 1767      46697273 
 1767      74547572 
 1767      6E41726F 
 1767      756E6450 
 1768              	.LASF18:
 1769 024b 5377645F 		.ascii	"Swd_LineReset\000"
 1769      4C696E65 
 1769      52657365 
 1769      7400
 1770              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
