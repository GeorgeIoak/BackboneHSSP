ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	currentStep,1,1
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 50726573 		.ascii	"Press SWITCH SW2\000"
  22      73205357 
  22      49544348 
  22      20535732 
  22      00
  23 0011 000000   		.align	2
  24              	.LC1:
  25 0014 50726F67 		.ascii	"Programming PSoC4\000"
  25      72616D6D 
  25      696E6720 
  25      50536F43 
  25      3400
  26 0026 0000     		.align	2
  27              	.LC2:
  28 0028 48535350 		.ascii	"HSSP Success\000"
  28      20537563 
  28      63657373 
  28      00
  29 0035 000000   		.align	2
  30              	.LC3:
  31 0038 48535350 		.ascii	"HSSP Fail Step\000"
  31      20466169 
  31      6C205374 
  31      657000
  32 0047 00       		.align	2
  33              	.LC4:
  34 0048 45727220 		.ascii	"Err \000"
  34      00
  35 004d 000000   		.align	2
  36              	.LC5:
  37 0050 2053524F 		.ascii	" SROM \000"
  37      4D2000
  38 0057 00       		.section	.text.main,"ax",%progbits
  39              		.align	2
  40              		.global	main
  41              		.thumb
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 2


  42              		.thumb_func
  43              		.type	main, %function
  44              	main:
  45              	.LFB63:
  46              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * Copyright (2015), Cypress Semiconductor Corporation.
   3:main.c        **** *******************************************************************************
   4:main.c        **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
   5:main.c        **** * protected by and subject to worldwide patent protection (United States and
   6:main.c        **** * foreign), United States copyright laws and international treaty provisions.
   7:main.c        **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
   8:main.c        **** * license to copy, use, modify, create derivative works of, and compile the
   9:main.c        **** * Cypress Source Code and derivative works for the sole purpose of creating
  10:main.c        **** * custom software in support of licensee product to be used only in conjunction
  11:main.c        **** * with a Cypress integrated circuit as specified in the applicable agreement.
  12:main.c        **** * Any reproduction, modification, translation, compilation, or representation of
  13:main.c        **** * this software except as specified above is prohibited without the express
  14:main.c        **** * written permission of Cypress.
  15:main.c        **** *
  16:main.c        **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  17:main.c        **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  18:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  19:main.c        **** * Cypress reserves the right to make changes without further notice to the
  20:main.c        **** * materials described herein. Cypress does not assume any liability arising out
  21:main.c        **** * of the application or use of any product or circuit described herein. Cypress
  22:main.c        **** * does not authorize its products for use as critical components in life-support
  23:main.c        **** * systems where a malfunction or failure may reasonably be expected to result in
  24:main.c        **** * significant injury to the user. The inclusion of Cypress' product in a life-
  25:main.c        **** * support systems application implies that the manufacturer assumes all risk of
  26:main.c        **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  27:main.c        **** * limited by and subject to the applicable Cypress software license agreement.
  28:main.c        **** 
  29:main.c        **** *******************************************************************************
  30:main.c        **** *  Project Name: A_Hssp_Programmer
  31:main.c        **** *  Project Revision: 1.00
  32:main.c        **** *  Software Version: PSoC Creator 3.2
  33:main.c        **** *  Device Tested: CY8C5868AXI-LP035
  34:main.c        **** *  Compilers Tested: ARM GCC 4.8.4
  35:main.c        **** *  Related Hardware: CY8CKIT-050
  36:main.c        **** ******************************************************************************/
  37:main.c        **** 
  38:main.c        **** /******************************************************************************
  39:main.c        **** * Project Description:
  40:main.c        **** * This is a sample HSSP implmentation demonstrating a PSoC 5LP programming
  41:main.c        **** * PSoC 4. The project is tested using CY8CKIT-050 with PSoC 5LP chip and 
  42:main.c        **** * CY8CKIT-001 with PSoC 4 processor module.
  43:main.c        **** *
  44:main.c        **** * Connections Required
  45:main.c        **** * CY8CKIT-050 (PSoC 5LP DVK) :
  46:main.c        **** *  Pin_SWDIO (P0[0])- This pin is connected to SWDIO (Debug pin) of PSoC 4 kit.
  47:main.c        **** *  Pin_SWDCK (P0[1])- This pin is connected to SWDCK (Debug pin) of PSoC 4 kit.
  48:main.c        **** *  Pin_XRES  (P0[2])- This pin is connected to XRES input of PSoC kit.
  49:main.c        **** *  Pin_Start (P6[1])- This pin is internally connected to switch SW2.
  50:main.c        **** *
  51:main.c        **** * Note that the GNDs of both DVKs should be connected together and Power should
  52:main.c        **** * be supplied from a single source.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 3


  53:main.c        **** *
  54:main.c        **** * The hex file included in this project toggles pin P1[6] of PSoC 4 at 1Hz
  55:main.c        **** * frequency and displays “PSoC Programmed” on the character LCD mounted on
  56:main.c        **** * CY8CKIT-001 DVK.
  57:main.c        **** * 
  58:main.c        **** * Connections required on the CY8CKIT-001 with PSoC 4 Processor Module :
  59:main.c        **** * 	1. Connect P1[6] to LED1
  60:main.c        **** *	2. Mount character LCD on the kit
  61:main.c        **** *
  62:main.c        **** * Press SW2 on the PSoC 5LP DVK to start the programming operation.
  63:main.c        **** * ProgramDevice() function in main.c calls all the programming steps
  64:main.c        **** * sequentially to program PSoC 4.
  65:main.c        **** *
  66:main.c        **** * main.c checks the result of ProgramDevice() function and if it returns 
  67:main.c        **** * SUCCESS, "HSSP Success" is displayed on the character LCD mounted on the
  68:main.c        **** * PSoC 5LP kit. If ProgramDevice() returns failure, Step of failure, Reason
  69:main.c        **** * of failure is displayed on the LCD. If the error is because of SROM, It
  70:main.c        **** * displays the SROM error code.
  71:main.c        **** *
  72:main.c        **** * On the PSoC 4 Side, LED connected to P1[6] starts to toggle at 1 Hz
  73:main.c        **** * frequency and character LCD displays the message after successful 
  74:main.c        **** * programming.
  75:main.c        **** *
  76:main.c        **** * Note:
  77:main.c        **** *  The Character LCD functions and the Pin_Start APIs in the main() function
  78:main.c        **** *  are for PSoC 5LP host programmer. If you are using any other microcontroller,
  79:main.c        **** *  replace the functions with the APIs supported by the host or change the macro
  80:main.c        **** *  USE_LCD and USE_START_PIN to 0 to remove all LCD and Pin_Start functions.
  81:main.c        **** ******************************************************************************/
  82:main.c        **** 
  83:main.c        **** /* This file is included for calling Character LCD and Pin_Start APIs in
  84:main.c        ****    PSoC 5LP. Remove this header file while porting to non PSoC 5LP host
  85:main.c        ****    programmer */
  86:main.c        **** #include <device.h> 
  87:main.c        **** 
  88:main.c        **** /* These macros are used to remove all LCD and Pin_Start functions while
  89:main.c        ****    porting this code to non PSoC 5LP host programmer */
  90:main.c        **** #define USE_LCD 		1
  91:main.c        **** #define USE_START_PIN 	1
  92:main.c        **** 
  93:main.c        **** /* This file has the top level HSSP routines that should be called from main
  94:main.c        ****    application code */
  95:main.c        **** #include "ProgrammingSteps.h"
  96:main.c        **** 
  97:main.c        **** /* Function which sequentially calls all the programming steps */
  98:main.c        **** unsigned char ProgramDevice(void);
  99:main.c        **** 
 100:main.c        **** /* Global variable which stores the current programming step under execution */
 101:main.c        **** unsigned char currentStep;
 102:main.c        **** 
 103:main.c        **** void main()
 104:main.c        **** {
  47              		.loc 1 104 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 8
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 4


  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 82B0     		sub	sp, sp, #8
  56              		.cfi_def_cfa_offset 16
  57 0004 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
 105:main.c        ****     /* Variable to store the result of HSSP operation */
 106:main.c        ****     unsigned char programResult;   
 107:main.c        **** 	
 108:main.c        **** 	/* Variable to store the HSSP Error status in case of failure */
 109:main.c        ****     unsigned char errorStatus; 
 110:main.c        **** 	
 111:main.c        **** 	/* Variable to store the SROM Error status if errorStatus contains
 112:main.c        **** 	   SROM_TIMEOUT_ERROR error */
 113:main.c        ****     unsigned char sromErrorStatus;
 114:main.c        **** 	
 115:main.c        **** 	/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 116:main.c        **** 	if(USE_LCD)
 117:main.c        **** 	{
 118:main.c        **** 		/* Initialize Character LCD  */
 119:main.c        **** 	    LCD_Char_Start();
  59              		.loc 1 119 0
  60 0006 FFF7FEFF 		bl	LCD_Char_Start
 120:main.c        **** 		
 121:main.c        **** 		/* Display the message */
 122:main.c        **** 		LCD_Char_Position(0,0);
  61              		.loc 1 122 0
  62 000a 0020     		movs	r0, #0
  63 000c 0021     		movs	r1, #0
  64 000e FFF7FEFF 		bl	LCD_Char_Position
 123:main.c        **** 		LCD_Char_PrintString("Press SWITCH SW2");
  65              		.loc 1 123 0
  66 0012 2848     		ldr	r0, .L5
  67 0014 FFF7FEFF 		bl	LCD_Char_PrintString
 124:main.c        **** 	}
 125:main.c        ****     
 126:main.c        **** 	/* Set USE_START_PIN macro to 0 if PSoC 5LP is not used as host
 127:main.c        **** 	   microcontroller */
 128:main.c        **** 	if(USE_START_PIN)
 129:main.c        **** 	{
 130:main.c        **** 		while (Pin_Start_Read() == 1);
  68              		.loc 1 130 0
  69 0018 00BF     		nop
  70              	.L2:
  71              		.loc 1 130 0 is_stmt 0 discriminator 1
  72 001a FFF7FEFF 		bl	Pin_Start_Read
  73 001e 0346     		mov	r3, r0
  74 0020 012B     		cmp	r3, #1
  75 0022 FAD0     		beq	.L2
 131:main.c        **** 	}
 132:main.c        **** 	
 133:main.c        **** 	/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 134:main.c        **** 	if(USE_LCD)
 135:main.c        **** 	{
 136:main.c        **** 		/* Clear Character LCD  */
 137:main.c        **** 		LCD_Char_ClearDisplay();
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 5


  76              		.loc 1 137 0 is_stmt 1
  77 0024 0120     		movs	r0, #1
  78 0026 FFF7FEFF 		bl	LCD_Char_WriteControl
 138:main.c        **** 		
 139:main.c        **** 		/* Display the message */
 140:main.c        **** 	    LCD_Char_Position(0,0);
  79              		.loc 1 140 0
  80 002a 0020     		movs	r0, #0
  81 002c 0021     		movs	r1, #0
  82 002e FFF7FEFF 		bl	LCD_Char_Position
 141:main.c        **** 	    LCD_Char_PrintString("Programming PSoC4");
  83              		.loc 1 141 0
  84 0032 2148     		ldr	r0, .L5+4
  85 0034 FFF7FEFF 		bl	LCD_Char_PrintString
 142:main.c        **** 	}
 143:main.c        ****     /* Start the HSSP Programming and store the status */
 144:main.c        ****     programResult = ProgramDevice();
  86              		.loc 1 144 0
  87 0038 FFF7FEFF 		bl	ProgramDevice
  88 003c 0346     		mov	r3, r0
  89 003e FB71     		strb	r3, [r7, #7]
 145:main.c        ****     
 146:main.c        **** 	/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 147:main.c        **** 	if(USE_LCD)
 148:main.c        **** 	{
 149:main.c        **** 	    /* Character LCD will display the status of HSSP Programming  */
 150:main.c        **** 	    LCD_Char_ClearDisplay();
  90              		.loc 1 150 0
  91 0040 0120     		movs	r0, #1
  92 0042 FFF7FEFF 		bl	LCD_Char_WriteControl
 151:main.c        **** 	}
 152:main.c        ****     
 153:main.c        **** 	/* HSSP completed successfully */
 154:main.c        ****     if(programResult == SUCCESS) 
  93              		.loc 1 154 0
  94 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  95 0048 012B     		cmp	r3, #1
  96 004a 07D1     		bne	.L3
 155:main.c        ****     {
 156:main.c        **** 		/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 157:main.c        ****         if(USE_LCD)
 158:main.c        **** 		{
 159:main.c        **** 			LCD_Char_Position(0,0);
  97              		.loc 1 159 0
  98 004c 0020     		movs	r0, #0
  99 004e 0021     		movs	r1, #0
 100 0050 FFF7FEFF 		bl	LCD_Char_Position
 160:main.c        ****         	LCD_Char_PrintString("HSSP Success");
 101              		.loc 1 160 0
 102 0054 1948     		ldr	r0, .L5+8
 103 0056 FFF7FEFF 		bl	LCD_Char_PrintString
 104 005a 2AE0     		b	.L4
 105              	.L3:
 161:main.c        ****     	}
 162:main.c        **** 	}
 163:main.c        **** 	
 164:main.c        **** 	/* HSSP Failure */
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 6


 165:main.c        ****     else
 166:main.c        ****     {
 167:main.c        **** 		/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 168:main.c        ****         if(USE_LCD)
 169:main.c        **** 		{
 170:main.c        **** 			/* Display the step number where the HSSP failed */
 171:main.c        **** 	        LCD_Char_Position(0,0);
 106              		.loc 1 171 0
 107 005c 0020     		movs	r0, #0
 108 005e 0021     		movs	r1, #0
 109 0060 FFF7FEFF 		bl	LCD_Char_Position
 172:main.c        **** 	        LCD_Char_PrintString("HSSP Fail Step");
 110              		.loc 1 172 0
 111 0064 1648     		ldr	r0, .L5+12
 112 0066 FFF7FEFF 		bl	LCD_Char_PrintString
 173:main.c        **** 	        LCD_Char_PrintInt8(currentStep);
 113              		.loc 1 173 0
 114 006a 164B     		ldr	r3, .L5+16
 115 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 006e 1846     		mov	r0, r3
 117 0070 FFF7FEFF 		bl	LCD_Char_PrintInt8
 174:main.c        **** 		}
 175:main.c        ****         		
 176:main.c        ****         /* Get the HSSP error status and display on THE LCD */
 177:main.c        ****         errorStatus = ReadHsspErrorStatus();
 118              		.loc 1 177 0
 119 0074 FFF7FEFF 		bl	ReadHsspErrorStatus
 120 0078 0346     		mov	r3, r0
 121 007a BB71     		strb	r3, [r7, #6]
 178:main.c        ****         
 179:main.c        **** 		/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 180:main.c        **** 		if(USE_LCD)
 181:main.c        **** 		{
 182:main.c        **** 	        LCD_Char_Position(1,0);
 122              		.loc 1 182 0
 123 007c 0120     		movs	r0, #1
 124 007e 0021     		movs	r1, #0
 125 0080 FFF7FEFF 		bl	LCD_Char_Position
 183:main.c        **** 	        LCD_Char_PrintString("Err ");
 126              		.loc 1 183 0
 127 0084 1048     		ldr	r0, .L5+20
 128 0086 FFF7FEFF 		bl	LCD_Char_PrintString
 184:main.c        **** 	        LCD_Char_PrintInt8(errorStatus);
 129              		.loc 1 184 0
 130 008a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 131 008c 1846     		mov	r0, r3
 132 008e FFF7FEFF 		bl	LCD_Char_PrintInt8
 185:main.c        **** 		}
 186:main.c        ****         
 187:main.c        ****         /* If the errorStatus contains THE SROM_TIMEOUT_ERROR error condition,
 188:main.c        ****            read the Status Code returned by CPUSS_SYSARG register and display
 189:main.c        **** 		   on THE LCD */
 190:main.c        ****         if(errorStatus & SROM_TIMEOUT_ERROR)
 133              		.loc 1 190 0
 134 0092 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 135 0094 03F02003 		and	r3, r3, #32
 136 0098 002B     		cmp	r3, #0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 7


 137 009a 0AD0     		beq	.L4
 191:main.c        ****         {
 192:main.c        ****             sromErrorStatus = ReadSromStatus();
 138              		.loc 1 192 0
 139 009c FFF7FEFF 		bl	ReadSromStatus
 140 00a0 0346     		mov	r3, r0
 141 00a2 7B71     		strb	r3, [r7, #5]
 193:main.c        ****             
 194:main.c        **** 			/* Set USE_LCD macro to 0 if PSoC 5LP is not used as host microcontroller */
 195:main.c        **** 			if(USE_LCD)
 196:main.c        **** 			{
 197:main.c        **** 				LCD_Char_PrintString(" SROM ");
 142              		.loc 1 197 0
 143 00a4 0948     		ldr	r0, .L5+24
 144 00a6 FFF7FEFF 		bl	LCD_Char_PrintString
 198:main.c        **** 				LCD_Char_PrintInt8(sromErrorStatus);
 145              		.loc 1 198 0
 146 00aa 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 147 00ac 1846     		mov	r0, r3
 148 00ae FFF7FEFF 		bl	LCD_Char_PrintInt8
 149              	.L4:
 199:main.c        **** 			}
 200:main.c        ****         }
 201:main.c        ****     }
 202:main.c        **** 
 203:main.c        ****     for( ; ; )
 204:main.c        ****     {
 205:main.c        ****         /* Do Nothing */
 206:main.c        ****     }
 150              		.loc 1 206 0 discriminator 2
 151 00b2 FEE7     		b	.L4
 152              	.L6:
 153              		.align	2
 154              	.L5:
 155 00b4 00000000 		.word	.LC0
 156 00b8 14000000 		.word	.LC1
 157 00bc 28000000 		.word	.LC2
 158 00c0 38000000 		.word	.LC3
 159 00c4 00000000 		.word	currentStep
 160 00c8 48000000 		.word	.LC4
 161 00cc 50000000 		.word	.LC5
 162              		.cfi_endproc
 163              	.LFE63:
 164              		.size	main, .-main
 165              		.section	.text.ProgramDevice,"ax",%progbits
 166              		.align	2
 167              		.global	ProgramDevice
 168              		.thumb
 169              		.thumb_func
 170              		.type	ProgramDevice, %function
 171              	ProgramDevice:
 172              	.LFB64:
 207:main.c        **** }
 208:main.c        **** 
 209:main.c        **** /******************************************************************************
 210:main.c        **** * Function Name: unsigned char ProgramDevice(void)
 211:main.c        **** *******************************************************************************
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 8


 212:main.c        **** * Summary:
 213:main.c        **** *  This function sequentially calls all the functions required to program a
 214:main.c        **** *  PSoC 4. These functions are defined in ProgrammingSteps.h.
 215:main.c        **** *
 216:main.c        **** * Parameters:
 217:main.c        **** *  None.
 218:main.c        **** *
 219:main.c        **** * Return:
 220:main.c        **** *  SUCCESS - All the programming steps executed successfully
 221:main.c        **** *  FAILURE - HSSP programming fails in any one of the programming step
 222:main.c        **** *
 223:main.c        **** ******************************************************************************/
 224:main.c        **** unsigned char ProgramDevice()
 225:main.c        **** {
 173              		.loc 1 225 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 226:main.c        ****     currentStep = 0;
 183              		.loc 1 226 0
 184 0004 3E4B     		ldr	r3, .L18
 185 0006 0022     		movs	r2, #0
 186 0008 1A70     		strb	r2, [r3]
 227:main.c        ****     
 228:main.c        ****     currentStep++;    
 187              		.loc 1 228 0
 188 000a 3D4B     		ldr	r3, .L18
 189 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 190 000e 0133     		adds	r3, r3, #1
 191 0010 DAB2     		uxtb	r2, r3
 192 0012 3B4B     		ldr	r3, .L18
 193 0014 1A70     		strb	r2, [r3]
 229:main.c        ****     if(DeviceAcquire() == FAILURE)     
 194              		.loc 1 229 0
 195 0016 FFF7FEFF 		bl	DeviceAcquire
 196 001a 0346     		mov	r3, r0
 197 001c 002B     		cmp	r3, #0
 198 001e 01D1     		bne	.L8
 230:main.c        ****         return(FAILURE);
 199              		.loc 1 230 0
 200 0020 0023     		movs	r3, #0
 201 0022 6AE0     		b	.L9
 202              	.L8:
 231:main.c        ****     
 232:main.c        ****     currentStep++;
 203              		.loc 1 232 0
 204 0024 364B     		ldr	r3, .L18
 205 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 206 0028 0133     		adds	r3, r3, #1
 207 002a DAB2     		uxtb	r2, r3
 208 002c 344B     		ldr	r3, .L18
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 9


 209 002e 1A70     		strb	r2, [r3]
 233:main.c        ****     if(VerifySiliconId() == FAILURE)    
 210              		.loc 1 233 0
 211 0030 FFF7FEFF 		bl	VerifySiliconId
 212 0034 0346     		mov	r3, r0
 213 0036 002B     		cmp	r3, #0
 214 0038 01D1     		bne	.L10
 234:main.c        ****         return(FAILURE);
 215              		.loc 1 234 0
 216 003a 0023     		movs	r3, #0
 217 003c 5DE0     		b	.L9
 218              	.L10:
 235:main.c        **** 
 236:main.c        ****     currentStep++;
 219              		.loc 1 236 0
 220 003e 304B     		ldr	r3, .L18
 221 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 222 0042 0133     		adds	r3, r3, #1
 223 0044 DAB2     		uxtb	r2, r3
 224 0046 2E4B     		ldr	r3, .L18
 225 0048 1A70     		strb	r2, [r3]
 237:main.c        ****     if(EraseAllFlash() == FAILURE)             
 226              		.loc 1 237 0
 227 004a FFF7FEFF 		bl	EraseAllFlash
 228 004e 0346     		mov	r3, r0
 229 0050 002B     		cmp	r3, #0
 230 0052 01D1     		bne	.L11
 238:main.c        ****         return(FAILURE);
 231              		.loc 1 238 0
 232 0054 0023     		movs	r3, #0
 233 0056 50E0     		b	.L9
 234              	.L11:
 239:main.c        **** 
 240:main.c        ****     currentStep++;
 235              		.loc 1 240 0
 236 0058 294B     		ldr	r3, .L18
 237 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238 005c 0133     		adds	r3, r3, #1
 239 005e DAB2     		uxtb	r2, r3
 240 0060 274B     		ldr	r3, .L18
 241 0062 1A70     		strb	r2, [r3]
 241:main.c        ****     if(ChecksumPrivileged() == FAILURE)                    
 242              		.loc 1 241 0
 243 0064 FFF7FEFF 		bl	ChecksumPrivileged
 244 0068 0346     		mov	r3, r0
 245 006a 002B     		cmp	r3, #0
 246 006c 01D1     		bne	.L12
 242:main.c        ****         return(FAILURE);
 247              		.loc 1 242 0
 248 006e 0023     		movs	r3, #0
 249 0070 43E0     		b	.L9
 250              	.L12:
 243:main.c        **** 
 244:main.c        ****     currentStep++;
 251              		.loc 1 244 0
 252 0072 234B     		ldr	r3, .L18
 253 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 10


 254 0076 0133     		adds	r3, r3, #1
 255 0078 DAB2     		uxtb	r2, r3
 256 007a 214B     		ldr	r3, .L18
 257 007c 1A70     		strb	r2, [r3]
 245:main.c        ****     if(ProgramFlash() == FAILURE)          
 258              		.loc 1 245 0
 259 007e FFF7FEFF 		bl	ProgramFlash
 260 0082 0346     		mov	r3, r0
 261 0084 002B     		cmp	r3, #0
 262 0086 01D1     		bne	.L13
 246:main.c        ****         return(FAILURE);
 263              		.loc 1 246 0
 264 0088 0023     		movs	r3, #0
 265 008a 36E0     		b	.L9
 266              	.L13:
 247:main.c        **** 
 248:main.c        ****     currentStep++;
 267              		.loc 1 248 0
 268 008c 1C4B     		ldr	r3, .L18
 269 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 0090 0133     		adds	r3, r3, #1
 271 0092 DAB2     		uxtb	r2, r3
 272 0094 1A4B     		ldr	r3, .L18
 273 0096 1A70     		strb	r2, [r3]
 249:main.c        ****     if(VerifyFlash() == FAILURE)       
 274              		.loc 1 249 0
 275 0098 FFF7FEFF 		bl	VerifyFlash
 276 009c 0346     		mov	r3, r0
 277 009e 002B     		cmp	r3, #0
 278 00a0 01D1     		bne	.L14
 250:main.c        ****         return(FAILURE);
 279              		.loc 1 250 0
 280 00a2 0023     		movs	r3, #0
 281 00a4 29E0     		b	.L9
 282              	.L14:
 251:main.c        **** 
 252:main.c        ****     currentStep++;
 283              		.loc 1 252 0
 284 00a6 164B     		ldr	r3, .L18
 285 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 286 00aa 0133     		adds	r3, r3, #1
 287 00ac DAB2     		uxtb	r2, r3
 288 00ae 144B     		ldr	r3, .L18
 289 00b0 1A70     		strb	r2, [r3]
 253:main.c        ****     if(ProgramProtectionSettings() == FAILURE) 
 290              		.loc 1 253 0
 291 00b2 FFF7FEFF 		bl	ProgramProtectionSettings
 292 00b6 0346     		mov	r3, r0
 293 00b8 002B     		cmp	r3, #0
 294 00ba 01D1     		bne	.L15
 254:main.c        ****         return(FAILURE);
 295              		.loc 1 254 0
 296 00bc 0023     		movs	r3, #0
 297 00be 1CE0     		b	.L9
 298              	.L15:
 255:main.c        **** 
 256:main.c        ****     currentStep++;
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 11


 299              		.loc 1 256 0
 300 00c0 0F4B     		ldr	r3, .L18
 301 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00c4 0133     		adds	r3, r3, #1
 303 00c6 DAB2     		uxtb	r2, r3
 304 00c8 0D4B     		ldr	r3, .L18
 305 00ca 1A70     		strb	r2, [r3]
 257:main.c        ****     if(VerifyProtectionSettings() == FAILURE)
 306              		.loc 1 257 0
 307 00cc FFF7FEFF 		bl	VerifyProtectionSettings
 308 00d0 0346     		mov	r3, r0
 309 00d2 002B     		cmp	r3, #0
 310 00d4 01D1     		bne	.L16
 258:main.c        ****         return(FAILURE);
 311              		.loc 1 258 0
 312 00d6 0023     		movs	r3, #0
 313 00d8 0FE0     		b	.L9
 314              	.L16:
 259:main.c        **** 
 260:main.c        ****     currentStep++;
 315              		.loc 1 260 0
 316 00da 094B     		ldr	r3, .L18
 317 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 00de 0133     		adds	r3, r3, #1
 319 00e0 DAB2     		uxtb	r2, r3
 320 00e2 074B     		ldr	r3, .L18
 321 00e4 1A70     		strb	r2, [r3]
 261:main.c        ****     if(VerifyChecksum() == FAILURE) 
 322              		.loc 1 261 0
 323 00e6 FFF7FEFF 		bl	VerifyChecksum
 324 00ea 0346     		mov	r3, r0
 325 00ec 002B     		cmp	r3, #0
 326 00ee 01D1     		bne	.L17
 262:main.c        ****         return(FAILURE);
 327              		.loc 1 262 0
 328 00f0 0023     		movs	r3, #0
 329 00f2 02E0     		b	.L9
 330              	.L17:
 263:main.c        **** 
 264:main.c        ****     ExitProgrammingMode();
 331              		.loc 1 264 0
 332 00f4 FFF7FEFF 		bl	ExitProgrammingMode
 265:main.c        ****     
 266:main.c        **** 	/* All the steps were completed successfully */
 267:main.c        ****     return(SUCCESS);
 333              		.loc 1 267 0
 334 00f8 0123     		movs	r3, #1
 335              	.L9:
 268:main.c        **** }
 336              		.loc 1 268 0
 337 00fa 1846     		mov	r0, r3
 338 00fc 80BD     		pop	{r7, pc}
 339              	.L19:
 340 00fe 00BF     		.align	2
 341              	.L18:
 342 0100 00000000 		.word	currentStep
 343              		.cfi_endproc
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 12


 344              	.LFE64:
 345              		.size	ProgramDevice, .-ProgramDevice
 346              		.text
 347              	.Letext0:
 348              		.file 2 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 349              		.file 3 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 350              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 351              		.section	.debug_info,"",%progbits
 352              	.Ldebug_info0:
 353 0000 11010000 		.4byte	0x111
 354 0004 0400     		.2byte	0x4
 355 0006 00000000 		.4byte	.Ldebug_abbrev0
 356 000a 04       		.byte	0x4
 357 000b 01       		.uleb128 0x1
 358 000c 22010000 		.4byte	.LASF20
 359 0010 01       		.byte	0x1
 360 0011 2E000000 		.4byte	.LASF21
 361 0015 81000000 		.4byte	.LASF22
 362 0019 00000000 		.4byte	.Ldebug_ranges0+0
 363 001d 00000000 		.4byte	0
 364 0021 00000000 		.4byte	.Ldebug_line0
 365 0025 02       		.uleb128 0x2
 366 0026 01       		.byte	0x1
 367 0027 06       		.byte	0x6
 368 0028 D2010000 		.4byte	.LASF0
 369 002c 02       		.uleb128 0x2
 370 002d 01       		.byte	0x1
 371 002e 08       		.byte	0x8
 372 002f 06010000 		.4byte	.LASF1
 373 0033 02       		.uleb128 0x2
 374 0034 02       		.byte	0x2
 375 0035 05       		.byte	0x5
 376 0036 FA010000 		.4byte	.LASF2
 377 003a 02       		.uleb128 0x2
 378 003b 02       		.byte	0x2
 379 003c 07       		.byte	0x7
 380 003d 0E000000 		.4byte	.LASF3
 381 0041 03       		.uleb128 0x3
 382 0042 DE010000 		.4byte	.LASF9
 383 0046 02       		.byte	0x2
 384 0047 3F       		.byte	0x3f
 385 0048 4C000000 		.4byte	0x4c
 386 004c 02       		.uleb128 0x2
 387 004d 04       		.byte	0x4
 388 004e 05       		.byte	0x5
 389 004f 19010000 		.4byte	.LASF4
 390 0053 02       		.uleb128 0x2
 391 0054 04       		.byte	0x4
 392 0055 07       		.byte	0x7
 393 0056 48000000 		.4byte	.LASF5
 394 005a 02       		.uleb128 0x2
 395 005b 08       		.byte	0x8
 396 005c 05       		.byte	0x5
 397 005d B7010000 		.4byte	.LASF6
 398 0061 02       		.uleb128 0x2
 399 0062 08       		.byte	0x8
 400 0063 07       		.byte	0x7
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 13


 401 0064 6A000000 		.4byte	.LASF7
 402 0068 04       		.uleb128 0x4
 403 0069 04       		.byte	0x4
 404 006a 05       		.byte	0x5
 405 006b 696E7400 		.ascii	"int\000"
 406 006f 02       		.uleb128 0x2
 407 0070 04       		.byte	0x4
 408 0071 07       		.byte	0x7
 409 0072 21000000 		.4byte	.LASF8
 410 0076 03       		.uleb128 0x3
 411 0077 04020000 		.4byte	.LASF10
 412 007b 03       		.byte	0x3
 413 007c 2C       		.byte	0x2c
 414 007d 41000000 		.4byte	0x41
 415 0081 02       		.uleb128 0x2
 416 0082 04       		.byte	0x4
 417 0083 04       		.byte	0x4
 418 0084 E8010000 		.4byte	.LASF11
 419 0088 02       		.uleb128 0x2
 420 0089 08       		.byte	0x8
 421 008a 04       		.byte	0x4
 422 008b B0010000 		.4byte	.LASF12
 423 008f 02       		.uleb128 0x2
 424 0090 01       		.byte	0x1
 425 0091 08       		.byte	0x8
 426 0092 14010000 		.4byte	.LASF13
 427 0096 02       		.uleb128 0x2
 428 0097 04       		.byte	0x4
 429 0098 07       		.byte	0x7
 430 0099 0C020000 		.4byte	.LASF14
 431 009d 05       		.uleb128 0x5
 432 009e 35000000 		.4byte	.LASF23
 433 00a2 01       		.byte	0x1
 434 00a3 67       		.byte	0x67
 435 00a4 00000000 		.4byte	.LFB63
 436 00a8 D0000000 		.4byte	.LFE63-.LFB63
 437 00ac 01       		.uleb128 0x1
 438 00ad 9C       		.byte	0x9c
 439 00ae DD000000 		.4byte	0xdd
 440 00b2 06       		.uleb128 0x6
 441 00b3 3A000000 		.4byte	.LASF15
 442 00b7 01       		.byte	0x1
 443 00b8 6A       		.byte	0x6a
 444 00b9 2C000000 		.4byte	0x2c
 445 00bd 02       		.uleb128 0x2
 446 00be 91       		.byte	0x91
 447 00bf 77       		.sleb128 -9
 448 00c0 06       		.uleb128 0x6
 449 00c1 FA000000 		.4byte	.LASF16
 450 00c5 01       		.byte	0x1
 451 00c6 6D       		.byte	0x6d
 452 00c7 2C000000 		.4byte	0x2c
 453 00cb 02       		.uleb128 0x2
 454 00cc 91       		.byte	0x91
 455 00cd 76       		.sleb128 -10
 456 00ce 06       		.uleb128 0x6
 457 00cf 5A000000 		.4byte	.LASF17
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 14


 458 00d3 01       		.byte	0x1
 459 00d4 71       		.byte	0x71
 460 00d5 2C000000 		.4byte	0x2c
 461 00d9 02       		.uleb128 0x2
 462 00da 91       		.byte	0x91
 463 00db 75       		.sleb128 -11
 464 00dc 00       		.byte	0
 465 00dd 07       		.uleb128 0x7
 466 00de 00000000 		.4byte	.LASF24
 467 00e2 01       		.byte	0x1
 468 00e3 E0       		.byte	0xe0
 469 00e4 2C000000 		.4byte	0x2c
 470 00e8 00000000 		.4byte	.LFB64
 471 00ec 04010000 		.4byte	.LFE64-.LFB64
 472 00f0 01       		.uleb128 0x1
 473 00f1 9C       		.byte	0x9c
 474 00f2 08       		.uleb128 0x8
 475 00f3 C5010000 		.4byte	.LASF18
 476 00f7 04       		.byte	0x4
 477 00f8 9606     		.2byte	0x696
 478 00fa FE000000 		.4byte	0xfe
 479 00fe 09       		.uleb128 0x9
 480 00ff 76000000 		.4byte	0x76
 481 0103 0A       		.uleb128 0xa
 482 0104 EE010000 		.4byte	.LASF19
 483 0108 01       		.byte	0x1
 484 0109 65       		.byte	0x65
 485 010a 2C000000 		.4byte	0x2c
 486 010e 05       		.uleb128 0x5
 487 010f 03       		.byte	0x3
 488 0110 00000000 		.4byte	currentStep
 489 0114 00       		.byte	0
 490              		.section	.debug_abbrev,"",%progbits
 491              	.Ldebug_abbrev0:
 492 0000 01       		.uleb128 0x1
 493 0001 11       		.uleb128 0x11
 494 0002 01       		.byte	0x1
 495 0003 25       		.uleb128 0x25
 496 0004 0E       		.uleb128 0xe
 497 0005 13       		.uleb128 0x13
 498 0006 0B       		.uleb128 0xb
 499 0007 03       		.uleb128 0x3
 500 0008 0E       		.uleb128 0xe
 501 0009 1B       		.uleb128 0x1b
 502 000a 0E       		.uleb128 0xe
 503 000b 55       		.uleb128 0x55
 504 000c 17       		.uleb128 0x17
 505 000d 11       		.uleb128 0x11
 506 000e 01       		.uleb128 0x1
 507 000f 10       		.uleb128 0x10
 508 0010 17       		.uleb128 0x17
 509 0011 00       		.byte	0
 510 0012 00       		.byte	0
 511 0013 02       		.uleb128 0x2
 512 0014 24       		.uleb128 0x24
 513 0015 00       		.byte	0
 514 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 15


 515 0017 0B       		.uleb128 0xb
 516 0018 3E       		.uleb128 0x3e
 517 0019 0B       		.uleb128 0xb
 518 001a 03       		.uleb128 0x3
 519 001b 0E       		.uleb128 0xe
 520 001c 00       		.byte	0
 521 001d 00       		.byte	0
 522 001e 03       		.uleb128 0x3
 523 001f 16       		.uleb128 0x16
 524 0020 00       		.byte	0
 525 0021 03       		.uleb128 0x3
 526 0022 0E       		.uleb128 0xe
 527 0023 3A       		.uleb128 0x3a
 528 0024 0B       		.uleb128 0xb
 529 0025 3B       		.uleb128 0x3b
 530 0026 0B       		.uleb128 0xb
 531 0027 49       		.uleb128 0x49
 532 0028 13       		.uleb128 0x13
 533 0029 00       		.byte	0
 534 002a 00       		.byte	0
 535 002b 04       		.uleb128 0x4
 536 002c 24       		.uleb128 0x24
 537 002d 00       		.byte	0
 538 002e 0B       		.uleb128 0xb
 539 002f 0B       		.uleb128 0xb
 540 0030 3E       		.uleb128 0x3e
 541 0031 0B       		.uleb128 0xb
 542 0032 03       		.uleb128 0x3
 543 0033 08       		.uleb128 0x8
 544 0034 00       		.byte	0
 545 0035 00       		.byte	0
 546 0036 05       		.uleb128 0x5
 547 0037 2E       		.uleb128 0x2e
 548 0038 01       		.byte	0x1
 549 0039 3F       		.uleb128 0x3f
 550 003a 19       		.uleb128 0x19
 551 003b 03       		.uleb128 0x3
 552 003c 0E       		.uleb128 0xe
 553 003d 3A       		.uleb128 0x3a
 554 003e 0B       		.uleb128 0xb
 555 003f 3B       		.uleb128 0x3b
 556 0040 0B       		.uleb128 0xb
 557 0041 11       		.uleb128 0x11
 558 0042 01       		.uleb128 0x1
 559 0043 12       		.uleb128 0x12
 560 0044 06       		.uleb128 0x6
 561 0045 40       		.uleb128 0x40
 562 0046 18       		.uleb128 0x18
 563 0047 9642     		.uleb128 0x2116
 564 0049 19       		.uleb128 0x19
 565 004a 01       		.uleb128 0x1
 566 004b 13       		.uleb128 0x13
 567 004c 00       		.byte	0
 568 004d 00       		.byte	0
 569 004e 06       		.uleb128 0x6
 570 004f 34       		.uleb128 0x34
 571 0050 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 16


 572 0051 03       		.uleb128 0x3
 573 0052 0E       		.uleb128 0xe
 574 0053 3A       		.uleb128 0x3a
 575 0054 0B       		.uleb128 0xb
 576 0055 3B       		.uleb128 0x3b
 577 0056 0B       		.uleb128 0xb
 578 0057 49       		.uleb128 0x49
 579 0058 13       		.uleb128 0x13
 580 0059 02       		.uleb128 0x2
 581 005a 18       		.uleb128 0x18
 582 005b 00       		.byte	0
 583 005c 00       		.byte	0
 584 005d 07       		.uleb128 0x7
 585 005e 2E       		.uleb128 0x2e
 586 005f 00       		.byte	0
 587 0060 3F       		.uleb128 0x3f
 588 0061 19       		.uleb128 0x19
 589 0062 03       		.uleb128 0x3
 590 0063 0E       		.uleb128 0xe
 591 0064 3A       		.uleb128 0x3a
 592 0065 0B       		.uleb128 0xb
 593 0066 3B       		.uleb128 0x3b
 594 0067 0B       		.uleb128 0xb
 595 0068 27       		.uleb128 0x27
 596 0069 19       		.uleb128 0x19
 597 006a 49       		.uleb128 0x49
 598 006b 13       		.uleb128 0x13
 599 006c 11       		.uleb128 0x11
 600 006d 01       		.uleb128 0x1
 601 006e 12       		.uleb128 0x12
 602 006f 06       		.uleb128 0x6
 603 0070 40       		.uleb128 0x40
 604 0071 18       		.uleb128 0x18
 605 0072 9642     		.uleb128 0x2116
 606 0074 19       		.uleb128 0x19
 607 0075 00       		.byte	0
 608 0076 00       		.byte	0
 609 0077 08       		.uleb128 0x8
 610 0078 34       		.uleb128 0x34
 611 0079 00       		.byte	0
 612 007a 03       		.uleb128 0x3
 613 007b 0E       		.uleb128 0xe
 614 007c 3A       		.uleb128 0x3a
 615 007d 0B       		.uleb128 0xb
 616 007e 3B       		.uleb128 0x3b
 617 007f 05       		.uleb128 0x5
 618 0080 49       		.uleb128 0x49
 619 0081 13       		.uleb128 0x13
 620 0082 3F       		.uleb128 0x3f
 621 0083 19       		.uleb128 0x19
 622 0084 3C       		.uleb128 0x3c
 623 0085 19       		.uleb128 0x19
 624 0086 00       		.byte	0
 625 0087 00       		.byte	0
 626 0088 09       		.uleb128 0x9
 627 0089 35       		.uleb128 0x35
 628 008a 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 17


 629 008b 49       		.uleb128 0x49
 630 008c 13       		.uleb128 0x13
 631 008d 00       		.byte	0
 632 008e 00       		.byte	0
 633 008f 0A       		.uleb128 0xa
 634 0090 34       		.uleb128 0x34
 635 0091 00       		.byte	0
 636 0092 03       		.uleb128 0x3
 637 0093 0E       		.uleb128 0xe
 638 0094 3A       		.uleb128 0x3a
 639 0095 0B       		.uleb128 0xb
 640 0096 3B       		.uleb128 0x3b
 641 0097 0B       		.uleb128 0xb
 642 0098 49       		.uleb128 0x49
 643 0099 13       		.uleb128 0x13
 644 009a 3F       		.uleb128 0x3f
 645 009b 19       		.uleb128 0x19
 646 009c 02       		.uleb128 0x2
 647 009d 18       		.uleb128 0x18
 648 009e 00       		.byte	0
 649 009f 00       		.byte	0
 650 00a0 00       		.byte	0
 651              		.section	.debug_aranges,"",%progbits
 652 0000 24000000 		.4byte	0x24
 653 0004 0200     		.2byte	0x2
 654 0006 00000000 		.4byte	.Ldebug_info0
 655 000a 04       		.byte	0x4
 656 000b 00       		.byte	0
 657 000c 0000     		.2byte	0
 658 000e 0000     		.2byte	0
 659 0010 00000000 		.4byte	.LFB63
 660 0014 D0000000 		.4byte	.LFE63-.LFB63
 661 0018 00000000 		.4byte	.LFB64
 662 001c 04010000 		.4byte	.LFE64-.LFB64
 663 0020 00000000 		.4byte	0
 664 0024 00000000 		.4byte	0
 665              		.section	.debug_ranges,"",%progbits
 666              	.Ldebug_ranges0:
 667 0000 00000000 		.4byte	.LFB63
 668 0004 D0000000 		.4byte	.LFE63
 669 0008 00000000 		.4byte	.LFB64
 670 000c 04010000 		.4byte	.LFE64
 671 0010 00000000 		.4byte	0
 672 0014 00000000 		.4byte	0
 673              		.section	.debug_line,"",%progbits
 674              	.Ldebug_line0:
 675 0000 9A010000 		.section	.debug_str,"MS",%progbits,1
 675      02002E01 
 675      00000201 
 675      FB0E0D00 
 675      01010101 
 676              	.LASF24:
 677 0000 50726F67 		.ascii	"ProgramDevice\000"
 677      72616D44 
 677      65766963 
 677      6500
 678              	.LASF3:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 18


 679 000e 73686F72 		.ascii	"short unsigned int\000"
 679      7420756E 
 679      7369676E 
 679      65642069 
 679      6E7400
 680              	.LASF8:
 681 0021 756E7369 		.ascii	"unsigned int\000"
 681      676E6564 
 681      20696E74 
 681      00
 682              	.LASF21:
 683 002e 6D61696E 		.ascii	"main.c\000"
 683      2E6300
 684              	.LASF23:
 685 0035 6D61696E 		.ascii	"main\000"
 685      00
 686              	.LASF15:
 687 003a 70726F67 		.ascii	"programResult\000"
 687      72616D52 
 687      6573756C 
 687      7400
 688              	.LASF5:
 689 0048 6C6F6E67 		.ascii	"long unsigned int\000"
 689      20756E73 
 689      69676E65 
 689      6420696E 
 689      7400
 690              	.LASF17:
 691 005a 73726F6D 		.ascii	"sromErrorStatus\000"
 691      4572726F 
 691      72537461 
 691      74757300 
 692              	.LASF7:
 693 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 693      206C6F6E 
 693      6720756E 
 693      7369676E 
 693      65642069 
 694              	.LASF22:
 695 0081 5C5C4745 		.ascii	"\\\\GEORGE-OFFICE2\\Users\\George\\Box Sync\\Backbo"
 695      4F524745 
 695      2D4F4646 
 695      49434532 
 695      5C557365 
 696 00ae 6E655C44 		.ascii	"ne\\Design\\Testing\\TestStation\\Software\\HSSP\\A"
 696      65736967 
 696      6E5C5465 
 696      7374696E 
 696      675C5465 
 697 00db 4E383438 		.ascii	"N84858\\A_Hssp_Programmer.cydsn\000"
 697      35385C41 
 697      5F487373 
 697      705F5072 
 697      6F677261 
 698              	.LASF16:
 699 00fa 6572726F 		.ascii	"errorStatus\000"
 699      72537461 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 19


 699      74757300 
 700              	.LASF1:
 701 0106 756E7369 		.ascii	"unsigned char\000"
 701      676E6564 
 701      20636861 
 701      7200
 702              	.LASF13:
 703 0114 63686172 		.ascii	"char\000"
 703      00
 704              	.LASF4:
 705 0119 6C6F6E67 		.ascii	"long int\000"
 705      20696E74 
 705      00
 706              	.LASF20:
 707 0122 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 707      4320342E 
 707      392E3320 
 707      32303135 
 707      30333033 
 708 0155 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 708      20726576 
 708      6973696F 
 708      6E203232 
 708      31323230 
 709 0188 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 709      66756E63 
 709      74696F6E 
 709      2D736563 
 709      74696F6E 
 710              	.LASF12:
 711 01b0 646F7562 		.ascii	"double\000"
 711      6C6500
 712              	.LASF6:
 713 01b7 6C6F6E67 		.ascii	"long long int\000"
 713      206C6F6E 
 713      6720696E 
 713      7400
 714              	.LASF18:
 715 01c5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 715      52784275 
 715      66666572 
 715      00
 716              	.LASF0:
 717 01d2 7369676E 		.ascii	"signed char\000"
 717      65642063 
 717      68617200 
 718              	.LASF9:
 719 01de 5F5F696E 		.ascii	"__int32_t\000"
 719      7433325F 
 719      7400
 720              	.LASF11:
 721 01e8 666C6F61 		.ascii	"float\000"
 721      7400
 722              	.LASF19:
 723 01ee 63757272 		.ascii	"currentStep\000"
 723      656E7453 
 723      74657000 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\cc3ee3PL.s 			page 20


 724              	.LASF2:
 725 01fa 73686F72 		.ascii	"short int\000"
 725      7420696E 
 725      7400
 726              	.LASF10:
 727 0204 696E7433 		.ascii	"int32_t\000"
 727      325F7400 
 728              	.LASF14:
 729 020c 73697A65 		.ascii	"sizetype\000"
 729      74797065 
 729      00
 730              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
