ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DataFetch.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HEX_ReadSiliconId,"ax",%progbits
  19              		.align	2
  20              		.global	HEX_ReadSiliconId
  21              		.thumb
  22              		.thumb_func
  23              		.type	HEX_ReadSiliconId, %function
  24              	HEX_ReadSiliconId:
  25              	.LFB63:
  26              		.file 1 "DataFetch.c"
   1:DataFetch.c   **** /******************************************************************************
   2:DataFetch.c   **** * File Name: DataFetch.c
   3:DataFetch.c   **** * Version 1.0
   4:DataFetch.c   **** *
   5:DataFetch.c   **** * Description:
   6:DataFetch.c   **** *  This source file contains the functions to fetch data from the Hex image and 
   7:DataFetch.c   **** *  load in to the arrays used for Programming.
   8:DataFetch.c   **** *
   9:DataFetch.c   **** * Owner:
  10:DataFetch.c   **** *	Tushar Rastogi, Application Engineer (tusr@cypress.com)
  11:DataFetch.c   **** *
  12:DataFetch.c   **** * Related Document:
  13:DataFetch.c   **** *	AN84858 - PSoC 4 Programming using an External Microcontroller (HSSP)
  14:DataFetch.c   **** *
  15:DataFetch.c   **** * Hardware Dependency:
  16:DataFetch.c   **** *   PSoC 5LP Development Kit - CY8CKIT-050
  17:DataFetch.c   **** *
  18:DataFetch.c   **** * Code Tested With:
  19:DataFetch.c   **** *	PSoC Creator 3.2
  20:DataFetch.c   **** *	ARM GCC 4.8.4
  21:DataFetch.c   **** *	CY8CKIT-050
  22:DataFetch.c   **** *
  23:DataFetch.c   **** * Note:
  24:DataFetch.c   **** *  The definitions of the functions used in this file will change based on the
  25:DataFetch.c   **** *  interface used to get Hex file data.
  26:DataFetch.c   **** *******************************************************************************
  27:DataFetch.c   **** * Copyright (2015), Cypress Semiconductor Corporation.
  28:DataFetch.c   **** *******************************************************************************
  29:DataFetch.c   **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  30:DataFetch.c   **** * protected by and subject to worldwide patent protection (United States and
  31:DataFetch.c   **** * foreign), United States copyright laws and international treaty provisions.
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 2


  32:DataFetch.c   **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  33:DataFetch.c   **** * license to copy, use, modify, create derivative works of, and compile the
  34:DataFetch.c   **** * Cypress Source Code and derivative works for the sole purpose of creating
  35:DataFetch.c   **** * custom software in support of licensee product to be used only in conjunction
  36:DataFetch.c   **** * with a Cypress integrated circuit as specified in the applicable agreement.
  37:DataFetch.c   **** * Any reproduction, modification, translation, compilation, or representation of
  38:DataFetch.c   **** * this software except as specified above is prohibited without the express
  39:DataFetch.c   **** * written permission of Cypress.
  40:DataFetch.c   **** *
  41:DataFetch.c   **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  42:DataFetch.c   **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  43:DataFetch.c   **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  44:DataFetch.c   **** * Cypress reserves the right to make changes without further notice to the
  45:DataFetch.c   **** * materials described herein. Cypress does not assume any liability arising out
  46:DataFetch.c   **** * of the application or use of any product or circuit described herein. Cypress
  47:DataFetch.c   **** * does not authorize its products for use as critical components in life-support
  48:DataFetch.c   **** * systems where a malfunction or failure may reasonably be expected to result in
  49:DataFetch.c   **** * significant injury to the user. The inclusion of Cypress' product in a life-
  50:DataFetch.c   **** * support systems application implies that the manufacturer assumes all risk of
  51:DataFetch.c   **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  52:DataFetch.c   **** * limited by and subject to the applicable Cypress software license agreement.
  53:DataFetch.c   **** 
  54:DataFetch.c   **** ******************************************************************************/
  55:DataFetch.c   **** 
  56:DataFetch.c   **** /******************************************************************************
  57:DataFetch.c   **** *   Header file Inclusion
  58:DataFetch.c   **** ******************************************************************************/
  59:DataFetch.c   **** #include "DataFetch.h"
  60:DataFetch.c   **** #include "HexImage.h"
  61:DataFetch.c   **** #include <device.h>
  62:DataFetch.c   **** 
  63:DataFetch.c   **** /******************************************************************************
  64:DataFetch.c   **** *   Global Constant declaration
  65:DataFetch.c   **** ******************************************************************************/
  66:DataFetch.c   **** 
  67:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  68:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA **************/
  69:DataFetch.c   **** /* The below Global constants are from HexImage.h. The data from these array of
  70:DataFetch.c   ****    constants are loaded in to the arrays passed a parameters to function.
  71:DataFetch.c   ****    These should be modified if different interface is used to get hex file data */
  72:DataFetch.c   **** 
  73:DataFetch.c   **** extern unsigned char const deviceSiliconId_HexFile[SILICON_ID_BYTE_LENGTH]; 
  74:DataFetch.c   **** extern unsigned char const checksumData_HexFile[CHECKSUM_BYTE_LENGTH]; 
  75:DataFetch.c   **** 
  76:DataFetch.c   **** /* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
  77:DataFetch.c   **** #if defined (CY_PSOC5)
  78:DataFetch.c   **** 	#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
  79:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE-NUMBER_OF_FLASH_ROWS_N
  80:DataFetch.c   **** 	#else
  81:DataFetch.c   **** 		extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_H
  82:DataFetch.c   **** 	#endif
  83:DataFetch.c   **** #else
  84:DataFetch.c   **** 	extern unsigned char const flashData_HexFile[NUMBER_OF_FLASH_ROWS_HEX_FILE][FLASH_ROW_BYTE_SIZE_HE
  85:DataFetch.c   **** #endif
  86:DataFetch.c   **** 
  87:DataFetch.c   **** extern unsigned char const flashProtectionData_HexFile[FLASH_PROTECTION_BYTE_SIZE_HEX_FILE];
  88:DataFetch.c   **** extern unsigned char const chipProtectionData_HexFile; 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 3


  89:DataFetch.c   **** 
  90:DataFetch.c   **** /******************************************************************************
  91:DataFetch.c   **** *   Function Definitions
  92:DataFetch.c   **** ******************************************************************************/
  93:DataFetch.c   **** 
  94:DataFetch.c   **** /***************************** USER ATTENTION REQUIRED ************************
  95:DataFetch.c   **** **************** DEPENDS ON INTERFACE USED TO GET HEX FILE DATA ***************
  96:DataFetch.c   **** All the function definitions below should be modified based on the interface 
  97:DataFetch.c   **** used to get Hex file data to be programmed. If a protocol like I2C, UART is 
  98:DataFetch.c   **** used to get the hex file data, change the function definitions accordingly */
  99:DataFetch.c   **** 
 100:DataFetch.c   **** /******************************************************************************
 101:DataFetch.c   **** * Function Name: HEX_ReadSiliconId
 102:DataFetch.c   **** *******************************************************************************
 103:DataFetch.c   **** *
 104:DataFetch.c   **** * Summary:
 105:DataFetch.c   **** *  Loads the Device Silicon ID data in to an array 
 106:DataFetch.c   **** *
 107:DataFetch.c   **** * Parameters:
 108:DataFetch.c   **** *  unsigned long *hexSiliconId - Address of variable which will store the
 109:DataFetch.c   **** *								 Silicon ID fetched
 110:DataFetch.c   **** *
 111:DataFetch.c   **** * Return:
 112:DataFetch.c   **** *  None.
 113:DataFetch.c   **** *
 114:DataFetch.c   **** * Note:
 115:DataFetch.c   **** *  Modify definition based on method of getting programming data
 116:DataFetch.c   **** *
 117:DataFetch.c   **** ******************************************************************************/
 118:DataFetch.c   **** 
 119:DataFetch.c   **** void HEX_ReadSiliconId(unsigned long *hexSiliconId)
 120:DataFetch.c   **** {
  27              		.loc 1 120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 121:DataFetch.c   ****     unsigned char i;
 122:DataFetch.c   ****     
 123:DataFetch.c   ****     
 124:DataFetch.c   ****     for(i = 0; i < SILICON_ID_BYTE_LENGTH; i++)
  40              		.loc 1 124 0
  41 0008 0023     		movs	r3, #0
  42 000a FB73     		strb	r3, [r7, #15]
  43 000c 0FE0     		b	.L2
  44              	.L3:
 125:DataFetch.c   ****     {
 126:DataFetch.c   ****         *hexSiliconId = *hexSiliconId | ((unsigned long)(deviceSiliconId_HexFile[i]) << (8*i));		
  45              		.loc 1 126 0 discriminator 3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 4


  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 1A68     		ldr	r2, [r3]
  48 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  49 0014 0A49     		ldr	r1, .L4
  50 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  51 0018 1946     		mov	r1, r3
  52 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  53 001c DB00     		lsls	r3, r3, #3
  54 001e 01FA03F3 		lsl	r3, r1, r3
  55 0022 1A43     		orrs	r2, r2, r3
  56 0024 7B68     		ldr	r3, [r7, #4]
  57 0026 1A60     		str	r2, [r3]
 124:DataFetch.c   ****     {
  58              		.loc 1 124 0 discriminator 3
  59 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60 002a 0133     		adds	r3, r3, #1
  61 002c FB73     		strb	r3, [r7, #15]
  62              	.L2:
 124:DataFetch.c   ****     {
  63              		.loc 1 124 0 is_stmt 0 discriminator 1
  64 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  65 0030 032B     		cmp	r3, #3
  66 0032 ECD9     		bls	.L3
 127:DataFetch.c   ****     }
 128:DataFetch.c   **** }
  67              		.loc 1 128 0 is_stmt 1
  68 0034 1437     		adds	r7, r7, #20
  69              		.cfi_def_cfa_offset 4
  70 0036 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0038 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 003c 7047     		bx	lr
  77              	.L5:
  78 003e 00BF     		.align	2
  79              	.L4:
  80 0040 00000000 		.word	deviceSiliconId_HexFile
  81              		.cfi_endproc
  82              	.LFE63:
  83              		.size	HEX_ReadSiliconId, .-HEX_ReadSiliconId
  84              		.section	.text.HEX_ReadRowData,"ax",%progbits
  85              		.align	2
  86              		.global	HEX_ReadRowData
  87              		.thumb
  88              		.thumb_func
  89              		.type	HEX_ReadRowData, %function
  90              	HEX_ReadRowData:
  91              	.LFB64:
 129:DataFetch.c   **** 
 130:DataFetch.c   **** 
 131:DataFetch.c   **** /******************************************************************************
 132:DataFetch.c   **** * Function Name: HEX_ReadRowData
 133:DataFetch.c   **** *******************************************************************************
 134:DataFetch.c   **** *
 135:DataFetch.c   **** * Summary:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 5


 136:DataFetch.c   **** *  Loads the row data from hex file in to an array 
 137:DataFetch.c   **** *
 138:DataFetch.c   **** * Parameters:
 139:DataFetch.c   **** *  unsigned short rowCount      - Flash row count for which the data has to be
 140:DataFetch.c   **** *								  fetched 
 141:DataFetch.c   **** *  unsigned char * rowData      - Base address of array which will store the
 142:DataFetch.c   **** *								  Flash row data fetched
 143:DataFetch.c   **** *
 144:DataFetch.c   **** * Return:
 145:DataFetch.c   **** *  None.
 146:DataFetch.c   **** *
 147:DataFetch.c   **** * Note:
 148:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 149:DataFetch.c   **** *  
 150:DataFetch.c   **** *  REMOVE THIS LOGIC WHILE PORTING THE HSSP CODE TO OTHER HOST PROGRAMMER
 151:DataFetch.c   **** *
 152:DataFetch.c   **** ******************************************************************************/
 153:DataFetch.c   **** void HEX_ReadRowData(unsigned short rowCount, unsigned char * rowData)
 154:DataFetch.c   **** {
  92              		.loc 1 154 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 16
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 85B0     		sub	sp, sp, #20
 101              		.cfi_def_cfa_offset 24
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 104 0006 0346     		mov	r3, r0
 105 0008 3960     		str	r1, [r7]
 106 000a FB80     		strh	r3, [r7, #6]	@ movhi
 155:DataFetch.c   ****     unsigned short i; /* Maximum value of 'i' can be 256 */
 156:DataFetch.c   ****     unsigned short j=0;
 107              		.loc 1 156 0
 108 000c 0023     		movs	r3, #0
 109 000e BB81     		strh	r3, [r7, #12]	@ movhi
 157:DataFetch.c   **** 	#if defined (CY_PSOC5)
 158:DataFetch.c   **** 		/* PSoC 5LP cannot hold 256 KB of target flash data. Logic to truncate 256 rows */
 159:DataFetch.c   **** 		#if defined (CY8C4xxxL_FAMILY) || defined (CY8C4xx8_BL_FAMILY)
 160:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE - NUMBER_OF_FLASH_ROWS_NOT_INCLUDED))
 110              		.loc 1 160 0
 111 0010 FB88     		ldrh	r3, [r7, #6]
 112 0012 B3F5357F 		cmp	r3, #724
 113 0016 14D8     		bhi	.L7
 161:DataFetch.c   **** 			{
 162:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 114              		.loc 1 162 0
 115 0018 0023     		movs	r3, #0
 116 001a FB81     		strh	r3, [r7, #14]	@ movhi
 117 001c 0DE0     		b	.L8
 118              	.L9:
 163:DataFetch.c   **** 			    {
 164:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 119              		.loc 1 164 0 discriminator 3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 6


 120 001e FB89     		ldrh	r3, [r7, #14]
 121 0020 3A68     		ldr	r2, [r7]
 122 0022 1344     		add	r3, r3, r2
 123 0024 F988     		ldrh	r1, [r7, #6]
 124 0026 FA89     		ldrh	r2, [r7, #14]
 125 0028 1D48     		ldr	r0, .L16
 126 002a 0902     		lsls	r1, r1, #8
 127 002c 0A44     		add	r2, r2, r1
 128 002e 0244     		add	r2, r2, r0
 129 0030 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 130 0032 1A70     		strb	r2, [r3]
 162:DataFetch.c   **** 			    {
 131              		.loc 1 162 0 discriminator 3
 132 0034 FB89     		ldrh	r3, [r7, #14]
 133 0036 0133     		adds	r3, r3, #1
 134 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 135              	.L8:
 162:DataFetch.c   **** 			    {
 136              		.loc 1 162 0 is_stmt 0 discriminator 1
 137 003a FB89     		ldrh	r3, [r7, #14]
 138 003c FF2B     		cmp	r3, #255
 139 003e EED9     		bls	.L9
 140 0040 28E0     		b	.L6
 141              	.L7:
 165:DataFetch.c   **** 			    }
 166:DataFetch.c   **** 			}
 167:DataFetch.c   **** 			else
 168:DataFetch.c   **** 			{
 169:DataFetch.c   ****                 if(rowCount >= (NUMBER_OF_FLASH_ROWS_HEX_FILE-8))
 142              		.loc 1 169 0 is_stmt 1
 143 0042 FB88     		ldrh	r3, [r7, #6]
 144 0044 B3F57E7F 		cmp	r3, #1016
 145 0048 16D3     		bcc	.L11
 170:DataFetch.c   ****                 {                   
 171:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 146              		.loc 1 171 0
 147 004a 0023     		movs	r3, #0
 148 004c FB81     		strh	r3, [r7, #14]	@ movhi
 149 004e 0FE0     		b	.L12
 150              	.L13:
 172:DataFetch.c   ****     			    {
 173:DataFetch.c   ****     			        rowData[i] = flashData_HexFile_RAM[rowCount - (NUMBER_OF_FLASH_ROWS_HEX_FILE-8)][i];
 151              		.loc 1 173 0 discriminator 3
 152 0050 FB89     		ldrh	r3, [r7, #14]
 153 0052 3A68     		ldr	r2, [r7]
 154 0054 1344     		add	r3, r3, r2
 155 0056 FA88     		ldrh	r2, [r7, #6]
 156 0058 A2F57E71 		sub	r1, r2, #1016
 157 005c FA89     		ldrh	r2, [r7, #14]
 158 005e 1148     		ldr	r0, .L16+4
 159 0060 0902     		lsls	r1, r1, #8
 160 0062 0A44     		add	r2, r2, r1
 161 0064 0244     		add	r2, r2, r0
 162 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 163 0068 1A70     		strb	r2, [r3]
 171:DataFetch.c   ****     			    {
 164              		.loc 1 171 0 discriminator 3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 7


 165 006a FB89     		ldrh	r3, [r7, #14]
 166 006c 0133     		adds	r3, r3, #1
 167 006e FB81     		strh	r3, [r7, #14]	@ movhi
 168              	.L12:
 171:DataFetch.c   ****     			    {
 169              		.loc 1 171 0 is_stmt 0 discriminator 1
 170 0070 FB89     		ldrh	r3, [r7, #14]
 171 0072 FF2B     		cmp	r3, #255
 172 0074 ECD9     		bls	.L13
 173 0076 0DE0     		b	.L6
 174              	.L11:
 174:DataFetch.c   ****                     }
 175:DataFetch.c   ****                 }
 176:DataFetch.c   ****                 else
 177:DataFetch.c   ****                 {
 178:DataFetch.c   ****                     for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 175              		.loc 1 178 0 is_stmt 1
 176 0078 0023     		movs	r3, #0
 177 007a FB81     		strh	r3, [r7, #14]	@ movhi
 178 007c 07E0     		b	.L14
 179              	.L15:
 179:DataFetch.c   ****     			    {
 180:DataFetch.c   ****     			        rowData[i]=0;
 180              		.loc 1 180 0 discriminator 3
 181 007e FB89     		ldrh	r3, [r7, #14]
 182 0080 3A68     		ldr	r2, [r7]
 183 0082 1344     		add	r3, r3, r2
 184 0084 0022     		movs	r2, #0
 185 0086 1A70     		strb	r2, [r3]
 178:DataFetch.c   ****     			    {
 186              		.loc 1 178 0 discriminator 3
 187 0088 FB89     		ldrh	r3, [r7, #14]
 188 008a 0133     		adds	r3, r3, #1
 189 008c FB81     		strh	r3, [r7, #14]	@ movhi
 190              	.L14:
 178:DataFetch.c   ****     			    {
 191              		.loc 1 178 0 is_stmt 0 discriminator 1
 192 008e FB89     		ldrh	r3, [r7, #14]
 193 0090 FF2B     		cmp	r3, #255
 194 0092 F4D9     		bls	.L15
 195              	.L6:
 181:DataFetch.c   ****                     }
 182:DataFetch.c   ****                 } 
 183:DataFetch.c   **** 	        }
 184:DataFetch.c   **** 
 185:DataFetch.c   ****         #else
 186:DataFetch.c   **** 			if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 187:DataFetch.c   **** 			{
 188:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 189:DataFetch.c   **** 			    {
 190:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 191:DataFetch.c   **** 			    }
 192:DataFetch.c   **** 			}
 193:DataFetch.c   **** 		#endif
 194:DataFetch.c   **** 	#else
 195:DataFetch.c   **** 		if(rowCount < (NUMBER_OF_FLASH_ROWS_HEX_FILE))
 196:DataFetch.c   **** 			{
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 8


 197:DataFetch.c   **** 			    for(i = 0; i < FLASH_ROW_BYTE_SIZE_HEX_FILE; i++)
 198:DataFetch.c   **** 			    {
 199:DataFetch.c   **** 			        rowData[i] = flashData_HexFile[rowCount][i];
 200:DataFetch.c   **** 			    }
 201:DataFetch.c   **** 			}
 202:DataFetch.c   **** 	#endif		
 203:DataFetch.c   **** }
 196              		.loc 1 203 0 is_stmt 1
 197 0094 1437     		adds	r7, r7, #20
 198              		.cfi_def_cfa_offset 4
 199 0096 BD46     		mov	sp, r7
 200              		.cfi_def_cfa_register 13
 201              		@ sp needed
 202 0098 5DF8047B 		ldr	r7, [sp], #4
 203              		.cfi_restore 7
 204              		.cfi_def_cfa_offset 0
 205 009c 7047     		bx	lr
 206              	.L17:
 207 009e 00BF     		.align	2
 208              	.L16:
 209 00a0 00000000 		.word	flashData_HexFile
 210 00a4 00000000 		.word	flashData_HexFile_RAM
 211              		.cfi_endproc
 212              	.LFE64:
 213              		.size	HEX_ReadRowData, .-HEX_ReadRowData
 214              		.section	.text.HEX_ReadChipProtectionData,"ax",%progbits
 215              		.align	2
 216              		.global	HEX_ReadChipProtectionData
 217              		.thumb
 218              		.thumb_func
 219              		.type	HEX_ReadChipProtectionData, %function
 220              	HEX_ReadChipProtectionData:
 221              	.LFB65:
 204:DataFetch.c   **** 
 205:DataFetch.c   **** /******************************************************************************
 206:DataFetch.c   **** * Function Name: HEX_ReadChipProtectionData
 207:DataFetch.c   **** *******************************************************************************
 208:DataFetch.c   **** *
 209:DataFetch.c   **** * Summary:
 210:DataFetch.c   **** *  Loads the Chip Protection data in to an array 
 211:DataFetch.c   **** *
 212:DataFetch.c   **** * Parameters:
 213:DataFetch.c   **** *
 214:DataFetch.c   **** *  unsigned char * chipProtectionData - Address of variable which will store
 215:DataFetch.c   **** *										the Chip Protection data fetched
 216:DataFetch.c   **** *
 217:DataFetch.c   **** * Return:
 218:DataFetch.c   **** *  None.
 219:DataFetch.c   **** *
 220:DataFetch.c   **** * Note:
 221:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 222:DataFetch.c   **** *
 223:DataFetch.c   **** ******************************************************************************/
 224:DataFetch.c   **** void HEX_ReadChipProtectionData(unsigned char * chipProtectionData)
 225:DataFetch.c   **** {
 222              		.loc 1 225 0
 223              		.cfi_startproc
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 9


 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 226:DataFetch.c   ****     *chipProtectionData = chipProtectionData_HexFile;
 235              		.loc 1 226 0
 236 0008 044B     		ldr	r3, .L19
 237 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 238 000c 7B68     		ldr	r3, [r7, #4]
 239 000e 1A70     		strb	r2, [r3]
 227:DataFetch.c   **** }
 240              		.loc 1 227 0
 241 0010 0C37     		adds	r7, r7, #12
 242              		.cfi_def_cfa_offset 4
 243 0012 BD46     		mov	sp, r7
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0014 5DF8047B 		ldr	r7, [sp], #4
 247              		.cfi_restore 7
 248              		.cfi_def_cfa_offset 0
 249 0018 7047     		bx	lr
 250              	.L20:
 251 001a 00BF     		.align	2
 252              	.L19:
 253 001c 00000000 		.word	chipProtectionData_HexFile
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	HEX_ReadChipProtectionData, .-HEX_ReadChipProtectionData
 257              		.section	.text.HEX_ReadRowProtectionData,"ax",%progbits
 258              		.align	2
 259              		.global	HEX_ReadRowProtectionData
 260              		.thumb
 261              		.thumb_func
 262              		.type	HEX_ReadRowProtectionData, %function
 263              	HEX_ReadRowProtectionData:
 264              	.LFB66:
 228:DataFetch.c   **** 
 229:DataFetch.c   **** 
 230:DataFetch.c   **** /******************************************************************************
 231:DataFetch.c   **** * Function Name: HEX_ReadRowProtectionData
 232:DataFetch.c   **** *******************************************************************************
 233:DataFetch.c   **** *
 234:DataFetch.c   **** * Summary:
 235:DataFetch.c   **** *  Loads the Flash Row Protection data in to an array 
 236:DataFetch.c   **** *
 237:DataFetch.c   **** * Parameters:
 238:DataFetch.c   **** *
 239:DataFetch.c   **** *  unsigned char * rowProtectionData  - Base address of array which will store
 240:DataFetch.c   **** *									    the Flash Row Protection data fetched
 241:DataFetch.c   **** *  unsigned char rowProtectionByteSize - Size of flash row protection settings
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 10


 242:DataFetch.c   **** *										 in bytes
 243:DataFetch.c   **** *
 244:DataFetch.c   **** * Return:
 245:DataFetch.c   **** *  None.
 246:DataFetch.c   **** *
 247:DataFetch.c   **** * Note:
 248:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 249:DataFetch.c   **** *
 250:DataFetch.c   **** ******************************************************************************/
 251:DataFetch.c   **** void HEX_ReadRowProtectionData(unsigned char rowProtectionByteSize, unsigned char * rowProtectionDa
 252:DataFetch.c   **** {
 265              		.loc 1 252 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 16
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 7, -4
 273 0002 85B0     		sub	sp, sp, #20
 274              		.cfi_def_cfa_offset 24
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 277 0006 0346     		mov	r3, r0
 278 0008 3960     		str	r1, [r7]
 279 000a FB71     		strb	r3, [r7, #7]
 280 000c 1346     		mov	r3, r2
 281 000e BB71     		strb	r3, [r7, #6]
 253:DataFetch.c   ****     unsigned short i;
 254:DataFetch.c   ****     
 255:DataFetch.c   ****     for(i = 0; i < rowProtectionByteSize; i++)
 282              		.loc 1 255 0
 283 0010 0023     		movs	r3, #0
 284 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 285 0014 0EE0     		b	.L22
 286              	.L23:
 256:DataFetch.c   ****     {
 257:DataFetch.c   ****         rowProtectionData[i] = flashProtectionData_HexFile[i + (arrayID * rowProtectionByteSize)];
 287              		.loc 1 257 0 discriminator 3
 288 0016 FB89     		ldrh	r3, [r7, #14]
 289 0018 3A68     		ldr	r2, [r7]
 290 001a 1344     		add	r3, r3, r2
 291 001c F989     		ldrh	r1, [r7, #14]
 292 001e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 293 0020 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 294 0022 00FB02F2 		mul	r2, r0, r2
 295 0026 0A44     		add	r2, r2, r1
 296 0028 0749     		ldr	r1, .L24
 297 002a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 298 002c 1A70     		strb	r2, [r3]
 255:DataFetch.c   ****     {
 299              		.loc 1 255 0 discriminator 3
 300 002e FB89     		ldrh	r3, [r7, #14]
 301 0030 0133     		adds	r3, r3, #1
 302 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 303              	.L22:
 255:DataFetch.c   ****     {
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 11


 304              		.loc 1 255 0 is_stmt 0 discriminator 1
 305 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 306 0036 9BB2     		uxth	r3, r3
 307 0038 FA89     		ldrh	r2, [r7, #14]
 308 003a 9A42     		cmp	r2, r3
 309 003c EBD3     		bcc	.L23
 258:DataFetch.c   ****     }    
 259:DataFetch.c   **** }
 310              		.loc 1 259 0 is_stmt 1
 311 003e 1437     		adds	r7, r7, #20
 312              		.cfi_def_cfa_offset 4
 313 0040 BD46     		mov	sp, r7
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 0042 5DF8047B 		ldr	r7, [sp], #4
 317              		.cfi_restore 7
 318              		.cfi_def_cfa_offset 0
 319 0046 7047     		bx	lr
 320              	.L25:
 321              		.align	2
 322              	.L24:
 323 0048 00000000 		.word	flashProtectionData_HexFile
 324              		.cfi_endproc
 325              	.LFE66:
 326              		.size	HEX_ReadRowProtectionData, .-HEX_ReadRowProtectionData
 327              		.section	.text.HEX_ReadChecksumData,"ax",%progbits
 328              		.align	2
 329              		.global	HEX_ReadChecksumData
 330              		.thumb
 331              		.thumb_func
 332              		.type	HEX_ReadChecksumData, %function
 333              	HEX_ReadChecksumData:
 334              	.LFB67:
 260:DataFetch.c   **** 
 261:DataFetch.c   **** /******************************************************************************
 262:DataFetch.c   **** * Function Name: HEX_ReadChecksumData
 263:DataFetch.c   **** *******************************************************************************
 264:DataFetch.c   **** *
 265:DataFetch.c   **** * Summary:
 266:DataFetch.c   **** *  Loads the Checksum data in to an array 
 267:DataFetch.c   **** *
 268:DataFetch.c   **** * Parameters:
 269:DataFetch.c   **** *  unsigned short * checksumData - Base address of the array which will store
 270:DataFetch.c   **** *								   the Checksum data fetched
 271:DataFetch.c   **** *
 272:DataFetch.c   **** * Return:
 273:DataFetch.c   **** *  None.
 274:DataFetch.c   **** *
 275:DataFetch.c   **** * Note:
 276:DataFetch.c   **** *  Modify definition based on the method of getting programming data
 277:DataFetch.c   **** *
 278:DataFetch.c   **** ******************************************************************************/
 279:DataFetch.c   **** void HEX_ReadChecksumData(unsigned short * checksumData)
 280:DataFetch.c   **** {
 335              		.loc 1 280 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 12


 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0000 80B4     		push	{r7}
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              		.cfi_def_cfa_offset 24
 345 0004 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 281:DataFetch.c   ****     unsigned char i;
 282:DataFetch.c   **** 
 283:DataFetch.c   ****     for(i = 0; i < CHECKSUM_BYTE_LENGTH; i++)
 348              		.loc 1 283 0
 349 0008 0023     		movs	r3, #0
 350 000a FB73     		strb	r3, [r7, #15]
 351 000c 14E0     		b	.L27
 352              	.L28:
 284:DataFetch.c   ****     {
 285:DataFetch.c   ****         *checksumData |= (checksumData_HexFile[i] << (8*i));
 353              		.loc 1 285 0 discriminator 3
 354 000e 7B68     		ldr	r3, [r7, #4]
 355 0010 1B88     		ldrh	r3, [r3]
 356 0012 99B2     		uxth	r1, r3
 357 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 358 0016 0C4A     		ldr	r2, .L29
 359 0018 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 360 001a 1A46     		mov	r2, r3
 361 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 362 001e DB00     		lsls	r3, r3, #3
 363 0020 02FA03F3 		lsl	r3, r2, r3
 364 0024 9BB2     		uxth	r3, r3
 365 0026 0A46     		mov	r2, r1	@ movhi
 366 0028 1343     		orrs	r3, r3, r2
 367 002a 9BB2     		uxth	r3, r3
 368 002c 9AB2     		uxth	r2, r3
 369 002e 7B68     		ldr	r3, [r7, #4]
 370 0030 1A80     		strh	r2, [r3]	@ movhi
 283:DataFetch.c   ****     {
 371              		.loc 1 283 0 discriminator 3
 372 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 373 0034 0133     		adds	r3, r3, #1
 374 0036 FB73     		strb	r3, [r7, #15]
 375              	.L27:
 283:DataFetch.c   ****     {
 376              		.loc 1 283 0 is_stmt 0 discriminator 1
 377 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 378 003a 012B     		cmp	r3, #1
 379 003c E7D9     		bls	.L28
 286:DataFetch.c   ****     }
 287:DataFetch.c   **** }
 380              		.loc 1 287 0 is_stmt 1
 381 003e 1437     		adds	r7, r7, #20
 382              		.cfi_def_cfa_offset 4
 383 0040 BD46     		mov	sp, r7
 384              		.cfi_def_cfa_register 13
 385              		@ sp needed
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 13


 386 0042 5DF8047B 		ldr	r7, [sp], #4
 387              		.cfi_restore 7
 388              		.cfi_def_cfa_offset 0
 389 0046 7047     		bx	lr
 390              	.L30:
 391              		.align	2
 392              	.L29:
 393 0048 00000000 		.word	checksumData_HexFile
 394              		.cfi_endproc
 395              	.LFE67:
 396              		.size	HEX_ReadChecksumData, .-HEX_ReadChecksumData
 397              		.section	.text.GetFlashRowCount,"ax",%progbits
 398              		.align	2
 399              		.global	GetFlashRowCount
 400              		.thumb
 401              		.thumb_func
 402              		.type	GetFlashRowCount, %function
 403              	GetFlashRowCount:
 404              	.LFB68:
 288:DataFetch.c   **** 
 289:DataFetch.c   **** /******************************************************************************
 290:DataFetch.c   **** * Function Name: GetFlashRowCount
 291:DataFetch.c   **** *******************************************************************************
 292:DataFetch.c   **** *
 293:DataFetch.c   **** * Summary:
 294:DataFetch.c   **** *  Returns the total number of Flash rows in the target PSoC 4 device
 295:DataFetch.c   **** *
 296:DataFetch.c   **** * Parameters:
 297:DataFetch.c   **** *  None
 298:DataFetch.c   **** *
 299:DataFetch.c   **** * Return:
 300:DataFetch.c   **** *  unsigned short
 301:DataFetch.c   **** *   Total number of Flash rows in target PSoC 4
 302:DataFetch.c   **** *
 303:DataFetch.c   **** * Note:
 304:DataFetch.c   **** *  The Flash row count is from the HexImage.h file. Modify the definition based
 305:DataFetch.c   **** *  on the method of getting programming data
 306:DataFetch.c   **** *
 307:DataFetch.c   **** ******************************************************************************/
 308:DataFetch.c   **** unsigned short GetFlashRowCount()
 309:DataFetch.c   **** {
 405              		.loc 1 309 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410 0000 80B4     		push	{r7}
 411              		.cfi_def_cfa_offset 4
 412              		.cfi_offset 7, -4
 413 0002 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 310:DataFetch.c   ****     return(NUMBER_OF_FLASH_ROWS_HEX_FILE);
 415              		.loc 1 310 0
 416 0004 4FF48063 		mov	r3, #1024
 311:DataFetch.c   **** }
 417              		.loc 1 311 0
 418 0008 1846     		mov	r0, r3
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 14


 419 000a BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 000c 5DF8047B 		ldr	r7, [sp], #4
 423              		.cfi_restore 7
 424              		.cfi_def_cfa_offset 0
 425 0010 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE68:
 428              		.size	GetFlashRowCount, .-GetFlashRowCount
 429 0012 00BF     		.text
 430              	.Letext0:
 431              		.file 2 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 432              		.file 3 "c:\\program files\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 433              		.file 4 "HexImage.h"
 434              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 435              		.section	.debug_info,"",%progbits
 436              	.Ldebug_info0:
 437 0000 AD020000 		.4byte	0x2ad
 438 0004 0400     		.2byte	0x4
 439 0006 00000000 		.4byte	.Ldebug_abbrev0
 440 000a 04       		.byte	0x4
 441 000b 01       		.uleb128 0x1
 442 000c 24000000 		.4byte	.LASF35
 443 0010 01       		.byte	0x1
 444 0011 B7020000 		.4byte	.LASF36
 445 0015 BB010000 		.4byte	.LASF37
 446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 447 001d 00000000 		.4byte	0
 448 0021 00000000 		.4byte	.Ldebug_line0
 449 0025 02       		.uleb128 0x2
 450 0026 01       		.byte	0x1
 451 0027 06       		.byte	0x6
 452 0028 C3020000 		.4byte	.LASF0
 453 002c 02       		.uleb128 0x2
 454 002d 01       		.byte	0x1
 455 002e 08       		.byte	0x8
 456 002f 11010000 		.4byte	.LASF1
 457 0033 02       		.uleb128 0x2
 458 0034 02       		.byte	0x2
 459 0035 05       		.byte	0x5
 460 0036 8E020000 		.4byte	.LASF2
 461 003a 02       		.uleb128 0x2
 462 003b 02       		.byte	0x2
 463 003c 07       		.byte	0x7
 464 003d 4E010000 		.4byte	.LASF3
 465 0041 03       		.uleb128 0x3
 466 0042 00000000 		.4byte	.LASF9
 467 0046 02       		.byte	0x2
 468 0047 3F       		.byte	0x3f
 469 0048 4C000000 		.4byte	0x4c
 470 004c 02       		.uleb128 0x2
 471 004d 04       		.byte	0x4
 472 004e 05       		.byte	0x5
 473 004f AE020000 		.4byte	.LASF4
 474 0053 02       		.uleb128 0x2
 475 0054 04       		.byte	0x4
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 15


 476 0055 07       		.byte	0x7
 477 0056 96010000 		.4byte	.LASF5
 478 005a 02       		.uleb128 0x2
 479 005b 08       		.byte	0x8
 480 005c 05       		.byte	0x5
 481 005d 7B020000 		.4byte	.LASF6
 482 0061 02       		.uleb128 0x2
 483 0062 08       		.byte	0x8
 484 0063 07       		.byte	0x7
 485 0064 31020000 		.4byte	.LASF7
 486 0068 04       		.uleb128 0x4
 487 0069 04       		.byte	0x4
 488 006a 05       		.byte	0x5
 489 006b 696E7400 		.ascii	"int\000"
 490 006f 02       		.uleb128 0x2
 491 0070 04       		.byte	0x4
 492 0071 07       		.byte	0x7
 493 0072 24020000 		.4byte	.LASF8
 494 0076 03       		.uleb128 0x3
 495 0077 5D020000 		.4byte	.LASF10
 496 007b 03       		.byte	0x3
 497 007c 2C       		.byte	0x2c
 498 007d 41000000 		.4byte	0x41
 499 0081 02       		.uleb128 0x2
 500 0082 04       		.byte	0x4
 501 0083 04       		.byte	0x4
 502 0084 F3000000 		.4byte	.LASF11
 503 0088 02       		.uleb128 0x2
 504 0089 08       		.byte	0x8
 505 008a 04       		.byte	0x4
 506 008b CF020000 		.4byte	.LASF12
 507 008f 02       		.uleb128 0x2
 508 0090 01       		.byte	0x1
 509 0091 08       		.byte	0x8
 510 0092 89020000 		.4byte	.LASF13
 511 0096 02       		.uleb128 0x2
 512 0097 04       		.byte	0x4
 513 0098 07       		.byte	0x7
 514 0099 65020000 		.4byte	.LASF14
 515 009d 05       		.uleb128 0x5
 516 009e 2C000000 		.4byte	0x2c
 517 00a2 AD000000 		.4byte	0xad
 518 00a6 06       		.uleb128 0x6
 519 00a7 96000000 		.4byte	0x96
 520 00ab 03       		.byte	0x3
 521 00ac 00       		.byte	0
 522 00ad 07       		.uleb128 0x7
 523 00ae 04       		.byte	0x4
 524 00af 2C000000 		.4byte	0x2c
 525 00b3 08       		.uleb128 0x8
 526 00b4 0A000000 		.4byte	.LASF15
 527 00b8 01       		.byte	0x1
 528 00b9 77       		.byte	0x77
 529 00ba 00000000 		.4byte	.LFB63
 530 00be 44000000 		.4byte	.LFE63-.LFB63
 531 00c2 01       		.uleb128 0x1
 532 00c3 9C       		.byte	0x9c
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 16


 533 00c4 E3000000 		.4byte	0xe3
 534 00c8 09       		.uleb128 0x9
 535 00c9 6E020000 		.4byte	.LASF17
 536 00cd 01       		.byte	0x1
 537 00ce 77       		.byte	0x77
 538 00cf E3000000 		.4byte	0xe3
 539 00d3 02       		.uleb128 0x2
 540 00d4 91       		.byte	0x91
 541 00d5 6C       		.sleb128 -20
 542 00d6 0A       		.uleb128 0xa
 543 00d7 6900     		.ascii	"i\000"
 544 00d9 01       		.byte	0x1
 545 00da 79       		.byte	0x79
 546 00db 2C000000 		.4byte	0x2c
 547 00df 02       		.uleb128 0x2
 548 00e0 91       		.byte	0x91
 549 00e1 77       		.sleb128 -9
 550 00e2 00       		.byte	0
 551 00e3 07       		.uleb128 0x7
 552 00e4 04       		.byte	0x4
 553 00e5 53000000 		.4byte	0x53
 554 00e9 08       		.uleb128 0x8
 555 00ea C7000000 		.4byte	.LASF16
 556 00ee 01       		.byte	0x1
 557 00ef 99       		.byte	0x99
 558 00f0 00000000 		.4byte	.LFB64
 559 00f4 A8000000 		.4byte	.LFE64-.LFB64
 560 00f8 01       		.uleb128 0x1
 561 00f9 9C       		.byte	0x9c
 562 00fa 33010000 		.4byte	0x133
 563 00fe 09       		.uleb128 0x9
 564 00ff 98020000 		.4byte	.LASF18
 565 0103 01       		.byte	0x1
 566 0104 99       		.byte	0x99
 567 0105 3A000000 		.4byte	0x3a
 568 0109 02       		.uleb128 0x2
 569 010a 91       		.byte	0x91
 570 010b 6E       		.sleb128 -18
 571 010c 09       		.uleb128 0x9
 572 010d 30010000 		.4byte	.LASF19
 573 0111 01       		.byte	0x1
 574 0112 99       		.byte	0x99
 575 0113 AD000000 		.4byte	0xad
 576 0117 02       		.uleb128 0x2
 577 0118 91       		.byte	0x91
 578 0119 68       		.sleb128 -24
 579 011a 0A       		.uleb128 0xa
 580 011b 6900     		.ascii	"i\000"
 581 011d 01       		.byte	0x1
 582 011e 9B       		.byte	0x9b
 583 011f 3A000000 		.4byte	0x3a
 584 0123 02       		.uleb128 0x2
 585 0124 91       		.byte	0x91
 586 0125 76       		.sleb128 -10
 587 0126 0A       		.uleb128 0xa
 588 0127 6A00     		.ascii	"j\000"
 589 0129 01       		.byte	0x1
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 17


 590 012a 9C       		.byte	0x9c
 591 012b 3A000000 		.4byte	0x3a
 592 012f 02       		.uleb128 0x2
 593 0130 91       		.byte	0x91
 594 0131 74       		.sleb128 -12
 595 0132 00       		.byte	0
 596 0133 08       		.uleb128 0x8
 597 0134 F1020000 		.4byte	.LASF20
 598 0138 01       		.byte	0x1
 599 0139 E0       		.byte	0xe0
 600 013a 00000000 		.4byte	.LFB65
 601 013e 20000000 		.4byte	.LFE65-.LFB65
 602 0142 01       		.uleb128 0x1
 603 0143 9C       		.byte	0x9c
 604 0144 57010000 		.4byte	0x157
 605 0148 09       		.uleb128 0x9
 606 0149 A8010000 		.4byte	.LASF21
 607 014d 01       		.byte	0x1
 608 014e E0       		.byte	0xe0
 609 014f AD000000 		.4byte	0xad
 610 0153 02       		.uleb128 0x2
 611 0154 91       		.byte	0x91
 612 0155 74       		.sleb128 -12
 613 0156 00       		.byte	0
 614 0157 08       		.uleb128 0x8
 615 0158 0A020000 		.4byte	.LASF22
 616 015c 01       		.byte	0x1
 617 015d FB       		.byte	0xfb
 618 015e 00000000 		.4byte	.LFB66
 619 0162 4C000000 		.4byte	.LFE66-.LFB66
 620 0166 01       		.uleb128 0x1
 621 0167 9C       		.byte	0x9c
 622 0168 A3010000 		.4byte	0x1a3
 623 016c 09       		.uleb128 0x9
 624 016d 6E010000 		.4byte	.LASF23
 625 0171 01       		.byte	0x1
 626 0172 FB       		.byte	0xfb
 627 0173 2C000000 		.4byte	0x2c
 628 0177 02       		.uleb128 0x2
 629 0178 91       		.byte	0x91
 630 0179 6F       		.sleb128 -17
 631 017a 09       		.uleb128 0x9
 632 017b 84010000 		.4byte	.LASF24
 633 017f 01       		.byte	0x1
 634 0180 FB       		.byte	0xfb
 635 0181 AD000000 		.4byte	0xad
 636 0185 02       		.uleb128 0x2
 637 0186 91       		.byte	0x91
 638 0187 68       		.sleb128 -24
 639 0188 09       		.uleb128 0x9
 640 0189 1C000000 		.4byte	.LASF25
 641 018d 01       		.byte	0x1
 642 018e FB       		.byte	0xfb
 643 018f 2C000000 		.4byte	0x2c
 644 0193 02       		.uleb128 0x2
 645 0194 91       		.byte	0x91
 646 0195 6E       		.sleb128 -18
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 18


 647 0196 0A       		.uleb128 0xa
 648 0197 6900     		.ascii	"i\000"
 649 0199 01       		.byte	0x1
 650 019a FD       		.byte	0xfd
 651 019b 3A000000 		.4byte	0x3a
 652 019f 02       		.uleb128 0x2
 653 01a0 91       		.byte	0x91
 654 01a1 76       		.sleb128 -10
 655 01a2 00       		.byte	0
 656 01a3 0B       		.uleb128 0xb
 657 01a4 B2000000 		.4byte	.LASF26
 658 01a8 01       		.byte	0x1
 659 01a9 1701     		.2byte	0x117
 660 01ab 00000000 		.4byte	.LFB67
 661 01af 4C000000 		.4byte	.LFE67-.LFB67
 662 01b3 01       		.uleb128 0x1
 663 01b4 9C       		.byte	0x9c
 664 01b5 D6010000 		.4byte	0x1d6
 665 01b9 0C       		.uleb128 0xc
 666 01ba A1020000 		.4byte	.LASF27
 667 01be 01       		.byte	0x1
 668 01bf 1701     		.2byte	0x117
 669 01c1 D6010000 		.4byte	0x1d6
 670 01c5 02       		.uleb128 0x2
 671 01c6 91       		.byte	0x91
 672 01c7 6C       		.sleb128 -20
 673 01c8 0D       		.uleb128 0xd
 674 01c9 6900     		.ascii	"i\000"
 675 01cb 01       		.byte	0x1
 676 01cc 1901     		.2byte	0x119
 677 01ce 2C000000 		.4byte	0x2c
 678 01d2 02       		.uleb128 0x2
 679 01d3 91       		.byte	0x91
 680 01d4 77       		.sleb128 -9
 681 01d5 00       		.byte	0
 682 01d6 07       		.uleb128 0x7
 683 01d7 04       		.byte	0x4
 684 01d8 3A000000 		.4byte	0x3a
 685 01dc 0E       		.uleb128 0xe
 686 01dd 1F010000 		.4byte	.LASF38
 687 01e1 01       		.byte	0x1
 688 01e2 3401     		.2byte	0x134
 689 01e4 3A000000 		.4byte	0x3a
 690 01e8 00000000 		.4byte	.LFB68
 691 01ec 12000000 		.4byte	.LFE68-.LFB68
 692 01f0 01       		.uleb128 0x1
 693 01f1 9C       		.byte	0x9c
 694 01f2 0F       		.uleb128 0xf
 695 01f3 F9000000 		.4byte	.LASF28
 696 01f7 01       		.byte	0x1
 697 01f8 49       		.byte	0x49
 698 01f9 FD010000 		.4byte	0x1fd
 699 01fd 10       		.uleb128 0x10
 700 01fe 9D000000 		.4byte	0x9d
 701 0202 05       		.uleb128 0x5
 702 0203 2C000000 		.4byte	0x2c
 703 0207 12020000 		.4byte	0x212
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 19


 704 020b 06       		.uleb128 0x6
 705 020c 96000000 		.4byte	0x96
 706 0210 01       		.byte	0x1
 707 0211 00       		.byte	0
 708 0212 0F       		.uleb128 0xf
 709 0213 48020000 		.4byte	.LASF29
 710 0217 01       		.byte	0x1
 711 0218 4A       		.byte	0x4a
 712 0219 1D020000 		.4byte	0x21d
 713 021d 10       		.uleb128 0x10
 714 021e 02020000 		.4byte	0x202
 715 0222 05       		.uleb128 0x5
 716 0223 2C000000 		.4byte	0x2c
 717 0227 39020000 		.4byte	0x239
 718 022b 11       		.uleb128 0x11
 719 022c 96000000 		.4byte	0x96
 720 0230 D402     		.2byte	0x2d4
 721 0232 06       		.uleb128 0x6
 722 0233 96000000 		.4byte	0x96
 723 0237 FF       		.byte	0xff
 724 0238 00       		.byte	0
 725 0239 0F       		.uleb128 0xf
 726 023a 0C030000 		.4byte	.LASF30
 727 023e 01       		.byte	0x1
 728 023f 4F       		.byte	0x4f
 729 0240 44020000 		.4byte	0x244
 730 0244 10       		.uleb128 0x10
 731 0245 22020000 		.4byte	0x222
 732 0249 05       		.uleb128 0x5
 733 024a 2C000000 		.4byte	0x2c
 734 024e 59020000 		.4byte	0x259
 735 0252 06       		.uleb128 0x6
 736 0253 96000000 		.4byte	0x96
 737 0257 7F       		.byte	0x7f
 738 0258 00       		.byte	0
 739 0259 0F       		.uleb128 0xf
 740 025a D7000000 		.4byte	.LASF31
 741 025e 01       		.byte	0x1
 742 025f 57       		.byte	0x57
 743 0260 64020000 		.4byte	0x264
 744 0264 10       		.uleb128 0x10
 745 0265 49020000 		.4byte	0x249
 746 0269 0F       		.uleb128 0xf
 747 026a D6020000 		.4byte	.LASF32
 748 026e 01       		.byte	0x1
 749 026f 58       		.byte	0x58
 750 0270 74020000 		.4byte	0x274
 751 0274 10       		.uleb128 0x10
 752 0275 2C000000 		.4byte	0x2c
 753 0279 05       		.uleb128 0x5
 754 027a 2C000000 		.4byte	0x2c
 755 027e 8F020000 		.4byte	0x28f
 756 0282 06       		.uleb128 0x6
 757 0283 96000000 		.4byte	0x96
 758 0287 07       		.byte	0x7
 759 0288 06       		.uleb128 0x6
 760 0289 96000000 		.4byte	0x96
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 20


 761 028d FF       		.byte	0xff
 762 028e 00       		.byte	0
 763 028f 0F       		.uleb128 0xf
 764 0290 38010000 		.4byte	.LASF33
 765 0294 04       		.byte	0x4
 766 0295 30       		.byte	0x30
 767 0296 9A020000 		.4byte	0x29a
 768 029a 10       		.uleb128 0x10
 769 029b 79020000 		.4byte	0x279
 770 029f 12       		.uleb128 0x12
 771 02a0 61010000 		.4byte	.LASF34
 772 02a4 05       		.byte	0x5
 773 02a5 5506     		.2byte	0x655
 774 02a7 AB020000 		.4byte	0x2ab
 775 02ab 13       		.uleb128 0x13
 776 02ac 76000000 		.4byte	0x76
 777 02b0 00       		.byte	0
 778              		.section	.debug_abbrev,"",%progbits
 779              	.Ldebug_abbrev0:
 780 0000 01       		.uleb128 0x1
 781 0001 11       		.uleb128 0x11
 782 0002 01       		.byte	0x1
 783 0003 25       		.uleb128 0x25
 784 0004 0E       		.uleb128 0xe
 785 0005 13       		.uleb128 0x13
 786 0006 0B       		.uleb128 0xb
 787 0007 03       		.uleb128 0x3
 788 0008 0E       		.uleb128 0xe
 789 0009 1B       		.uleb128 0x1b
 790 000a 0E       		.uleb128 0xe
 791 000b 55       		.uleb128 0x55
 792 000c 17       		.uleb128 0x17
 793 000d 11       		.uleb128 0x11
 794 000e 01       		.uleb128 0x1
 795 000f 10       		.uleb128 0x10
 796 0010 17       		.uleb128 0x17
 797 0011 00       		.byte	0
 798 0012 00       		.byte	0
 799 0013 02       		.uleb128 0x2
 800 0014 24       		.uleb128 0x24
 801 0015 00       		.byte	0
 802 0016 0B       		.uleb128 0xb
 803 0017 0B       		.uleb128 0xb
 804 0018 3E       		.uleb128 0x3e
 805 0019 0B       		.uleb128 0xb
 806 001a 03       		.uleb128 0x3
 807 001b 0E       		.uleb128 0xe
 808 001c 00       		.byte	0
 809 001d 00       		.byte	0
 810 001e 03       		.uleb128 0x3
 811 001f 16       		.uleb128 0x16
 812 0020 00       		.byte	0
 813 0021 03       		.uleb128 0x3
 814 0022 0E       		.uleb128 0xe
 815 0023 3A       		.uleb128 0x3a
 816 0024 0B       		.uleb128 0xb
 817 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 21


 818 0026 0B       		.uleb128 0xb
 819 0027 49       		.uleb128 0x49
 820 0028 13       		.uleb128 0x13
 821 0029 00       		.byte	0
 822 002a 00       		.byte	0
 823 002b 04       		.uleb128 0x4
 824 002c 24       		.uleb128 0x24
 825 002d 00       		.byte	0
 826 002e 0B       		.uleb128 0xb
 827 002f 0B       		.uleb128 0xb
 828 0030 3E       		.uleb128 0x3e
 829 0031 0B       		.uleb128 0xb
 830 0032 03       		.uleb128 0x3
 831 0033 08       		.uleb128 0x8
 832 0034 00       		.byte	0
 833 0035 00       		.byte	0
 834 0036 05       		.uleb128 0x5
 835 0037 01       		.uleb128 0x1
 836 0038 01       		.byte	0x1
 837 0039 49       		.uleb128 0x49
 838 003a 13       		.uleb128 0x13
 839 003b 01       		.uleb128 0x1
 840 003c 13       		.uleb128 0x13
 841 003d 00       		.byte	0
 842 003e 00       		.byte	0
 843 003f 06       		.uleb128 0x6
 844 0040 21       		.uleb128 0x21
 845 0041 00       		.byte	0
 846 0042 49       		.uleb128 0x49
 847 0043 13       		.uleb128 0x13
 848 0044 2F       		.uleb128 0x2f
 849 0045 0B       		.uleb128 0xb
 850 0046 00       		.byte	0
 851 0047 00       		.byte	0
 852 0048 07       		.uleb128 0x7
 853 0049 0F       		.uleb128 0xf
 854 004a 00       		.byte	0
 855 004b 0B       		.uleb128 0xb
 856 004c 0B       		.uleb128 0xb
 857 004d 49       		.uleb128 0x49
 858 004e 13       		.uleb128 0x13
 859 004f 00       		.byte	0
 860 0050 00       		.byte	0
 861 0051 08       		.uleb128 0x8
 862 0052 2E       		.uleb128 0x2e
 863 0053 01       		.byte	0x1
 864 0054 3F       		.uleb128 0x3f
 865 0055 19       		.uleb128 0x19
 866 0056 03       		.uleb128 0x3
 867 0057 0E       		.uleb128 0xe
 868 0058 3A       		.uleb128 0x3a
 869 0059 0B       		.uleb128 0xb
 870 005a 3B       		.uleb128 0x3b
 871 005b 0B       		.uleb128 0xb
 872 005c 27       		.uleb128 0x27
 873 005d 19       		.uleb128 0x19
 874 005e 11       		.uleb128 0x11
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 22


 875 005f 01       		.uleb128 0x1
 876 0060 12       		.uleb128 0x12
 877 0061 06       		.uleb128 0x6
 878 0062 40       		.uleb128 0x40
 879 0063 18       		.uleb128 0x18
 880 0064 9742     		.uleb128 0x2117
 881 0066 19       		.uleb128 0x19
 882 0067 01       		.uleb128 0x1
 883 0068 13       		.uleb128 0x13
 884 0069 00       		.byte	0
 885 006a 00       		.byte	0
 886 006b 09       		.uleb128 0x9
 887 006c 05       		.uleb128 0x5
 888 006d 00       		.byte	0
 889 006e 03       		.uleb128 0x3
 890 006f 0E       		.uleb128 0xe
 891 0070 3A       		.uleb128 0x3a
 892 0071 0B       		.uleb128 0xb
 893 0072 3B       		.uleb128 0x3b
 894 0073 0B       		.uleb128 0xb
 895 0074 49       		.uleb128 0x49
 896 0075 13       		.uleb128 0x13
 897 0076 02       		.uleb128 0x2
 898 0077 18       		.uleb128 0x18
 899 0078 00       		.byte	0
 900 0079 00       		.byte	0
 901 007a 0A       		.uleb128 0xa
 902 007b 34       		.uleb128 0x34
 903 007c 00       		.byte	0
 904 007d 03       		.uleb128 0x3
 905 007e 08       		.uleb128 0x8
 906 007f 3A       		.uleb128 0x3a
 907 0080 0B       		.uleb128 0xb
 908 0081 3B       		.uleb128 0x3b
 909 0082 0B       		.uleb128 0xb
 910 0083 49       		.uleb128 0x49
 911 0084 13       		.uleb128 0x13
 912 0085 02       		.uleb128 0x2
 913 0086 18       		.uleb128 0x18
 914 0087 00       		.byte	0
 915 0088 00       		.byte	0
 916 0089 0B       		.uleb128 0xb
 917 008a 2E       		.uleb128 0x2e
 918 008b 01       		.byte	0x1
 919 008c 3F       		.uleb128 0x3f
 920 008d 19       		.uleb128 0x19
 921 008e 03       		.uleb128 0x3
 922 008f 0E       		.uleb128 0xe
 923 0090 3A       		.uleb128 0x3a
 924 0091 0B       		.uleb128 0xb
 925 0092 3B       		.uleb128 0x3b
 926 0093 05       		.uleb128 0x5
 927 0094 27       		.uleb128 0x27
 928 0095 19       		.uleb128 0x19
 929 0096 11       		.uleb128 0x11
 930 0097 01       		.uleb128 0x1
 931 0098 12       		.uleb128 0x12
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 23


 932 0099 06       		.uleb128 0x6
 933 009a 40       		.uleb128 0x40
 934 009b 18       		.uleb128 0x18
 935 009c 9742     		.uleb128 0x2117
 936 009e 19       		.uleb128 0x19
 937 009f 01       		.uleb128 0x1
 938 00a0 13       		.uleb128 0x13
 939 00a1 00       		.byte	0
 940 00a2 00       		.byte	0
 941 00a3 0C       		.uleb128 0xc
 942 00a4 05       		.uleb128 0x5
 943 00a5 00       		.byte	0
 944 00a6 03       		.uleb128 0x3
 945 00a7 0E       		.uleb128 0xe
 946 00a8 3A       		.uleb128 0x3a
 947 00a9 0B       		.uleb128 0xb
 948 00aa 3B       		.uleb128 0x3b
 949 00ab 05       		.uleb128 0x5
 950 00ac 49       		.uleb128 0x49
 951 00ad 13       		.uleb128 0x13
 952 00ae 02       		.uleb128 0x2
 953 00af 18       		.uleb128 0x18
 954 00b0 00       		.byte	0
 955 00b1 00       		.byte	0
 956 00b2 0D       		.uleb128 0xd
 957 00b3 34       		.uleb128 0x34
 958 00b4 00       		.byte	0
 959 00b5 03       		.uleb128 0x3
 960 00b6 08       		.uleb128 0x8
 961 00b7 3A       		.uleb128 0x3a
 962 00b8 0B       		.uleb128 0xb
 963 00b9 3B       		.uleb128 0x3b
 964 00ba 05       		.uleb128 0x5
 965 00bb 49       		.uleb128 0x49
 966 00bc 13       		.uleb128 0x13
 967 00bd 02       		.uleb128 0x2
 968 00be 18       		.uleb128 0x18
 969 00bf 00       		.byte	0
 970 00c0 00       		.byte	0
 971 00c1 0E       		.uleb128 0xe
 972 00c2 2E       		.uleb128 0x2e
 973 00c3 00       		.byte	0
 974 00c4 3F       		.uleb128 0x3f
 975 00c5 19       		.uleb128 0x19
 976 00c6 03       		.uleb128 0x3
 977 00c7 0E       		.uleb128 0xe
 978 00c8 3A       		.uleb128 0x3a
 979 00c9 0B       		.uleb128 0xb
 980 00ca 3B       		.uleb128 0x3b
 981 00cb 05       		.uleb128 0x5
 982 00cc 27       		.uleb128 0x27
 983 00cd 19       		.uleb128 0x19
 984 00ce 49       		.uleb128 0x49
 985 00cf 13       		.uleb128 0x13
 986 00d0 11       		.uleb128 0x11
 987 00d1 01       		.uleb128 0x1
 988 00d2 12       		.uleb128 0x12
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 24


 989 00d3 06       		.uleb128 0x6
 990 00d4 40       		.uleb128 0x40
 991 00d5 18       		.uleb128 0x18
 992 00d6 9742     		.uleb128 0x2117
 993 00d8 19       		.uleb128 0x19
 994 00d9 00       		.byte	0
 995 00da 00       		.byte	0
 996 00db 0F       		.uleb128 0xf
 997 00dc 34       		.uleb128 0x34
 998 00dd 00       		.byte	0
 999 00de 03       		.uleb128 0x3
 1000 00df 0E       		.uleb128 0xe
 1001 00e0 3A       		.uleb128 0x3a
 1002 00e1 0B       		.uleb128 0xb
 1003 00e2 3B       		.uleb128 0x3b
 1004 00e3 0B       		.uleb128 0xb
 1005 00e4 49       		.uleb128 0x49
 1006 00e5 13       		.uleb128 0x13
 1007 00e6 3F       		.uleb128 0x3f
 1008 00e7 19       		.uleb128 0x19
 1009 00e8 3C       		.uleb128 0x3c
 1010 00e9 19       		.uleb128 0x19
 1011 00ea 00       		.byte	0
 1012 00eb 00       		.byte	0
 1013 00ec 10       		.uleb128 0x10
 1014 00ed 26       		.uleb128 0x26
 1015 00ee 00       		.byte	0
 1016 00ef 49       		.uleb128 0x49
 1017 00f0 13       		.uleb128 0x13
 1018 00f1 00       		.byte	0
 1019 00f2 00       		.byte	0
 1020 00f3 11       		.uleb128 0x11
 1021 00f4 21       		.uleb128 0x21
 1022 00f5 00       		.byte	0
 1023 00f6 49       		.uleb128 0x49
 1024 00f7 13       		.uleb128 0x13
 1025 00f8 2F       		.uleb128 0x2f
 1026 00f9 05       		.uleb128 0x5
 1027 00fa 00       		.byte	0
 1028 00fb 00       		.byte	0
 1029 00fc 12       		.uleb128 0x12
 1030 00fd 34       		.uleb128 0x34
 1031 00fe 00       		.byte	0
 1032 00ff 03       		.uleb128 0x3
 1033 0100 0E       		.uleb128 0xe
 1034 0101 3A       		.uleb128 0x3a
 1035 0102 0B       		.uleb128 0xb
 1036 0103 3B       		.uleb128 0x3b
 1037 0104 05       		.uleb128 0x5
 1038 0105 49       		.uleb128 0x49
 1039 0106 13       		.uleb128 0x13
 1040 0107 3F       		.uleb128 0x3f
 1041 0108 19       		.uleb128 0x19
 1042 0109 3C       		.uleb128 0x3c
 1043 010a 19       		.uleb128 0x19
 1044 010b 00       		.byte	0
 1045 010c 00       		.byte	0
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 25


 1046 010d 13       		.uleb128 0x13
 1047 010e 35       		.uleb128 0x35
 1048 010f 00       		.byte	0
 1049 0110 49       		.uleb128 0x49
 1050 0111 13       		.uleb128 0x13
 1051 0112 00       		.byte	0
 1052 0113 00       		.byte	0
 1053 0114 00       		.byte	0
 1054              		.section	.debug_aranges,"",%progbits
 1055 0000 44000000 		.4byte	0x44
 1056 0004 0200     		.2byte	0x2
 1057 0006 00000000 		.4byte	.Ldebug_info0
 1058 000a 04       		.byte	0x4
 1059 000b 00       		.byte	0
 1060 000c 0000     		.2byte	0
 1061 000e 0000     		.2byte	0
 1062 0010 00000000 		.4byte	.LFB63
 1063 0014 44000000 		.4byte	.LFE63-.LFB63
 1064 0018 00000000 		.4byte	.LFB64
 1065 001c A8000000 		.4byte	.LFE64-.LFB64
 1066 0020 00000000 		.4byte	.LFB65
 1067 0024 20000000 		.4byte	.LFE65-.LFB65
 1068 0028 00000000 		.4byte	.LFB66
 1069 002c 4C000000 		.4byte	.LFE66-.LFB66
 1070 0030 00000000 		.4byte	.LFB67
 1071 0034 4C000000 		.4byte	.LFE67-.LFB67
 1072 0038 00000000 		.4byte	.LFB68
 1073 003c 12000000 		.4byte	.LFE68-.LFB68
 1074 0040 00000000 		.4byte	0
 1075 0044 00000000 		.4byte	0
 1076              		.section	.debug_ranges,"",%progbits
 1077              	.Ldebug_ranges0:
 1078 0000 00000000 		.4byte	.LFB63
 1079 0004 44000000 		.4byte	.LFE63
 1080 0008 00000000 		.4byte	.LFB64
 1081 000c A8000000 		.4byte	.LFE64
 1082 0010 00000000 		.4byte	.LFB65
 1083 0014 20000000 		.4byte	.LFE65
 1084 0018 00000000 		.4byte	.LFB66
 1085 001c 4C000000 		.4byte	.LFE66
 1086 0020 00000000 		.4byte	.LFB67
 1087 0024 4C000000 		.4byte	.LFE67
 1088 0028 00000000 		.4byte	.LFB68
 1089 002c 12000000 		.4byte	.LFE68
 1090 0030 00000000 		.4byte	0
 1091 0034 00000000 		.4byte	0
 1092              		.section	.debug_line,"",%progbits
 1093              	.Ldebug_line0:
 1094 0000 21020000 		.section	.debug_str,"MS",%progbits,1
 1094      02004101 
 1094      00000201 
 1094      FB0E0D00 
 1094      01010101 
 1095              	.LASF9:
 1096 0000 5F5F696E 		.ascii	"__int32_t\000"
 1096      7433325F 
 1096      7400
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 26


 1097              	.LASF15:
 1098 000a 4845585F 		.ascii	"HEX_ReadSiliconId\000"
 1098      52656164 
 1098      53696C69 
 1098      636F6E49 
 1098      6400
 1099              	.LASF25:
 1100 001c 61727261 		.ascii	"arrayID\000"
 1100      79494400 
 1101              	.LASF35:
 1102 0024 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1102      4320342E 
 1102      392E3320 
 1102      32303135 
 1102      30333033 
 1103 0057 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1103      20726576 
 1103      6973696F 
 1103      6E203232 
 1103      31323230 
 1104 008a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1104      66756E63 
 1104      74696F6E 
 1104      2D736563 
 1104      74696F6E 
 1105              	.LASF26:
 1106 00b2 4845585F 		.ascii	"HEX_ReadChecksumData\000"
 1106      52656164 
 1106      43686563 
 1106      6B73756D 
 1106      44617461 
 1107              	.LASF16:
 1108 00c7 4845585F 		.ascii	"HEX_ReadRowData\000"
 1108      52656164 
 1108      526F7744 
 1108      61746100 
 1109              	.LASF31:
 1110 00d7 666C6173 		.ascii	"flashProtectionData_HexFile\000"
 1110      6850726F 
 1110      74656374 
 1110      696F6E44 
 1110      6174615F 
 1111              	.LASF11:
 1112 00f3 666C6F61 		.ascii	"float\000"
 1112      7400
 1113              	.LASF28:
 1114 00f9 64657669 		.ascii	"deviceSiliconId_HexFile\000"
 1114      63655369 
 1114      6C69636F 
 1114      6E49645F 
 1114      48657846 
 1115              	.LASF1:
 1116 0111 756E7369 		.ascii	"unsigned char\000"
 1116      676E6564 
 1116      20636861 
 1116      7200
 1117              	.LASF38:
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 27


 1118 011f 47657446 		.ascii	"GetFlashRowCount\000"
 1118      6C617368 
 1118      526F7743 
 1118      6F756E74 
 1118      00
 1119              	.LASF19:
 1120 0130 726F7744 		.ascii	"rowData\000"
 1120      61746100 
 1121              	.LASF33:
 1122 0138 666C6173 		.ascii	"flashData_HexFile_RAM\000"
 1122      68446174 
 1122      615F4865 
 1122      7846696C 
 1122      655F5241 
 1123              	.LASF3:
 1124 014e 73686F72 		.ascii	"short unsigned int\000"
 1124      7420756E 
 1124      7369676E 
 1124      65642069 
 1124      6E7400
 1125              	.LASF34:
 1126 0161 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1126      52784275 
 1126      66666572 
 1126      00
 1127              	.LASF23:
 1128 016e 726F7750 		.ascii	"rowProtectionByteSize\000"
 1128      726F7465 
 1128      6374696F 
 1128      6E427974 
 1128      6553697A 
 1129              	.LASF24:
 1130 0184 726F7750 		.ascii	"rowProtectionData\000"
 1130      726F7465 
 1130      6374696F 
 1130      6E446174 
 1130      6100
 1131              	.LASF5:
 1132 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 1132      20756E73 
 1132      69676E65 
 1132      6420696E 
 1132      7400
 1133              	.LASF21:
 1134 01a8 63686970 		.ascii	"chipProtectionData\000"
 1134      50726F74 
 1134      65637469 
 1134      6F6E4461 
 1134      746100
 1135              	.LASF37:
 1136 01bb 443A5C55 		.ascii	"D:\\Users\\WorkBench\\Documents\\PSoC Creator\\HSSP"
 1136      73657273 
 1136      5C576F72 
 1136      6B42656E 
 1136      63685C44 
 1137 01e9 5C414E38 		.ascii	"\\AN84858\\A_Hssp_Programmer.cydsn\000"
 1137      34383538 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 28


 1137      5C415F48 
 1137      7373705F 
 1137      50726F67 
 1138              	.LASF22:
 1139 020a 4845585F 		.ascii	"HEX_ReadRowProtectionData\000"
 1139      52656164 
 1139      526F7750 
 1139      726F7465 
 1139      6374696F 
 1140              	.LASF8:
 1141 0224 756E7369 		.ascii	"unsigned int\000"
 1141      676E6564 
 1141      20696E74 
 1141      00
 1142              	.LASF7:
 1143 0231 6C6F6E67 		.ascii	"long long unsigned int\000"
 1143      206C6F6E 
 1143      6720756E 
 1143      7369676E 
 1143      65642069 
 1144              	.LASF29:
 1145 0248 63686563 		.ascii	"checksumData_HexFile\000"
 1145      6B73756D 
 1145      44617461 
 1145      5F486578 
 1145      46696C65 
 1146              	.LASF10:
 1147 025d 696E7433 		.ascii	"int32_t\000"
 1147      325F7400 
 1148              	.LASF14:
 1149 0265 73697A65 		.ascii	"sizetype\000"
 1149      74797065 
 1149      00
 1150              	.LASF17:
 1151 026e 68657853 		.ascii	"hexSiliconId\000"
 1151      696C6963 
 1151      6F6E4964 
 1151      00
 1152              	.LASF6:
 1153 027b 6C6F6E67 		.ascii	"long long int\000"
 1153      206C6F6E 
 1153      6720696E 
 1153      7400
 1154              	.LASF13:
 1155 0289 63686172 		.ascii	"char\000"
 1155      00
 1156              	.LASF2:
 1157 028e 73686F72 		.ascii	"short int\000"
 1157      7420696E 
 1157      7400
 1158              	.LASF18:
 1159 0298 726F7743 		.ascii	"rowCount\000"
 1159      6F756E74 
 1159      00
 1160              	.LASF27:
 1161 02a1 63686563 		.ascii	"checksumData\000"
 1161      6B73756D 
ARM GAS  C:\Users\WORKBE~1\AppData\Local\Temp\ccFxyL3g.s 			page 29


 1161      44617461 
 1161      00
 1162              	.LASF4:
 1163 02ae 6C6F6E67 		.ascii	"long int\000"
 1163      20696E74 
 1163      00
 1164              	.LASF36:
 1165 02b7 44617461 		.ascii	"DataFetch.c\000"
 1165      46657463 
 1165      682E6300 
 1166              	.LASF0:
 1167 02c3 7369676E 		.ascii	"signed char\000"
 1167      65642063 
 1167      68617200 
 1168              	.LASF12:
 1169 02cf 646F7562 		.ascii	"double\000"
 1169      6C6500
 1170              	.LASF32:
 1171 02d6 63686970 		.ascii	"chipProtectionData_HexFile\000"
 1171      50726F74 
 1171      65637469 
 1171      6F6E4461 
 1171      74615F48 
 1172              	.LASF20:
 1173 02f1 4845585F 		.ascii	"HEX_ReadChipProtectionData\000"
 1173      52656164 
 1173      43686970 
 1173      50726F74 
 1173      65637469 
 1174              	.LASF30:
 1175 030c 666C6173 		.ascii	"flashData_HexFile\000"
 1175      68446174 
 1175      615F4865 
 1175      7846696C 
 1175      6500
 1176              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
